{
  "@type": "NewsArticle",
  "identifier": "2022--06--01--en--showhn--HackerNews--NewsArticle--31582380",
  "url": "https://news.ycombinator.com/item?id=31582380",
  "headline": "MLEM – ML model deployment tool",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi, I'm one of the project creators. MLEM is a tool that helps you deploy your ML models. It’s a Python library + Command line tool.<p>1. MLEM can package an ML model into a Docker image or a Python package, and deploy it to, for example, Heroku.<p>2. MLEM saves all model metadata to a human-readable text file: Python environment, model methods, model input &amp; output data schema and more.<p>3. MLEM helps you turn your Git repository into a Model Registry with features like ML model lifecycle management.<p>Our philosophy is that MLOps tools should be built using the Unix approach - each tool solves a single problem, but solves it very well. MLEM was designed to work hands on hands with Git - it saves all model metadata to a human-readable text files and Git becomes a source of truth for ML models. Model weights file can be stored in the cloud storage using a Data Version Control tool or such - independently of MLEM.<p>Please check out the project: https://github.com/iterative/mlem and the website: https://mlem.ai<p>I’d love to hear your feedback!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "aguschin",
    "url": "https://news.ycombinator.com/user?id=aguschin"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31582380",
  "sameAs": "https://news.ycombinator.com/item?id=31582380",
  "dateCreated": "2022-06-01T16:58:37.105Z",
  "datePublished": "2022-06-01T14:36:10.000Z",
  "dateModified": "2022-06-01T16:58:37.105Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 19
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 11
    }
  ]
}