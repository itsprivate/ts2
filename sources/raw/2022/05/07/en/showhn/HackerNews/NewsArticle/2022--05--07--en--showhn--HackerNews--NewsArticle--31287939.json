{
  "@type": "NewsArticle",
  "identifier": "2022--05--07--en--showhn--HackerNews--NewsArticle--31287939",
  "url": "https://news.ycombinator.com/item?id=31287939",
  "headline": "Tamagui Beta",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Previously shown here[0], Tamagui is now in beta. Itâ€™s a UI kit for React Native &amp; Web with an optimizing compiler.<p>It's quite different from a typical UI kit in that it supports the compiler not only extracts styles at build-time, but also extracts inline styles, even if they use logic like ternaries or conditional spreads. Further, the compiler flattens any styled component completely a div (or View on Native) when it can. I've found that about 20% of our views get flattened completely, leading to much flatter trees, which means really significant performance improvements[1].<p>This is important not just for performance, but also code-sharing.<p>Here's the why: If you just took a React Native Web app today and made it responsive using the typical way, hooks, you'd end up with a very janky web app. I know this because Tamagui was born out of an app that did exactly that, and resizing frequently took 300ms+ per frame. Themes today also have the same failure mode - without a compiler, you thread values through context. That means lots more JS to run, and whole-tree re-rendering on every change. Even beyond themes and responsivity, we found ourselves having to really limit our ambition especially for Native - lists that contained many items slowed down quickly after a certain depth.<p>So Tamagui started solving for themes and media queries and hopefully a bit of tree depth, and it really succeeded at that. To release the alpha I wanted feature parity with modern UI kits, so I added a theme creator, token system, inline token props, media query props, shorthand props (ala tailwind), fonts, and more.<p>Now over the past 6 months its matured immeasurably with components for gradients, images, inputs, labels, switches, shapes, popovers, and tooltips. Animations just landed, which power many of the new components. &quot;npx create-tamagui-app@latest&quot; to help get started fast. Hundreds of bugfixes and better docs. And one thing I'm really proud of: huge TypeScript type quality and performance improvements.<p>[0] <a href=\"https://news.ycombinator.com/item?id=29321748\" rel=\"nofollow\">https://news.ycombinator.com/item?id=29321748</a><p>[1] <a href=\"https://tamagui.dev/docs/intro/benchmarks\" rel=\"nofollow\">https://tamagui.dev/docs/intro/benchmarks</a>",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "nwienert",
    "url": "https://news.ycombinator.com/user?id=nwienert"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31287939",
  "sameAs": "https://tamagui.dev/blog/tamagui-enters-beta-themes-and-animations",
  "dateCreated": "2022-05-07T22:12:27.753Z",
  "datePublished": "2022-05-06T17:47:43.000Z",
  "dateModified": "2022-05-07T22:12:27.753Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 17
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 2
    }
  ]
}