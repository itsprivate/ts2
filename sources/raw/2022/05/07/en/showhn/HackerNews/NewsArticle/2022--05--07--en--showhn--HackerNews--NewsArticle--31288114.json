{
  "@type": "NewsArticle",
  "identifier": "2022--05--07--en--showhn--HackerNews--NewsArticle--31288114",
  "url": "https://news.ycombinator.com/item?id=31288114",
  "headline": "Letlang specification inspired by Python PEPs (WIP)",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN,<p>It's been some time now since I've started working on my own programming language. But I never wrote the spec.<p>I love the concept of PEP (Python Enhancement Proposals) and it inspired me to start writing the spec in a similar format.<p>As of now, I've written 4 LEPs:<p><pre><code>  - LEP-001: Language Target - https://letlang.dev/lep/001/\n  - LEP-002: Import resolution - https://letlang.dev/lep/002/\n  - LEP-003: Statements - https://letlang.dev/lep/003/\n  - LEP-004: Type System - https://letlang.dev/lep/004/\n</code></pre>\nAnd I've started to write the following LEPs:<p><pre><code>  - LEP-005: Functions\n  - LEP-006: Side Effects\n  - LEP-007: SAT Solver\n</code></pre>\nI think this will help me stop changing my mind for starters, but also help me get the implementation right (which is still a work in progress).<p>The Github repository is not yet opensource, I intend to open it once the &quot;hello world&quot; example compiles. I'm still wondering what would be a good license to use for a compiler, I'd love your feedback.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "linkdd",
    "url": "https://news.ycombinator.com/user?id=linkdd"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31288114",
  "sameAs": "https://letlang.dev/lep/",
  "dateCreated": "2022-05-07T22:12:27.758Z",
  "datePublished": "2022-05-06T18:04:03.000Z",
  "dateModified": "2022-05-07T22:12:27.758Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ]
}