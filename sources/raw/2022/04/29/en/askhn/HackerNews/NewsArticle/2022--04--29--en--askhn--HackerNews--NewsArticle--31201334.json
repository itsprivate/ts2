{
  "@type": "NewsArticle",
  "identifier": "2022--04--29--en--askhn--HackerNews--NewsArticle--31201334",
  "url": "https://news.ycombinator.com/item?id=31201334",
  "headline": "Help me review my infrastructure",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I am working on a project. I have broken down the requirements into the following workloads:<p>- Data collection: This is a batch service that receives large amount REST data (expecting 20k request over few hours) when triggered. The trigger will happen once or twice a day.<p>- Pricing algorithm: This service will take the above data as input then price them. I'm expecting 100 req/sec at initial stage.<p>- Transaction: When a customer buys a new product, a webhook is received from payment provider then the database is updated.<p>- Admin: A back office service that will update less often. Here admin can set application parameters and able to get insights of the customers.<p>My current plan for the infrastructure is the following:\n- application server to host the above 4 NodeJS services using PM2 \n- routing using Nginx\n- ELB to loadbalance the app servers\n- Elasticache redis to queue the batch data\n- RDS DB for all services (both read and write)\n- GitActions for CI/CD\n- Monitoring using DataDog<p>Will the above infrastructure will be able to handle my requirements? Can it be improved?<p>My concern is- if there's a way to reliably reconnect if the data sync fails on 1st service?<p>PS: I have a time constraint too. So my team can't be trained to learn K8s for now.<p>Thank you all in advance.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "gkrishna",
    "url": "https://news.ycombinator.com/user?id=gkrishna"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31201334",
  "sameAs": "https://news.ycombinator.com/item?id=31201334",
  "dateCreated": "2022-04-29T04:18:50.164Z",
  "datePublished": "2022-04-29T04:10:07.000Z",
  "dateModified": "2022-04-29T04:18:50.164Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ]
}