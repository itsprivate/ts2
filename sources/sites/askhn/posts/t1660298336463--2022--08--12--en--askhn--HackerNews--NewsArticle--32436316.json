{
  "@type": "NewsArticle",
  "identifier": "2022--08--12--en--askhn--HackerNews--NewsArticle--32436316",
  "url": "https://news.ycombinator.com/item?id=32436316",
  "headline": "Ask HN: How do you work with Dependabot?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I like the idea of Dependabot. A to that actively tracks down dependency updates can be useful. Where I work, we have a daily CI job that creates a PR for each new dependency and runs a build in both our UI (JavaScript) and API (Python) projects. If the build passes, &quot;Happy Days&quot;, we can merge the PR, and the app is all the more secure and effective for it.<p>What I've noticed in practice however, is that occasionally, this process will allow an upgrade to a dependency that will pass the automated build and test step, but introduce the wildest runtime error into the application. Usually at the time when we aim to deliver something.<p>Dependency 'spam' is also a very real issue - https://news.ycombinator.com/item?id=27929596 - the daily deluge of often insignificant updates is a trudge to deal with, especially when coupled with the risk of these sly runtime errors.<p>Dependabot is a great idea, but no-one appears to have anything bad, or practical, to say against it. But it does clearly have flaws.<p>I don't think I'd want to switch the bot off, but I would be interested in hearing how other people get on with the tool.<p>Thanks. :]",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "dynamite-ready",
    "url": "https://news.ycombinator.com/user?id=dynamite-ready"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32436316",
  "sameAs": "https://news.ycombinator.com/item?id=32436316",
  "dateCreated": "2022-08-12T09:58:56.463Z",
  "datePublished": "2022-08-12T09:47:45.000Z",
  "dateModified": "2022-08-12T09:58:56.463Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 你是如何与Dependabot合作的？\n",
  "headline_zh-Hant": "Ask HN: 你是如何與Dependabot合作的？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我喜欢Dependabot的想法。一个能主动追踪依赖性更新的机器人是非常有用的。在我工作的地方，我们每天都有一个CI工作，为每个新的依赖关系创建一个PR，并在我们的UI（JavaScript）和API（Python）项目中运行一个构建。如果构建通过，&quot;Happy Days&quot;，我们就可以合并PR，而应用程序也因此变得更加安全和有效。<p>然而，我在实践中注意到的是，偶尔，这个过程会允许升级到一个依赖，该依赖将通过自动构建和测试步骤，但会在应用程序中引入最疯狂的运行时错误。<p>依赖性 \"垃圾邮件 \"也是一个非常现实的问题--https://news.ycombinator.com/item?id=27929596--每天大量的、往往无关紧要的更新让人难以应付，尤其是在加上这些狡猾的运行时错误的风险。<p>Dependabot是一个伟大的想法，但似乎没有人对它有什么不好的、或实际的意见。但它显然有缺陷。<p>我不认为我想关闭机器人，但我很想听听其他人是如何使用这个工具的。:]\n",
  "description_zh-Hant": "我喜歡Dependabot的想法。一個能主動追蹤依賴性更新的機器人是非常有用的。在我工作的地方，我們每天都有一個CI工作，為每個新的依賴關係創建一個PR，並在我們的UI（JavaScript）和API（Python）項目中運行一個構建。如果構建通過，&quot;Happy Days&quot;，我們就可以合併PR，而應用程序也因此變得更加安全和有效。<p>然而，我在實踐中注意到的是，偶爾，這個過程會允許升級到一個依賴，該依賴將通過自動構建和測試步驟，但會在應用程序中引入最瘋狂的運行時錯誤。<p>依賴性 \"垃圾郵件 \"也是一個非常現實的問題--https://news.ycombinator.com/item?id=27929596--每天大量的、往往無關緊要的更新讓人難以應付，尤其是在加上這些狡猾的運行時錯誤的風險。<p>Dependabot是一個偉大的想法，但似乎沒有人對它有什麼不好的、或實際的意見。但它顯然有缺陷。<p>我不認為我想關閉機器人，但我很想聽聽其他人是如何使用這個工具的。:]\n"
}