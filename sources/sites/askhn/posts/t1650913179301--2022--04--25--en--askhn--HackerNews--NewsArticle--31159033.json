{
  "@type": "NewsArticle",
  "identifier": "2022--04--25--en--askhn--HackerNews--NewsArticle--31159033",
  "url": "https://news.ycombinator.com/item?id=31159033",
  "headline": "Ask HN: What would you use for a Python REST API in 2022?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I've heard a lot of good things about django-rest-framework.<p>However:<p>1. I've used SQLAlchemy in the past and I liked it, and I'm not sure how well it works with Django or if the Django ORM is as powerful. Though at the end of the day I just want a simple mapper and SQL query builder, not necessarily the super high level DSL.<p>2. How useful is the rest of Django when only the REST API parts are needed? Is it easy to disable the unneeded parts? Is it easy to completely remove them from the distribution (primarily for security concerns)<p>What would you recommend for an average Python dev team?<p>Some of the requirements:<p>1. authentication/authorization with support for IdPs.<p>2. paging.<p>3. built-in security features preventing various injections and web attacks.<p>I know about Flask but it seems like a more barebones solution that has a longer ramp-up time, in order to find the right libraries that go together and make them work well.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "oblio",
    "url": "https://news.ycombinator.com/user?id=oblio"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31159033",
  "sameAs": "https://news.ycombinator.com/item?id=31159033",
  "dateCreated": "2022-04-25T18:59:39.301Z",
  "datePublished": "2022-04-25T18:47:19.000Z",
  "dateModified": "2022-04-25T18:59:39.301Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 2022年，你会用什么来做Python REST API？",
  "headline_zh-Hant": "Ask HN: 2022年，你會用什麼來做Python REST API？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我听说过很多关于django-rest-framework的好话。<p>不过：<p>1. 我过去用过SQLAlchemy，我很喜欢它，我不确定它在Django中的效果如何，或者Django ORM是否有那么强大。虽然到最后我只是想要一个简单的映射器和SQL查询生成器，而不一定是超高层的DSL。 <p>2.当只需要REST API部分时，Django的其他部分有多大作用？停用不需要的部分容易吗？<p>对于一个普通的Python开发团队，你会推荐什么？<p>一些要求：<p>1.支持IdP的认证/授权。<p>2.分页。<p>3.内置的安全功能，防止各种注入和网络攻击。<p>我知道Flask，但它似乎是一个更原始的解决方案，有更长的上升时间，以便找到合适的库，使他们工作良好。",
  "description_zh-Hant": "我聽說過很多關於django-rest-framework的好話。<p>不過：<p>1. 我過去用過SQLAlchemy，我很喜歡它，我不確定它在Django中的效果如何，或者Django ORM是否有那麼強大。雖然到最後我只是想要一個簡單的映射器和SQL查詢生成器，而不一定是超高層的DSL。 <p>2.當只需要REST API部分時，Django的其他部分有多大作用？停用不需要的部分容易嗎？<p>對於一個普通的Python開發團隊，你會推薦什麼？<p>一些要求：<p>1.支持IdP的認證/授權。<p>2.分頁。<p>3.內置的安全功能，防止各種注入和網絡攻擊。<p>我知道Flask，但它似乎是一個更原始的解決方案，有更長的上升時間，以便找到合適的庫，使他們工作良好。"
}