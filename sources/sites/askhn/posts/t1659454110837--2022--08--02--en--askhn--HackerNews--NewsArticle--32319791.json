{
  "@type": "NewsArticle",
  "identifier": "2022--08--02--en--askhn--HackerNews--NewsArticle--32319791",
  "url": "https://news.ycombinator.com/item?id=32319791",
  "headline": "Ask HN: What are great resources/courses for non-beginners?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Context: my boss wants me to evaluate the skills and gaps of our dev team and suggest a &quot;learning path&quot; of _existing_ courses every new hire should take.<p>Our work is mostly with data and our new hires are usually DS fresh out of college. They know their stuff when it comes to using Python and Spark to create ML models, but they lack experience in how to work in teams. So I listed the following topics I find vital for them to learn.<p>- Git Branching Strategies\n- Clean Code\n- Design Patterns\n- Testing\n- MLflow\n- CI/CD\n- IDE configuration (linters, useful Text Editor add-ons)\n- Code documentation\n- Dealing with business requirements in code\n- Publishing packages at private repos\n- Code structure (cookiecutters, package managers)\n- Code smells\n- Antipatterns\n- How to code review effectively\n- Debugging<p>My challenge is that because the company subscribes to Coursera - and because they want the course to contain scored tests - they want me to select courses from there. I argued that it doesn't make sense to select university courses to fill a gap many universities don't cover (or didn't in my case). Plus their syllabuses are usually crap: how can I know, for instance, that when a course says it covers &quot;OOP in Python&quot;, the Gang of Four design patterns will also be taught? Other than wasting hours going through courses by myself, that is.<p>So<p>What I needed here are suggestions of other resources I could try to lobby my superiors - from great Udemy courses or Youtube channels.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "brauhaus",
    "url": "https://news.ycombinator.com/user?id=brauhaus"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32319791",
  "sameAs": "https://news.ycombinator.com/item?id=32319791",
  "dateCreated": "2022-08-02T15:28:30.837Z",
  "datePublished": "2022-08-02T15:26:37.000Z",
  "dateModified": "2022-08-02T15:28:30.837Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 有哪些适合非初学者的资源/课程？\n",
  "headline_zh-Hant": "Ask HN: 有哪些適合非初學者的資源/課程？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "背景：我的老板希望我评估我们开发团队的技能和差距，并建议每一位新员工应该学习的_现有课程的&quot;学习路径&quot;。<p>我们的工作主要是与数据有关，我们的新员工通常是刚从大学毕业的DS。当涉及到使用Python和Spark来创建ML模型时，他们知道自己的东西，但他们缺乏如何在团队中工作的经验。因此，我列出了以下我认为对他们至关重要的主题。<p>- Git分支策略\n- 清洁代码\n- 设计模式\n- 测试\n- MLflow\n- CI/CD\n- IDE配置（linters，有用的文本编辑器插件）。\n- 代码文档\n- 处理代码中的业务需求\n- 在私人仓库发布软件包\n- 代码结构（cookiecutters，包管理器）。\n- 代码臭味\n- 反模式\n- 如何有效地进行代码审查\n- 调试<p>我的挑战是，因为公司订阅了Coursera--而且他们希望课程包含评分测试--他们希望我从那里选择课程。我争辩说，选择大学课程来填补许多大学没有覆盖的空白（或者在我的情况下没有）是没有意义的。另外，他们的教学大纲通常是垃圾：例如，我怎么知道当一门课程说它涵盖了&quot;Python中的OOP&quot;时，四人帮的设计模式也会被教授？因此，我需要的是其他资源的建议，我可以尝试游说我的上司 - 从伟大的Udemy课程或Youtube频道。\n",
  "description_zh-Hant": "背景：我的老闆希望我評估我們開發團隊的技能和差距，並建議每一位新員工應該學習的_現有課程的&quot;學習路徑&quot;。<p>我們的工作主要是與數據有關，我們的新員工通常是剛從大學畢業的DS。當涉及到使用Python和Spark來創建ML模型時，他們知道自己的東西，但他們缺乏如何在團隊中工作的經驗。因此，我列出了以下我認為對他們至關重要的主題。<p>- Git分支策略\n- 清潔代碼\n- 設計模式\n- 測試\n- MLflow\n- CI/CD\n- IDE配置（linters，有用的文本編輯器插件）。\n- 代碼文檔\n- 處理代碼中的業務需求\n- 在私人倉庫發佈軟件包\n- 代碼結構（cookiecutters，包管理器）。\n- 代碼臭味\n- 反模式\n- 如何有效地進行代碼審查\n- 調試<p>我的挑戰是，因為公司訂閱了Coursera--而且他們希望課程包含評分測試--他們希望我從那裡選擇課程。我爭辯說，選擇大學課程來填補許多大學沒有覆蓋的空白（或者在我的情況下沒有）是沒有意義的。另外，他們的教學大綱通常是垃圾：例如，我怎麼知道當一門課程說它涵蓋了&quot;Python中的OOP&quot;時，四人幫的設計模式也會被教授？因此，我需要的是其他資源的建議，我可以嘗試遊說我的上司 - 從偉大的Udemy課程或Youtube頻道。\n"
}