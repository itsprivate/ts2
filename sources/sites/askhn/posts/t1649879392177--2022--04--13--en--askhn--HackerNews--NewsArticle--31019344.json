{
  "@type": "NewsArticle",
  "identifier": "2022--04--13--en--askhn--HackerNews--NewsArticle--31019344",
  "url": "https://news.ycombinator.com/item?id=31019344",
  "headline": "Ask HN: Working for companies that optimize software?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Inspired by an AskHN from a few days ago about working for &quot;boring&quot; companies.<p>I really enjoy the process of optimizing software, making it more reliable, faster, smaller code size, anything where a particular metric can be targeted and challenging yourself to hit that target or conclude it's impossible to hit after doing the math out and trying many possible paths.<p>The problem is, how do I go about finding jobs like this? It seems many dev jobs are focused on adding more features, but not optimizing the prior features. It's disappointing adding a new feature that I know will always be half baked, since I don't get to test the limits of the problem that particular feature is trying to solve. Any advice?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "assemblylang",
    "url": "https://news.ycombinator.com/user?id=assemblylang"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31019344",
  "sameAs": "https://news.ycombinator.com/item?id=31019344",
  "dateCreated": "2022-04-13T19:49:52.177Z",
  "datePublished": "2022-04-13T19:46:51.000Z",
  "dateModified": "2022-04-13T19:49:52.177Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 为优化软件的公司工作？",
  "headline_zh-Hant": "Ask HN: 為優化軟件的公司工作？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "<p>我非常喜欢优化软件的过程，使其更可靠、更快速、更小的代码大小，任何可以以特定指标为目标并挑战自己以达到该目标的过程，或者在做完计算并尝试许多可能的路径后得出不可能达到的结论。似乎许多开发工作的重点是增加更多的功能，而不是优化之前的功能。增加一个新的功能是令人失望的，我知道它总是半生不熟的，因为我没有机会测试这个特定功能所要解决的问题的极限。有什么建议吗？",
  "description_zh-Hant": "<p>我非常喜歡優化軟件的過程，使其更可靠、更快速、更小的代碼大小，任何可以以特定指標為目標並挑戰自己以達到該目標的過程，或者在做完計算並嘗試許多可能的路徑後得出不可能達到的結論。似乎許多開發工作的重點是增加更多的功能，而不是優化之前的功能。增加一個新的功能是令人失望的，我知道它總是半生不熟的，因為我沒有機會測試這個特定功能所要解決的問題的極限。有什麼建議嗎？"
}