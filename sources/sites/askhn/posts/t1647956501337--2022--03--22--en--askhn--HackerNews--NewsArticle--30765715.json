{
  "@type": "NewsArticle",
  "identifier": "2022--03--22--en--askhn--HackerNews--NewsArticle--30765715",
  "url": "https://news.ycombinator.com/item?id=30765715",
  "headline": "Ask HN: I'm a researcher and I have to mantain code. Where do I start?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi everyone,\nI'm an engineer (not a software engineer) and I work as a researcher in a university. In my short career I've always written some little code, in particular I script in MATLAB. My programs were never more than 100/200 lines of code.<p>Recently I was appointed as responsible for a big project that lead me in writing more complex software than just small scripts. It is still nothing big (few tens of functions, each with 50-200 lines of code), but it is for sure bigger than before and bigger than I was used to.<p>This code is constantly updated and must be shared with collegues. I also develop on two different machines (the office Windows desktop and my WFH setup composed by a MacBook).<p>Is Git the only way to go to mantain the code? The problem that I have with Git are these:\n1. It is not easy to learn. I have no problem in learning it, but older academics are not willing to put the effort...\n2. Sync between my two machines is not always easy, fur sure not as easy as Dropbox.<p>Is Git the only way to go? If yes, do you have some websites where it is well explained and easy to understand?<p>Thanks!",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "marcomanzoni",
    "url": "https://news.ycombinator.com/user?id=marcomanzoni"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30765715",
  "sameAs": "https://news.ycombinator.com/item?id=30765715",
  "dateCreated": "2022-03-22T13:41:41.337Z",
  "datePublished": "2022-03-22T13:20:18.000Z",
  "dateModified": "2022-03-22T13:41:41.337Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 3
    }
  ],
  "headline_zh-Hans": "Ask HN: 我是一名研究人员，我必须维护代码。我应该从哪里开始呢？",
  "headline_zh-Hant": "Ask HN: 我是一名研究人員，我必須維護代碼。我應該從哪裡開始呢？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "大家好。\n我是一名工程师（不是软件工程师），在一所大学做研究工作。在我短暂的职业生涯中，我一直在写一些小的代码，特别是我在MATLAB中的脚本。<p>最近，我被任命为一个大项目的负责人，这个项目让我写出了比小脚本更复杂的软件。它仍然不算大（几十个函数，每个函数有50-200行代码），但肯定比以前大，也比我习惯的大。<p>这些代码不断更新，必须与同事分享。我还在两台不同的机器上开发（办公室的Windows桌面和我的WFH设置由MacBook组成）。<p>Git是维护代码的唯一途径吗？我对Git的问题有以下几点。\n1. 它不容易学习。我学习它没有问题，但年长的学者们不愿意付出努力......。\n2. 我的两台机器之间的同步并不容易，皮毛肯定没有Dropbox那么容易。<p>Git是唯一的方法吗？如果是的话，你有没有一些网站能很好地解释并易于理解？<p>谢谢",
  "description_zh-Hant": "大家好。\n我是一名工程師（不是軟件工程師），在一所大學做研究工作。在我短暫的職業生涯中，我一直在寫一些小的代碼，特別是我在MATLAB中的腳本。<p>最近，我被任命為一個大項目的負責人，這個項目讓我寫出了比小腳本更復雜的軟件。它仍然不算大（幾十個函數，每個函數有50-200行代碼），但肯定比以前大，也比我習慣的大。<p>這些代碼不斷更新，必須與同事分享。我還在兩臺不同的機器上開發（辦公室的Windows桌面和我的WFH設置由MacBook組成）。<p>Git是維護代碼的唯一途徑嗎？我對Git的問題有以下幾點。\n1. 它不容易學習。我學習它沒有問題，但年長的學者們不願意付出努力......。\n2. 我的兩臺機器之間的同步並不容易，皮毛肯定沒有Dropbox那麼容易。<p>Git是唯一的方法嗎？如果是的話，你有沒有一些網站能很好地解釋並易於理解？<p>謝謝"
}