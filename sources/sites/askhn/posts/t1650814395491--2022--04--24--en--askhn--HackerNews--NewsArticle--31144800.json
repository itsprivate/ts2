{
  "@type": "NewsArticle",
  "identifier": "2022--04--24--en--askhn--HackerNews--NewsArticle--31144800",
  "url": "https://news.ycombinator.com/item?id=31144800",
  "headline": "Ask HN: Rust embedded testing frameworks",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hey HN, I've been developing hardware products with stm32's using Rust. \nI'm starting to look at tests to prevent regression issues and stabilize firmware releases but integration testing with embedded seems quite difficult.<p>What is currently available for embedded testing, both in the C/++ and Rust worlds? What are current industry standards surrounding this?<p>In the past I've seen proprietary simulators built (obviously with their own shortcomings), this would allow integration tests on simulated hardware. Are there any initiatives happening to standardize this in the Rust world?<p>Thanks",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "ostenning",
    "url": "https://news.ycombinator.com/user?id=ostenning"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31144800",
  "sameAs": "https://news.ycombinator.com/item?id=31144800",
  "dateCreated": "2022-04-24T15:33:15.491Z",
  "datePublished": "2022-04-24T15:14:25.000Z",
  "dateModified": "2022-04-24T15:33:15.491Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: Rust嵌入式测试框架",
  "headline_zh-Hant": "Ask HN: Rust嵌入式測試框架",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嘿，HN，我一直在使用Rust开发带有stm32的硬件产品。\n我开始关注测试，以防止回归问题并稳定固件的发布，但与嵌入式的集成测试似乎相当困难。<p>目前在C/++和Rust世界中，有什么可用于嵌入式测试？<p>在过去，我曾看到过专有的模拟器（显然有其自身的缺陷），这将允许在模拟的硬件上进行集成测试。在Rust世界中，是否有任何举措来规范这一点？<p>谢谢",
  "description_zh-Hant": "嘿，HN，我一直在使用Rust開發帶有stm32的硬件產品。\n我開始關注測試，以防止迴歸問題並穩定固件的發佈，但與嵌入式的集成測試似乎相當困難。<p>目前在C/++和Rust世界中，有什麼可用於嵌入式測試？<p>在過去，我曾看到過專有的模擬器（顯然有其自身的缺陷），這將允許在模擬的硬件上進行集成測試。在Rust世界中，是否有任何舉措來規範這一點？<p>謝謝"
}