{
  "@type": "NewsArticle",
  "identifier": "2022--03--07--en--askhn--HackerNews--NewsArticle--30584111",
  "url": "https://news.ycombinator.com/item?id=30584111",
  "headline": "Ask HN: Is it possible to become a good programmer by one's own?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I am talking about self taught people. And by really good I imply good knowledge of CS fundamentals so that when they write code it looks and runs elegantly. Performance is thought about and also readability. We know CS is about computational problem solving not just about programming.<p>Most guides out there say do this course or learn this language or may be do some web development and you are a programmer. I know it works to a certain extent but doesn't achieve anything beyond a certain threshold.<p>Is it possible for someone to self study CS from available materials like good books, public course contents? To such an extent that they have solid grounding in CS fundamentals, learns programming as a tool and become good at it gradually and when needed can venture into a sub-domain and learn about it using the skills already obtained previously to solve problems computationally.<p>Has anyone here done that? Can you share your journey? Or are there any documented blogs or something?<p>No offence to &quot;web developers&quot;, but I am not looking for advice like learn this framework, this is hot. I want transferrable skills.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "debanjan16",
    "url": "https://news.ycombinator.com/user?id=debanjan16"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30584111",
  "sameAs": "https://news.ycombinator.com/item?id=30584111",
  "dateCreated": "2022-03-07T04:11:58.847Z",
  "datePublished": "2022-03-07T04:03:30.000Z",
  "dateModified": "2022-03-07T04:11:58.847Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 有可能靠自己成为一个好的程序员吗？",
  "headline_zh-Hant": "Ask HN: 有可能靠自己成為一個好的程序員嗎？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我说的是自学成才的人。我所说的好，是指对CS基础知识有很好的了解，这样他们写的代码看起来和运行都很优雅。性能和可读性都要考虑到。我们知道CS是关于计算问题的解决，而不仅仅是编程。<p>大多数指南都说做这个课程或学习这种语言，或者做一些网络开发，你就是一个程序员。我知道这在一定程度上是有效的，但在一定程度上没有达到任何效果。<p>是否有可能让一个人从现有的材料中自学CS，如好书、公共课程内容？在这样的程度上，他们有扎实的CS基础知识，学习编程作为一种工具，并逐渐变得擅长它，当需要时，可以冒险进入一个子领域，并使用之前获得的技能学习它，以计算方式解决问题。你能分享你的旅程吗？<p>我无意冒犯&quot;web开发者&quot;，但我不是在寻找诸如学习这个框架的建议，这很热门。我想要的是可转移的技能。",
  "description_zh-Hant": "我說的是自學成才的人。我所說的好，是指對CS基礎知識有很好的瞭解，這樣他們寫的代碼看起來和運行都很優雅。性能和可讀性都要考慮到。我們知道CS是關於計算問題的解決，而不僅僅是編程。<p>大多數指南都說做這個課程或學習這種語言，或者做一些網絡開發，你就是一個程序員。我知道這在一定程度上是有效的，但在一定程度上沒有達到任何效果。<p>是否有可能讓一個人從現有的材料中自學CS，如好書、公共課程內容？在這樣的程度上，他們有紮實的CS基礎知識，學習編程作為一種工具，並逐漸變得擅長它，當需要時，可以冒險進入一個子領域，並使用之前獲得的技能學習它，以計算方式解決問題。你能分享你的旅程嗎？<p>我無意冒犯&quot;web開發者&quot;，但我不是在尋找諸如學習這個框架的建議，這很熱門。我想要的是可轉移的技能。"
}