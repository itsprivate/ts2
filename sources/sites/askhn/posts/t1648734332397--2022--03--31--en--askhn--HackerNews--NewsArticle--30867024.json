{
  "@type": "NewsArticle",
  "identifier": "2022--03--31--en--askhn--HackerNews--NewsArticle--30867024",
  "url": "https://news.ycombinator.com/item?id=30867024",
  "headline": "Ask HN: Open-source data model definition",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I'm trying to find a good language to be able to document relationships between tables. For example, some thing that declares that a `users` table can be joined to a `customers` table on `users.customer_id = customers.id`.<p>Examples of this that I know of<p>- ORMs define these relationships<p>- LookML as a proprietary format<p>- Foreign Keys can kind of do this, but enforce a restriction, rather than just being declarative.<p>Ideally this format can be serialized/deserialized to help inform possible queries that can be run, and is agnostic from an ORM/specific data stack.<p>It's always surprised me the SQL spec itself doesn't have a mechanism for declaring this information about the relationship between tables, other than strict fkeys.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "d_watt",
    "url": "https://news.ycombinator.com/user?id=d_watt"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30867024",
  "sameAs": "https://news.ycombinator.com/item?id=30867024",
  "dateCreated": "2022-03-31T13:45:32.397Z",
  "datePublished": "2022-03-31T13:37:55.000Z",
  "dateModified": "2022-03-31T13:45:32.397Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 开源数据模型定义",
  "headline_zh-Hant": "Ask HN: 開源數據模型定義",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我正在努力寻找一种好的语言，以便能够记录表之间的关系。例如，声明 \"users \"表可以连接到 \"customers \"表上的 \"users.customer_id = customers.id\"。<p>我所知道的例子<p>- ORM定义这些关系<p>- LookML作为一种专有格式<p>- 外键可以做到这一点，但强制限制，而不仅仅是声明性。 <p>事实上，这种格式可以被序列化/反序列化，以帮助告知可以运行的可能的查询，并且与ORM/特定的数据栈无关。<p>除了严格的fkeys之外，SQL规范本身并没有一个机制来声明关于表之间关系的这些信息，这一直让我感到惊讶。",
  "description_zh-Hant": "我正在努力尋找一種好的語言，以便能夠記錄表之間的關係。例如，聲明 \"users \"表可以連接到 \"customers \"表上的 \"users.customer_id = customers.id\"。<p>我所知道的例子<p>- ORM定義這些關係<p>- LookML作為一種專有格式<p>- 外鍵可以做到這一點，但強制限制，而不僅僅是聲明性。 <p>事實上，這種格式可以被序列化/反序列化，以幫助告知可以運行的可能的查詢，並且與ORM/特定的數據棧無關。<p>除了嚴格的fkeys之外，SQL規範本身並沒有一個機制來聲明關於表之間關係的這些信息，這一直讓我感到驚訝。"
}