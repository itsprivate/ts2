{
  "@type": "NewsArticle",
  "identifier": "2022--07--09--en--askhn--HackerNews--NewsArticle--32030093",
  "url": "https://news.ycombinator.com/item?id=32030093",
  "headline": "Ask HN: Which has more jobs: Python or Java+Kotlin? For a Go dev",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I have the impression that only a small fraction of Python jobs are for general programming and backend (my area)... Data science (not my area) seems to be the majority of Python positions.  Am I correct in my analysis? Java+Kotlin, on the other hand, rules the backend.<p>What I love about Python:<p>- Programmers culture of simplicity, simple solutions are always preferred (contrast that to Java, below)<p>- Fast development and iteration<p>- Easy debugging<p>- No need to deal with Maven or Gradle<p>What I hate about Python:<p>- The language is huge, a lot larger than Java, takes a lot more time and effort to master it. It's easy to get started programming in it, but I'm talking about <i>mastering</i> it, not intermediate-level knowledge of Python. And it keeps growing. It's going the way of C++.<p>- The GIL and lack of multithreading. There are several workarounds but they are still workarounds.<p>- Deployment (pip, venv, etc)<p>What I love about Java:<p>- The JVM<p>- The performance<p>- Easy deployments with JARs<p>- Language small enough to master, unlike Python which is huge (although it seems that Kotlin is also huge)<p>What I hate about Java:<p>- Cold start time<p>- Maven (which is its own beast)<p>- Gradle (which is its own beast)<p>- XML obsession<p>- forced OOP where it doesn't fit well<p>- Programmers culture of complexity, love for &quot;design patterns&quot;, overengineering, &quot;enterprise&quot; stuff, getters and setters (public fields frowned upon), etc<p>(I know modern Java has gotten better and less enterprise-y but some points above still stand)<p>I have a feeling I'd be happier writing backends in Python instead of Java (or Kotlin), but the availability of jobs is a huge factor for me.<p>Background: software developer with &gt;10 year experience, haven't touched Java since 2012 (so I'd need a big refresh and relearn it), have worked on simple Python scripts for automation (so I'd need to dive deeper and learn it more) and most of my work has been with Golang. Plus if I decide to go with Java I feel compelled to also learn Kotlin since it seems the future in the JVM world.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "profwalkstr",
    "url": "https://news.ycombinator.com/user?id=profwalkstr"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32030093",
  "sameAs": "https://news.ycombinator.com/item?id=32030093",
  "dateCreated": "2022-07-09T02:10:55.629Z",
  "datePublished": "2022-07-09T00:43:53.000Z",
  "dateModified": "2022-07-09T02:10:55.629Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 11
    }
  ],
  "headline_zh-Hans": "Ask HN: 哪个有更多的就业机会。Python或Java+Kotlin？对于一个Go开发者来说\n",
  "headline_zh-Hant": "Ask HN: 哪個有更多的就業機會。Python或Java+Kotlin？對於一個Go開發者來說\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "I have the impression that only a small fraction of Python jobs are for general programming and backend (my area)... Data science (not my area) seems to be the majority of Python positions.  Am I correct in my analysis? Java+Kotlin, on the other hand, rules the backend.<p>What I love about Python:<p>- Programmers culture of simplicity, simple solutions are always preferred (contrast that to Java, below)<p>- Fast development and iteration<p>- Easy debugging<p>- No need to deal with Maven or Gradle<p>What I hate about Python:<p>- The language is huge, a lot larger than Java, takes a lot more time and effort to master it. It's easy to get started programming in it, but I'm talking about <i>mastering</i> it, not intermediate-level knowledge of Python. And it keeps growing. It's going the way of C++.<p>- The GIL and lack of multithreading. There are several workarounds but they are still workarounds. <p>- Deployment (pip, venv, etc)<p>What I love about Java:<p>- The JVM<p>- The performance<p>- Easy deployments with JARs<p>- Language small enough to master, unlike Python which is huge (although it seems that Kotlin is also huge)<p>What I hate about Java: <p>- Cold start time<p>- Maven (which is its own beast)<p>- Gradle (which is its own beast)<p>- XML obsession<p>- forced OOP where it doesn't fit well<p>- Programmers culture of complexity, love for &quot;design patterns&quot;, overengineering, &quot;enterprise&quot; <p>(我知道现代的Java已经变得更好了，不那么企业化了，但是上面的一些观点仍然成立)<p>我感觉我用Python而不是Java(或Kotlin)来写后端会更开心，但是工作的可用性对我来说是一个巨大的因素。 <p>背景：拥有&gt;10年经验的软件开发人员，自2012年以来没有接触过Java（所以我需要进行一次大的刷新和重新学习），曾为自动化工作过简单的Python脚本（所以我需要更深入地学习它），我的大部分工作都是用Golang。另外，如果我决定使用Java，我觉得有必要同时学习Kotlin，因为它似乎是JVM世界的未来。\n",
  "description_zh-Hant": "I have the impression that only a small fraction of Python jobs are for general programming and backend (my area)... Data science (not my area) seems to be the majority of Python positions.  Am I correct in my analysis? Java+Kotlin, on the other hand, rules the backend.<p>What I love about Python:<p>- Programmers culture of simplicity, simple solutions are always preferred (contrast that to Java, below)<p>- Fast development and iteration<p>- Easy debugging<p>- No need to deal with Maven or Gradle<p>What I hate about Python:<p>- The language is huge, a lot larger than Java, takes a lot more time and effort to master it. It's easy to get started programming in it, but I'm talking about <i>mastering</i> it, not intermediate-level knowledge of Python. And it keeps growing. It's going the way of C++.<p>- The GIL and lack of multithreading. There are several workarounds but they are still workarounds. <p>- Deployment (pip, venv, etc)<p>What I love about Java:<p>- The JVM<p>- The performance<p>- Easy deployments with JARs<p>- Language small enough to master, unlike Python which is huge (although it seems that Kotlin is also huge)<p>What I hate about Java: <p>- Cold start time<p>- Maven (which is its own beast)<p>- Gradle (which is its own beast)<p>- XML obsession<p>- forced OOP where it doesn't fit well<p>- Programmers culture of complexity, love for &quot;design patterns&quot;, overengineering, &quot;enterprise&quot; <p>(我知道現代的Java已經變得更好了，不那麼企業化了，但是上面的一些觀點仍然成立)<p>我感覺我用Python而不是Java(或Kotlin)來寫後端會更開心，但是工作的可用性對我來說是一個巨大的因素。 <p>背景：擁有&gt;10年經驗的軟件開發人員，自2012年以來沒有接觸過Java（所以我需要進行一次大的刷新和重新學習），曾為自動化工作過簡單的Python腳本（所以我需要更深入地學習它），我的大部分工作都是用Golang。另外，如果我決定使用Java，我覺得有必要同時學習Kotlin，因為它似乎是JVM世界的未來。\n"
}