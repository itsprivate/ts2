{
  "@type": "NewsArticle",
  "identifier": "2022--07--07--en--askhn--HackerNews--NewsArticle--32014658",
  "url": "https://news.ycombinator.com/item?id=32014658",
  "headline": "Ask HN: Resources on learning System Design (back end/data engineering)?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I'm looking for resources/tips on how to learn concepts in system design. Things around backend engineering and all the various components that go into building large scale systems (load balancing, message queues, CDNs, etc.). I'd also like to learn concepts around data like database sharding, non-relational database models, streaming/batch (lambda architecture, kappa architecture, etc.) and more.<p>In terms of what I've done so far...<p>I've read<p>- Designing Data Intensive Applications (https://dataintensive.net/) - This book has been recommended a ton on HN/twitter/reddit and I found it extremely useful to get a better idea of how data systems work, different types (OLAP vs. OLTP, data warehouse vs. lake, etc.) and get a better understanding of distributed systems.<p>- Quastor (https://www.quastor.org/) - This is a newsletter that sends out summaries of system design blog posts from Big Tech engineering blogs. It's been helpful to me for getting an understanding of the different components involved in the tech stacks at various companies and how companies think about building scalable systems.<p>- MIT Distributed Systems (https://www.youtube.com/playlist?list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB) - This is a series of lectures by Robert Morris (co-founder of YC) on distributed systems and their properties. The lectures pick a specific tool/technology (Google File System, ZooKeeper, Apache Spark, etc.) and then discusses it. I've really enjoyed reading the papers and watching the lectures.<p>I'd really love any recommendations from the HN community on how else I should be learning about system design.<p>Thank you very much!",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "LewisVerstappen",
    "url": "https://news.ycombinator.com/user?id=LewisVerstappen"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32014658",
  "sameAs": "https://news.ycombinator.com/item?id=32014658",
  "dateCreated": "2022-07-07T15:25:41.829Z",
  "datePublished": "2022-07-07T14:35:45.000Z",
  "dateModified": "2022-07-07T15:25:41.829Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 15
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 学习系统设计（后端/数据工程）的资源？\n",
  "headline_zh-Hant": "Ask HN: 學習系統設計（後端/數據工程）的資源？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我正在寻找关于如何学习系统设计概念的资源/提示。围绕后端工程和建立大规模系统的各种组件（负载平衡、消息队列、CDN等）的事情。我还想学习围绕数据的概念，如数据库分片、非关系型数据库模型、流/批处理（lambda架构、kappa架构等）等等。<p>就我目前所做的而言...<p>我读过<p>- 设计数据密集型应用程序（https://dataintensive. net/）--这本书在HN/twitter/reddit上被推荐了很多，我发现它对于更好地了解数据系统的工作原理、不同的类型（OLAP与OLTP、数据仓库与湖泊等）以及更好地理解分布式系统非常有用。<p>- Quastor（https://www.quastor.org/）--这是一份通讯，从大科技工程博客上发送系统设计博客文章的摘要。这对我了解不同公司的技术栈所涉及的不同组件以及公司如何考虑建立可扩展的系统很有帮助。<p>- 麻省理工学院分布式系统（https://www.youtube.com/playlist?list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB） - 这是Robert Morris（YC的联合创始人）关于分布式系统及其特性的一系列讲座。讲座挑选一个特定的工具/技术（谷歌文件系统、ZooKeeper、Apache Spark等），然后进行讨论。我真的很喜欢阅读这些论文和观看讲座。<p>我真的很喜欢HN社区的任何建议，关于我应该如何学习系统设计的问题。\n",
  "description_zh-Hant": "我正在尋找關於如何學習系統設計概念的資源/提示。圍繞後端工程和建立大規模系統的各種組件（負載平衡、消息隊列、CDN等）的事情。我還想學習圍繞數據的概念，如數據庫分片、非關係型數據庫模型、流/批處理（lambda架構、kappa架構等）等等。<p>就我目前所做的而言...<p>我讀過<p>- 設計數據密集型應用程序（https://dataintensive. net/）--這本書在HN/twitter/reddit上被推薦了很多，我發現它對於更好地瞭解數據系統的工作原理、不同的類型（OLAP與OLTP、數據倉庫與湖泊等）以及更好地理解分佈式系統非常有用。<p>- Quastor（https://www.quastor.org/）--這是一份通訊，從大科技工程博客上發送系統設計博客文章的摘要。這對我瞭解不同公司的技術棧所涉及的不同組件以及公司如何考慮建立可擴展的系統很有幫助。<p>- 麻省理工學院分佈式系統（https://www.youtube.com/playlist?list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB） - 這是Robert Morris（YC的聯合創始人）關於分佈式系統及其特性的一系列講座。講座挑選一個特定的工具/技術（谷歌文件系統、ZooKeeper、Apache Spark等），然後進行討論。我真的很喜歡閱讀這些論文和觀看講座。<p>我真的很喜歡HN社區的任何建議，關於我應該如何學習系統設計的問題。\n"
}