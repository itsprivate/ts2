{
  "@type": "NewsArticle",
  "identifier": "2022--07--15--en--askhn--HackerNews--NewsArticle--32106380",
  "url": "https://news.ycombinator.com/item?id=32106380",
  "headline": "Ask HN: Experiences with low-code systems (Budibase,Appsmith etc.)?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I'm thinking about introducing a low-code system to handle internal operational processes. I'm thinking things like viewing/handling dead-letter messages, manual intervention decision points, short lived operational tasks that haven't yet/won't be automated.<p>I'd expect the software engineering team to manage these apps, so the benefit I can see is the quick turnaround on the UI, rather than handing over to non-engineering users for development.<p>What are people's experiences with these tools? More specifically:<p>Can you do an effective SDLC with them? e.g. code on a staging environment, push to version control, promote to prod, rollback to old version<p>Have you actually saved time with them?<p>Did you avoid introducing unworkable complexity?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "alphalima",
    "url": "https://news.ycombinator.com/user?id=alphalima"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32106380",
  "sameAs": "https://news.ycombinator.com/item?id=32106380",
  "dateCreated": "2022-07-15T09:46:45.713Z",
  "datePublished": "2022-07-15T09:41:15.000Z",
  "dateModified": "2022-07-15T09:46:45.713Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 对低代码系统（Budibase,Appsmith等）有经验吗？\n",
  "headline_zh-Hant": "Ask HN: 對低代碼系統（Budibase,Appsmith等）有經驗嗎？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我正在考虑引入一个低代码系统来处理内部操作流程。我在想，诸如查看/处理死信息、人工干预决策点、尚未/不会实现自动化的短期操作任务等。<p>我希望软件工程团队能够管理这些应用程序，所以我看到的好处是UI的快速周转，而不是交给非工程用户开发。<p>人们对这些工具有什么经验？更具体地说：<p>你能用它们进行有效的SDLC吗？例如，在暂存环境中编写代码，推送到版本控制，推广到prod，回滚到旧版本<p>你是否真的用它们节省了时间？<p>你是否避免引入无法操作的复杂性？\n",
  "description_zh-Hant": "我正在考慮引入一個低代碼系統來處理內部操作流程。我在想，諸如查看/處理死信息、人工干預決策點、尚未/不會實現自動化的短期操作任務等。<p>我希望軟件工程團隊能夠管理這些應用程序，所以我看到的好處是UI的快速週轉，而不是交給非工程用戶開發。<p>人們對這些工具有什麼經驗？更具體地說：<p>你能用它們進行有效的SDLC嗎？例如，在暫存環境中編寫代碼，推送到版本控制，推廣到prod，回滾到舊版本<p>你是否真的用它們節省了時間？<p>你是否避免引入無法操作的複雜性？\n"
}