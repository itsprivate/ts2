{
  "@type": "NewsArticle",
  "identifier": "2022--07--13--en--askhn--HackerNews--NewsArticle--32078428",
  "url": "https://news.ycombinator.com/item?id=32078428",
  "headline": "Ask HN: How to have GraphQL in an offline only React Native application",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I am driving myself crazy trying to find a combination that will allow me to setup an offline react native app with a graph database.<p>Tick off the common suggestions:<p>1- No this is not for state management (Redux, Redux-persist)<p>2- I don't want to use sqlite or any other relational setup<p>3- I don't want to use serialize then async store<p>Now that we have those out of the way realm DB is promising but it requires the app to use the db in single thread mode, doesn't support dynamic schema changes and outside of realm-orm I don't see anywhere where I can type it to TS<p>Apollo client with persistence seems promising but I am concerned that this is a caching solution not a first class offline support.<p>Actualbudget (a local first app) is doing sqlite3 (table storage) and CDRTs message queue for eventual consistency. I am curious how anytype.io is storing their graph at the edge.<p>The short pitch is: imagine if you had a structured graph of your personal data (private &amp; synchronized offline), we would be able to build tons of cross silo solutions. My first use case is to identify low frequency NERs so that i can have a personalized RSS reader.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "yonz",
    "url": "https://news.ycombinator.com/user?id=yonz"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32078428",
  "sameAs": "https://news.ycombinator.com/item?id=32078428",
  "dateCreated": "2022-07-13T03:54:40.098Z",
  "datePublished": "2022-07-13T02:34:12.000Z",
  "dateModified": "2022-07-13T03:54:40.098Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 如何在离线的React Native应用中拥有GraphQL\n",
  "headline_zh-Hant": "Ask HN: 如何在離線的React Native應用中擁有GraphQL\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我正在努力寻找一种组合，使我能够建立一个带有图形数据库的离线react native应用程序，这让我自己都快疯了。 <p>请勾选常见的建议。 <p>1- 这不是用于状态管理（Redux，Redux-persist）<p>2- 我不想使用 sqlite 或任何其他关系设置<p>3- 我不想使用序列化和异步存储<p>现在我们已经解决了这些问题，realm DB 很有希望，但它要求应用程序在单线程模式下使用数据库。它不支持动态模式变化，而且在realm-orm之外，我没有看到任何地方可以将其输入到TS<p>具有持久性的Apollo客户端似乎很有希望，但我担心这是一个缓存解决方案，而不是一流的离线支持。 <p>Actualbudget（一个本地第一应用）正在做sqlite3（表存储）和CDRTs消息队列以实现最终的一致性。我很好奇anytype.io是如何在边缘存储他们的图的。<p>简短的介绍是：想象一下，如果你有一个结构化的个人数据图（私人&amp；离线同步），我们将能够建立大量的跨仓解决方案。我的第一个用例是识别低频NER，这样我就可以有一个个性化的RSS阅读器。\n",
  "description_zh-Hant": "我正在努力尋找一種組合，使我能夠建立一個帶有圖形數據庫的離線react native應用程序，這讓我自己都快瘋了。 <p>請勾選常見的建議。 <p>1- 這不是用於狀態管理（Redux，Redux-persist）<p>2- 我不想使用 sqlite 或任何其他關係設置<p>3- 我不想使用序列化和異步存儲<p>現在我們已經解決了這些問題，realm DB 很有希望，但它要求應用程序在單線程模式下使用數據庫。它不支持動態模式變化，而且在realm-orm之外，我沒有看到任何地方可以將其輸入到TS<p>具有持久性的Apollo客戶端似乎很有希望，但我擔心這是一個緩存解決方案，而不是一流的離線支持。 <p>Actualbudget（一個本地第一應用）正在做sqlite3（表存儲）和CDRTs消息隊列以實現最終的一致性。我很好奇anytype.io是如何在邊緣存儲他們的圖的。<p>簡短的介紹是：想象一下，如果你有一個結構化的個人數據圖（私人&amp；離線同步），我們將能夠建立大量的跨倉解決方案。我的第一個用例是識別低頻NER，這樣我就可以有一個個性化的RSS閱讀器。\n"
}