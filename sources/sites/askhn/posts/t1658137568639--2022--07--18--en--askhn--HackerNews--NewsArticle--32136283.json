{
  "@type": "NewsArticle",
  "identifier": "2022--07--18--en--askhn--HackerNews--NewsArticle--32136283",
  "url": "https://news.ycombinator.com/item?id=32136283",
  "headline": "Ask HN: Embedded Projects to Learn From?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I'm currently at a small company and often find myself looking outside for solutions and techniques in the embedded software space.\n The areas I'm interested in are C, testing and testability, architecture and portability, real-time control, build systems and CI. Leaving books and Stack Overflow aside, the value of projects is in their demonstration: the maturity/immaturity, advantages/drawbacks of particular tools and techniques.<p>The following projects have been of great pedagogical use to me:<p>https://github.com/google/makani (Bazel, C, testing, architecture, real-time control, code-generation)<p>https://github.com/odriverobotics/ODrive (real-time control, code-generation, C++)<p>https://github.com/FreeRTOS/FreeRTOS-Kernel (architecture, C)<p>https://github.com/espressif/esp-idf (architecture, C, CMake, testing)<p>Which embedded software projects have you learned from and what have you learned from them?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "DriftRegion",
    "url": "https://news.ycombinator.com/user?id=DriftRegion"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32136283",
  "sameAs": "https://news.ycombinator.com/item?id=32136283",
  "dateCreated": "2022-07-18T09:46:08.639Z",
  "datePublished": "2022-07-18T09:38:07.000Z",
  "dateModified": "2022-07-18T09:46:08.639Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 可以借鉴的嵌入式项目？\n",
  "headline_zh-Hant": "Ask HN: 可以借鑑的嵌入式項目？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我目前在一家小公司，经常发现自己在外面寻找嵌入式软件领域的解决方案和技术。\n 我感兴趣的领域是C、测试和可测试性、架构和可移植性、实时控制、构建系统和CI。抛开书本和Stack Overflow不谈，项目的价值在于其示范性：成熟/不成熟，特定工具和技术的优点/缺点。<p>以下项目对我有很大的教学作用：<p>https://github.com/google/makani（Bazel，C，测试，架构，实时控制，代码生成）<p>https://github。 com/odriverobotics/ODrive（实时控制，代码生成，C++）<p>https://github.com/FreeRTOS/FreeRTOS-Kernel（架构，C）<p>https://github.com/espressif/esp-idf（架构，C，CMake，测试）<p>你从哪些嵌入式软件项目中学到了什么？\n",
  "description_zh-Hant": "我目前在一家小公司，經常發現自己在外面尋找嵌入式軟件領域的解決方案和技術。\n 我感興趣的領域是C、測試和可測試性、架構和可移植性、實時控制、構建系統和CI。拋開書本和Stack Overflow不談，項目的價值在於其示範性：成熟/不成熟，特定工具和技術的優點/缺點。<p>以下項目對我有很大的教學作用：<p>https://github.com/google/makani（Bazel，C，測試，架構，實時控制，代碼生成）<p>https://github。 com/odriverobotics/ODrive（實時控制，代碼生成，C++）<p>https://github.com/FreeRTOS/FreeRTOS-Kernel（架構，C）<p>https://github.com/espressif/esp-idf（架構，C，CMake，測試）<p>你從哪些嵌入式軟件項目中學到了什麼？\n"
}