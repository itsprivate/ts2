{
  "@type": "NewsArticle",
  "identifier": "2022--06--29--en--askhn--HackerNews--NewsArticle--31921814",
  "url": "https://news.ycombinator.com/item?id=31921814",
  "headline": "Ask HN: Fully Functional Xilinx Vivado on Arch Linux?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Currently I have a separate Ubuntu partition just for Vivado and it would be really convenient if I could use it with my main distro, Arch Linux.<p>I think that installing it directly on Arch would not be very wise from a stability point of view (and it requires some intervention to even install anyway), so I tried creating a systemd-nspawn container with Ubuntu in it. I could launch the Vivado GUI and generate a bitstream for a project easily this way (thank you, ArchWiki), but the hardware server would not recognize the board plugged in via USB. This was a few months ago but now I want to use Vivado again and a lot.<p>Ideally I would like some advice on getting Vivado to properly interact with hardware from inside the container, if possible, but any advice on how people deal with Vivado's tight OS requirements (besides sucking it up) would be appreciated.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "d_tr",
    "url": "https://news.ycombinator.com/user?id=d_tr"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31921814",
  "sameAs": "https://news.ycombinator.com/item?id=31921814",
  "dateCreated": "2022-06-29T16:00:35.066Z",
  "datePublished": "2022-06-29T15:47:16.000Z",
  "dateModified": "2022-06-29T16:00:35.066Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: Arch Linux上的Xilinx Vivado功能齐全？\n",
  "headline_zh-Hant": "Ask HN: Arch Linux上的Xilinx Vivado功能齊全？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "目前我有一个单独的Ubuntu分区，专门用于Vivado，如果我可以在我的主要发行版Arch Linux上使用它，那就真的很方便了。<p>我认为从稳定性的角度来看，直接在Arch上安装它并不是很明智（反正它甚至需要一些干预才能安装），所以我试图创建一个包含Ubuntu的systemd-nspawn容器。我可以通过这种方式启动Vivado图形界面并为项目生成比特流（谢谢你，ArchWiki），但是硬件服务器无法识别通过USB插入的电路板。这是几个月前的事了，但现在我想再次使用Vivado，而且是大量使用。<p>如果可能的话，我希望得到一些关于让Vivado从容器内与硬件正确交互的建议，但也希望得到关于人们如何处理Vivado严格的操作系统要求的建议（除了吸食它）。\n",
  "description_zh-Hant": "目前我有一個單獨的Ubuntu分區，專門用於Vivado，如果我可以在我的主要發行版Arch Linux上使用它，那就真的很方便了。<p>我認為從穩定性的角度來看，直接在Arch上安裝它並不是很明智（反正它甚至需要一些干預才能安裝），所以我試圖創建一個包含Ubuntu的systemd-nspawn容器。我可以通過這種方式啟動Vivado圖形界面併為項目生成比特流（謝謝你，ArchWiki），但是硬件服務器無法識別通過USB插入的電路板。這是幾個月前的事了，但現在我想再次使用Vivado，而且是大量使用。<p>如果可能的話，我希望得到一些關於讓Vivado從容器內與硬件正確交互的建議，但也希望得到關於人們如何處理Vivado嚴格的操作系統要求的建議（除了吸食它）。\n"
}