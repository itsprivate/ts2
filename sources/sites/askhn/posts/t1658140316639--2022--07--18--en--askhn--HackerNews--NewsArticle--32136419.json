{
  "@type": "NewsArticle",
  "identifier": "2022--07--18--en--askhn--HackerNews--NewsArticle--32136419",
  "url": "https://news.ycombinator.com/item?id=32136419",
  "headline": "Ask HN: Privacy-aware cheap Account Management Solution",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "On the side, next to work and kids, I am working on a company of my wife and myself, where we develop software of all kinds. While privacy is not our core business we do want to make sure that our customers are never the product and that we store only the data that we need to store. Also for hosting we try to be careful on how we do so. We also do not do any tracking on our end for anything and we only ask info we really need (which is pretty much nothing).<p>For the most part that is all well. But the only thing I am struggling with is how to allow people to register accounts and manage it. The simplest way would be to just do it purely based on a username and password (with or without 2FA), but that would not allow account recovery for your average non-technical person.<p>The next obvious path would be to instead go for (1) 0Auth or something similar or (2) email.<p>(1) is not really a preferred solution as it would mean I need to integrate potential tracking software in our applications/platforms + it would mean that on the end of their social accounts that they are aware of the platforms of us they use.<p>(2) could have been nice if it wasn't for the madness that emails are. We can for example not simply host our own mail server without jumping through a lot of hoops and even then hoping to not get caught by some zealous spam filter.<p>I do not know however any solution besides these. It's a problem that I face for all our platforms and apps. How to allow users to register and recover accounts, without doing it in the more obvious non-privacy-aware solutions? For now I think that email might be the easiest, but I don't have experience with any such service that would allow us to do it for an affordable price, given we are still paying everything out of our own pockets for now...<p>For technical users there are very nice solutions, such as letting them store their own Private key of some key pair, just to give na example. But I know that for the average user we do probably need to manage a solution for them somehow.<p>The reason they need an account is for example if the app allows to do cloud syncing, or purchase something, or on another platform if you want to actually submit content yourself. Each app/plaform will have their own accounts, but I face the problem for all our (future / potential) problems.<p>A side question is also. If we use a payment provider such as Stripe, do these allow us to accept payments via their API without us having to store any credit card info of some kind? As that would be pretty excellent and save us a lot of trouble there to.<p>---<p>And yes I am aware that there will always be tracking anyway (logs from hosting, even though Hetzner is pretty basic in that regards AFAIK) as well as network / telecom providers, etc... But that being said, everything we can control I do like to keep that surface as limited or non-existent as possible.<p>Thanks! And Thank you general for building / maintaining this awesome community, has been a greet help so far in my last decade or so :) Even though I am mostly a lurker I must admit. On a funny related note this is also my third account or so, as for the first 2 I didn't register an email myself, so I do know the problem at first hand as well.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "gdcbe",
    "url": "https://news.ycombinator.com/user?id=gdcbe"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32136419",
  "sameAs": "https://news.ycombinator.com/item?id=32136419",
  "dateCreated": "2022-07-18T10:31:56.639Z",
  "datePublished": "2022-07-18T10:02:23.000Z",
  "dateModified": "2022-07-18T10:31:56.639Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 具有隐私意识的廉价账户管理解决方案\n",
  "headline_zh-Hant": "Ask HN: 具有隱私意識的廉價賬戶管理解決方案\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "在工作和孩子旁边，我正在为我和我妻子的公司工作，我们在那里开发各种软件。虽然隐私不是我们的核心业务，但我们确实想确保我们的客户永远不是产品，我们只存储我们需要存储的数据。另外，对于托管，我们也尽量小心翼翼地做。我们也不对任何东西进行跟踪，我们只询问我们真正需要的信息（这几乎是没有的）。<p>在大多数情况下，这一切都很好。但我唯一纠结的是如何让人们注册账户并管理它。最简单的方法是纯粹基于用户名和密码（无论有无2FA），但这将不允许普通的非技术人员恢复账户。<p>下一个明显的路径是转而采用（1）0Auth或类似的方法，或者（2）电子邮件。 <p>(1)并不是一个真正的首选解决方案，因为这意味着我需要在我们的应用程序/平台中整合潜在的跟踪软件+这意味着在他们的社交账户终端，他们知道他们所使用的我们的平台。<p>(2)如果不是因为电子邮件的疯狂，这可能是不错的。例如，我们不能简单地托管我们自己的邮件服务器，而不需要跳过很多圈圈，即使这样也希望不被一些狂热的垃圾邮件过滤器抓住。<p>然而我不知道除了这些之外还有什么解决方案。这是我在我们所有的平台和应用程序中面临的一个问题。如何让用户注册和恢复账户，而不在更明显的无隐私意识的解决方案中这样做？就目前而言，我认为电子邮件可能是最简单的，但我没有任何此类服务的经验，可以让我们以可承受的价格做到这一点，因为我们目前仍在自掏腰包支付一切......<p>对于技术用户，有非常好的解决方案，例如让他们存储自己的某些密钥对的私钥，只是举个例子。但我知道，对于普通用户，我们可能需要以某种方式为他们管理一个解决方案。<p>他们需要一个账户的原因是，例如，如果应用程序允许进行云同步，或购买一些东西，或在另一个平台上，如果你想自己实际提交内容。每个应用程序/模板都会有自己的账户，但我面临的问题是我们所有（未来/潜在）的问题。<p>一个侧面的问题也是。如果我们使用诸如Stripe这样的支付供应商，这些供应商是否允许我们通过他们的API接受付款，而不需要我们存储任何种类的信用卡信息？ 但是，既然如此，我们可以控制的一切，我都希望尽可能地保持这种表面的限制或不存在。<p>谢谢! 感谢你们建立/维护这个令人敬畏的社区，在我过去的十多年中，你们一直在帮助我。） 尽管我必须承认，我主要是一个潜伏者。有趣的是，这也是我的第三个账户，因为前两个账户我都没有自己注册电子邮件，所以我也知道这个问题的第一手资料。\n",
  "description_zh-Hant": "在工作和孩子旁邊，我正在為我和我妻子的公司工作，我們在那裡開發各種軟件。雖然隱私不是我們的核心業務，但我們確實想確保我們的客戶永遠不是產品，我們只存儲我們需要存儲的數據。另外，對於託管，我們也儘量小心翼翼地做。我們也不對任何東西進行跟蹤，我們只詢問我們真正需要的信息（這幾乎是沒有的）。<p>在大多數情況下，這一切都很好。但我唯一糾結的是如何讓人們註冊賬戶並管理它。最簡單的方法是純粹基於用戶名和密碼（無論有無2FA），但這將不允許普通的非技術人員恢復賬戶。<p>下一個明顯的路徑是轉而採用（1）0Auth或類似的方法，或者（2）電子郵件。 <p>(1)並不是一個真正的首選解決方案，因為這意味著我需要在我們的應用程序/平臺中整合潛在的跟蹤軟件+這意味著在他們的社交賬戶終端，他們知道他們所使用的我們的平臺。<p>(2)如果不是因為電子郵件的瘋狂，這可能是不錯的。例如，我們不能簡單地託管我們自己的郵件服務器，而不需要跳過很多圈圈，即使這樣也希望不被一些狂熱的垃圾郵件過濾器抓住。<p>然而我不知道除了這些之外還有什麼解決方案。這是我在我們所有的平臺和應用程序中面臨的一個問題。如何讓用戶註冊和恢復賬戶，而不在更明顯的無隱私意識的解決方案中這樣做？就目前而言，我認為電子郵件可能是最簡單的，但我沒有任何此類服務的經驗，可以讓我們以可承受的價格做到這一點，因為我們目前仍在自掏腰包支付一切......<p>對於技術用戶，有非常好的解決方案，例如讓他們存儲自己的某些密鑰對的私鑰，只是舉個例子。但我知道，對於普通用戶，我們可能需要以某種方式為他們管理一個解決方案。<p>他們需要一個賬戶的原因是，例如，如果應用程序允許進行雲同步，或購買一些東西，或在另一個平臺上，如果你想自己實際提交內容。每個應用程序/模板都會有自己的賬戶，但我面臨的問題是我們所有（未來/潛在）的問題。<p>一個側面的問題也是。如果我們使用諸如Stripe這樣的支付供應商，這些供應商是否允許我們通過他們的API接受付款，而不需要我們存儲任何種類的信用卡信息？ 但是，既然如此，我們可以控制的一切，我都希望儘可能地保持這種表面的限制或不存在。<p>謝謝! 感謝你們建立/維護這個令人敬畏的社區，在我過去的十多年中，你們一直在幫助我。） 儘管我必須承認，我主要是一個潛伏者。有趣的是，這也是我的第三個賬戶，因為前兩個賬戶我都沒有自己註冊電子郵件，所以我也知道這個問題的第一手資料。\n"
}