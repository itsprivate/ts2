{
  "@type": "NewsArticle",
  "identifier": "2022--03--13--en--askhn--HackerNews--NewsArticle--30659869",
  "url": "https://news.ycombinator.com/item?id=30659869",
  "headline": "Ask HN: What is a good configuration format now a days?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "first some background:\nI created an alert definition generator script in bash, that has a variable defined like:<p>## TEAM DEV_threhold STAGING_threshold DEMO_threshold PROD_threshold ALERT_TYPE DB_USER<p>## ALERT_TYPE=&lt; warning | alert | custom&gt; (based on team notification routing configuration)<p>read -r -d '' ALERT_PARAMS &lt;&lt; EOM<p>team-1 1 2 3 4 warning db-user1<p>team-2 1 2 3 4 warning db-user2<p># comment lines<p>EOM<p>which I then use in same script to populate a yml file (for alertmanager)<p>echo &quot;$ALERT_PARAMS&quot; \\<p>| grep -v '^#' \\<p>|  while read -r vars... ; do generate_definition; done &gt; alerts.yml<p>Development teams are expected to add, update or delete lines for ALERT_PARAMS, and nothing else.<p>I chose &quot;team-1 1 2 3 4 warning db-user1&quot; format since this structure seems easy to understand and update by (multi year experienced) java, go and python developers in vim, atom, git{hub,lab} or whichever fancy editors developers use now a days. This format also means I can perform validations and sanity checks before/ inside/ after generate_definition step with only the bash shell inside a CI pipeline, without adding any more tool dependency or write relatively complex program. I value simplicity.<p>One engineer, with whom I checked first, believes (rather strongly) this format is not easy to understand and should be replaced with JSON or YAML because:<p>- developers don't use editors like Vim.<p>- developers don't have more than 5 seconds to understand the format, and high chances are devs wont understand or make mistakes in updates.<p>This seemed to me a bit odd feedback, though felt very genuine, so here I am seeking your input on:<p>- If and how, JSON and YAML (or similar formats) are better suited for simple use-cases like this?<p>- What might want a developer to not spend more than 5 seconds to understand how application's database related alerts are generated?<p>To be clear I dont mind using what ever format majority uses, as long as we have everyone using the same format, I just want to understand what makes the above format harder to comprehend than YAML or JSON, and why spending more than 5 seconds, learning about databases, is such a big ask (co-incidentally after a two week long database related incident)?<p>How would you move forward if you were in my shoes?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "oldPete",
    "url": "https://news.ycombinator.com/user?id=oldPete"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30659869",
  "sameAs": "https://news.ycombinator.com/item?id=30659869",
  "dateCreated": "2022-03-13T10:31:47.115Z",
  "datePublished": "2022-03-13T10:15:44.000Z",
  "dateModified": "2022-03-13T10:31:47.115Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 现在什么是好的配置格式？",
  "headline_zh-Hant": "Ask HN: 現在什麼是好的配置格式？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "首先是一些背景。\n我在bash中创建了一个警报定义生成器脚本，它有一个定义的变量，比如。 <p>## TEAM DEV_threhold STAGING_threshold DEMO_threshold PROD_threshold ALERT_TYPE DB_USER<p>## ALERT_TYPE=&lt; warning | alert | custom&gt; （基于团队通知路由配置）<p>read -r -d ' ALERT_PARAMS &lt;&lt; EOM<p>team-1 1 2 3 4 warning db-user1<p>team-2 1 2 3 4 warning db-user2<p># comment lines<p>EOM<p>which I then use in same script to populate a yml file (for alertmanager)<p>echo &quot;$ALERT_PARAMS&quot; \\<p>| grep -v '^#' \\<p>| while read -r vars. <p>我选择了&quot;team-1 1 2 3 4 warning db-user1&quot;格式，因为这种结构似乎很容易被（有多年经验的）java、go和python开发人员在vim、atom、git{hub,lab}或现在开发人员使用的任何高级编辑器中理解和更新。这种格式也意味着我可以在CI管道内仅用bash shell在生成定义步骤之前/之内/之后进行验证和理智检查，而无需增加任何工具依赖或编写相对复杂的程序。<p>一位工程师，我先跟他确认了一下，他认为（相当强烈）这种格式不容易理解，应该用JSON或YAML来代替，因为：<p>- 开发人员不使用Vim这样的编辑器。 <p>- 开发人员没有超过5秒钟的时间来理解这种格式，而且开发人员很有可能不会理解或在更新中犯错。<p>这在我看来是一个有点奇怪的反馈，虽然感觉非常真实，所以我在这里寻求你的意见：<p>- 如果以及如何，JSON和YAML（或类似的格式）更适合这样的简单用例？ <p>- 是什么让开发人员不花超过5秒钟的时间来了解应用程序的数据库相关警报是如何生成的？<p>明确地说，我不介意使用大多数人使用的任何格式，只要我们每个人都使用相同的格式，我只是想了解是什么让上述格式比YAML或JSON更难理解，以及为什么花超过5秒钟的时间来学习数据库，是一个很大的要求（巧合的是在一个为期两周的数据库相关事件后）？",
  "description_zh-Hant": "首先是一些背景。\n我在bash中創建了一個警報定義生成器腳本，它有一個定義的變量，比如。 <p>## TEAM DEV_threhold STAGING_threshold DEMO_threshold PROD_threshold ALERT_TYPE DB_USER<p>## ALERT_TYPE=&lt; warning | alert | custom&gt; （基於團隊通知路由配置）<p>read -r -d ' ALERT_PARAMS &lt;&lt; EOM<p>team-1 1 2 3 4 warning db-user1<p>team-2 1 2 3 4 warning db-user2<p># comment lines<p>EOM<p>which I then use in same script to populate a yml file (for alertmanager)<p>echo &quot;$ALERT_PARAMS&quot; \\<p>| grep -v '^#' \\<p>| while read -r vars. <p>我選擇了&quot;team-1 1 2 3 4 warning db-user1&quot;格式，因為這種結構似乎很容易被（有多年經驗的）java、go和python開發人員在vim、atom、git{hub,lab}或現在開發人員使用的任何高級編輯器中理解和更新。這種格式也意味著我可以在CI管道內僅用bash shell在生成定義步驟之前/之內/之後進行驗證和理智檢查，而無需增加任何工具依賴或編寫相對複雜的程序。<p>一位工程師，我先跟他確認了一下，他認為（相當強烈）這種格式不容易理解，應該用JSON或YAML來代替，因為：<p>- 開發人員不使用Vim這樣的編輯器。 <p>- 開發人員沒有超過5秒鐘的時間來理解這種格式，而且開發人員很有可能不會理解或在更新中犯錯。<p>這在我看來是一個有點奇怪的反饋，雖然感覺非常真實，所以我在這裡尋求你的意見：<p>- 如果以及如何，JSON和YAML（或類似的格式）更適合這樣的簡單用例？ <p>- 是什麼讓開發人員不花超過5秒鐘的時間來了解應用程序的數據庫相關警報是如何生成的？<p>明確地說，我不介意使用大多數人使用的任何格式，只要我們每個人都使用相同的格式，我只是想了解是什麼讓上述格式比YAML或JSON更難理解，以及為什麼花超過5秒鐘的時間來學習數據庫，是一個很大的要求（巧合的是在一個為期兩週的數據庫相關事件後）？"
}