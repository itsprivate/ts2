{
  "@type": "NewsArticle",
  "identifier": "2022--08--09--en--askhn--HackerNews--NewsArticle--32397750",
  "url": "https://news.ycombinator.com/item?id=32397750",
  "headline": "Ask HN: Is ease in getting started the key for Python's success?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I am just an intermediate Python dev (but a senior Java dev with 20+ years). What I have come to realize is that Python is just as complicated as Java! However it is much much easier to get started with.<p>Java is aimed squarely at professional devs and requires a lot of tooling and support.\nPython requires almost nothing (interpreter + editor + a basic understanding of lists/dicts and control flow) to get started.<p><i>But</i> do a big project with a large team and you'll quickly discover the rough edges and debates - a few that have come up lately for me at work - typing or no typing, oop or functional? pytest or unittest? poetry vs pipenv vs ... ? Occasional runtime errors. Project layout and organization (makes me miss maven sometimes).\nDon't get me wrong - I really enjoy working in Python but I believe it would be a niche language if it were not so approachable to the beginner.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "rlawson",
    "url": "https://news.ycombinator.com/user?id=rlawson"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32397750",
  "sameAs": "https://news.ycombinator.com/item?id=32397750",
  "dateCreated": "2022-08-09T13:55:35.539Z",
  "datePublished": "2022-08-09T13:43:09.000Z",
  "dateModified": "2022-08-09T13:55:35.539Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 3
    }
  ],
  "headline_zh-Hans": "Ask HN: 容易上手是Python成功的关键吗？\n",
  "headline_zh-Hant": "Ask HN: 容易上手是Python成功的關鍵嗎？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "I am just an intermediate Python dev (but a senior Java dev with 20+ years). What I have come to realize is that Python is just as complicated as Java! However it is much much easier to get started with.<p>Java is aimed squarely at professional devs and requires a lot of tooling and support.\nPython requires almost nothing (interpreter + editor + a basic understanding of lists/dicts and control flow) to get started.<p><i>But</i> do a big project with a large team and you'll quickly discover the rough edges and debates - a few that have come up lately for me at work - typing or no typing, oop or functional? pytest or unittest? poetry vs pipenv vs ... ? Occasional runtime errors. Project layout and organization (makes me miss maven sometimes).\nDon't get me wrong - I really enjoy working in Python but I believe it would be a niche language if it were not so approachable to the beginner.\n",
  "description_zh-Hant": "I am just an intermediate Python dev (but a senior Java dev with 20+ years). What I have come to realize is that Python is just as complicated as Java! However it is much much easier to get started with.<p>Java is aimed squarely at professional devs and requires a lot of tooling and support.\nPython requires almost nothing (interpreter + editor + a basic understanding of lists/dicts and control flow) to get started.<p><i>But</i> do a big project with a large team and you'll quickly discover the rough edges and debates - a few that have come up lately for me at work - typing or no typing, oop or functional? pytest or unittest? poetry vs pipenv vs ... ? Occasional runtime errors. Project layout and organization (makes me miss maven sometimes).\nDon't get me wrong - I really enjoy working in Python but I believe it would be a niche language if it were not so approachable to the beginner.\n"
}