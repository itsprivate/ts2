{
  "@type": "NewsArticle",
  "identifier": "2022--08--23--en--askhn--HackerNews--NewsArticle--32562134",
  "url": "https://news.ycombinator.com/item?id=32562134",
  "headline": "Ask HN: Why shouldn't I setup a site that gives away SSL certs for local dev?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "TLDR - Fundamentally, what's wrong with hosting a service that provides it's own SSL cert (public and private) for others to use for local development<p>For quite a few projects, I use a standard domain for which I have the SSL certs for.<p>Some of these projects require an SSL certificate to function (maybe for external requirements etc.)<p>To onboard people to the project, asking them to get a valid SSL certificate can be a pain..<p>Obviously getting them to create a CA certificate, generate a server cert etc. and adding the CA cert can be a pain.<p>So my thought was to share a common set of keys that are only used for local development for a non-functioning domain.<p>But I took this thought a step further... why shouldn't there be (or I create) a service hosted on a real domain, which provides it's own SSL certificate - providing the public and private key to anyone that requests it (e.g. https://mylocaldev.com/public.pem / https://mylocaldev.com/private.pem).<p>Maybe the certificate could be for a sub-domain of the actual domain, which doesn't host the actual 'site' that provides the certs (e.g. https://mylocaldev.com/certs.pem provides the certs for https://dev.mylocaldev.com)<p>This way, anyone could obtain the SSL cert, add the domain to their hosts file and use the certs for hosting apps locally.<p>Obviously, standard points:<p>* This is a blatant issue for MITM attacks<p><pre><code>  - But what would they be intercepting.. the public/private key?.. who cares?\n</code></pre>\n* The SSL traffic generated by the applications that people use the certificate for could be 'MITM'ed or decrypted<p><pre><code>  - Again, if it's local development, I can't see a difference over hosting local applications without any SSL encryption\n</code></pre>\nMaybe I'm missing something else? If not, how has something like this not already been done?<p>On the flip side, am I right in thinking this _would_ solve real-life problems that people face?<p>Certainly feels easier than using tunneling software that SSL-wraps the traffic (https://github.com/localtunnel/localtunnel) - though obviously this is only a small benefit of using applications like that (i.e. making your local development environment publicly accessible).",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "mrmattyboy",
    "url": "https://news.ycombinator.com/user?id=mrmattyboy"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32562134",
  "sameAs": "https://news.ycombinator.com/item?id=32562134",
  "dateCreated": "2022-08-23T08:58:24.511Z",
  "datePublished": "2022-08-23T08:47:36.000Z",
  "dateModified": "2022-08-23T08:58:24.511Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 为什么我不应该建立一个为本地开发赠送SSL证书的网站？\n",
  "headline_zh-Hant": "Ask HN: 為什麼我不應該建立一個為本地開發贈送SSL證書的網站？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "TLDR - Fundamentally, what's wrong with hosting a service that provides it's own SSL cert (public and private) for others to use for local development<p>For quite a few projects, I use a standard domain for which I have the SSL certs for.<p>Some of these projects require an SSL certificate to function (maybe for external requirements etc. )<p>To onboard people to the project, asking them to get a valid SSL certificate can be a pain..<p>Obviously getting them to create a CA certificate, generate a server cert etc. and adding the CA cert can be a pain.<p>So my thought was to share a common set of keys that are only used for local development for a non-functioning domain.<p>But I took this thought a step further... why shouldn't there be (or I create) a service hosted on a real domain, which provides it's own SSL certificate - providing the public and private key to anyone that requests it (e.g. https://mylocaldev.com/public.pem / https://mylocaldev.com/private.pem).<p>Maybe the certificate could be for a sub-domain of the actual domain, which doesn't host the actual 'site' that provides the certs (e. g. https://mylocaldev.com/certs.pem provides the certs for https://dev.mylocaldev.com)<p>This way, anyone could obtain the SSL cert, add the domain to their hosts file and use the certs for hosting apps locally.<p>Obviously, standard points:<p>* This is a blatant issue for MITM attacks<p><pre><code> - But what would they be intercepting.. the public/private key?.. who cares?\n</code></pre>\n* The SSL traffic generated by the applications that people use the certificate for could be 'MITM'ed or decrypted<p><pre><code> - Again, if it's local development, I can't see a difference over hosting local applications without any SSL encryption\n</code></pre>\nMaybe I'm missing something else? <p>从另一个角度来看，我认为这_会解决人们面临的实际问题，这样做对吗？<p>当然，这比使用隧道软件对流量进行SSL包裹要容易得多（https://github.com/localtunnel/localtunnel）--尽管这显然只是使用这样的应用程序（即使你的本地开发环境可以公开访问）的一个小好处。\n",
  "description_zh-Hant": "TLDR - Fundamentally, what's wrong with hosting a service that provides it's own SSL cert (public and private) for others to use for local development<p>For quite a few projects, I use a standard domain for which I have the SSL certs for.<p>Some of these projects require an SSL certificate to function (maybe for external requirements etc. )<p>To onboard people to the project, asking them to get a valid SSL certificate can be a pain..<p>Obviously getting them to create a CA certificate, generate a server cert etc. and adding the CA cert can be a pain.<p>So my thought was to share a common set of keys that are only used for local development for a non-functioning domain.<p>But I took this thought a step further... why shouldn't there be (or I create) a service hosted on a real domain, which provides it's own SSL certificate - providing the public and private key to anyone that requests it (e.g. https://mylocaldev.com/public.pem / https://mylocaldev.com/private.pem).<p>Maybe the certificate could be for a sub-domain of the actual domain, which doesn't host the actual 'site' that provides the certs (e. g. https://mylocaldev.com/certs.pem provides the certs for https://dev.mylocaldev.com)<p>This way, anyone could obtain the SSL cert, add the domain to their hosts file and use the certs for hosting apps locally.<p>Obviously, standard points:<p>* This is a blatant issue for MITM attacks<p><pre><code> - But what would they be intercepting.. the public/private key?.. who cares?\n</code></pre>\n* The SSL traffic generated by the applications that people use the certificate for could be 'MITM'ed or decrypted<p><pre><code> - Again, if it's local development, I can't see a difference over hosting local applications without any SSL encryption\n</code></pre>\nMaybe I'm missing something else? <p>從另一個角度來看，我認為這_會解決人們面臨的實際問題，這樣做對嗎？<p>當然，這比使用隧道軟件對流量進行SSL包裹要容易得多（https://github.com/localtunnel/localtunnel）--儘管這顯然只是使用這樣的應用程序（即使你的本地開發環境可以公開訪問）的一個小好處。\n"
}