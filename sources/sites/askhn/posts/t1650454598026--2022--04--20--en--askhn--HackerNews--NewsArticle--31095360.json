{
  "@type": "NewsArticle",
  "identifier": "2022--04--20--en--askhn--HackerNews--NewsArticle--31095360",
  "url": "https://news.ycombinator.com/item?id=31095360",
  "headline": "Ask HN: Best way to learn about computing history",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I'm a software engineer, mainly working on mobile apps (iOS primarily) through React Native and some Swift/Java. I have a CS degree and about 7 years in this field.<p>However recently I've become very aware that JS/TS and Swift etc are just APIs on top of APIs. I've been drawn to learning more about how computers work, the history of programming/computers (Unix, Sinclair, commodore, etc and even going back to Ada Lovelace, Babbage and mainframes in the 1950s) and things like memory allocation. I've tried learning some BASIC and Assembly code but haven't really got very far. I read/devour articles on sites like https://twobithistory.org but they only get you so far.<p>What can I do to help accelerate this and satiate this desire to learn more about how computers work? I live in London, UK and would be happy to spend some money on a uni course or something if there was a good one. I learn best practically so like to be &quot;doing&quot; something as well as theory.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "Tmkly",
    "url": "https://news.ycombinator.com/user?id=Tmkly"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31095360",
  "sameAs": "https://news.ycombinator.com/item?id=31095360",
  "dateCreated": "2022-04-20T11:36:38.026Z",
  "datePublished": "2022-04-20T11:32:33.000Z",
  "dateModified": "2022-04-20T11:36:38.026Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 了解计算机历史的最佳途径",
  "headline_zh-Hant": "Ask HN: 瞭解計算機歷史的最佳途徑",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我是一名软件工程师，主要通过React Native和一些Swift/Java从事移动应用（主要是iOS）的工作。我有一个CS学位，在这个领域有大约7年的时间。<p>然而，最近我变得非常清楚，JS/TS和Swift等只是API之上的API。我被吸引去学习更多关于计算机如何工作、编程/计算机的历史（Unix、Sinclair、Commodore等，甚至可以追溯到20世纪50年代的Ada Lovelace、Babbage和大型机）以及诸如内存分配的东西。我曾试图学习一些BASIC和汇编代码，但还没有真正学到很深的东西。我在https://twobithistory.org 等网站上阅读/浏览文章，但它们只能让你走到这一步。<p>我可以做些什么来帮助加速学习，满足我对计算机工作原理的渴望？我住在英国伦敦，如果有好的课程，我很乐意花些钱在大学课程或其他方面。我在实践中学习效果最好，所以我喜欢在理论的基础上做一些事情。",
  "description_zh-Hant": "我是一名軟件工程師，主要通過React Native和一些Swift/Java從事移動應用（主要是iOS）的工作。我有一個CS學位，在這個領域有大約7年的時間。<p>然而，最近我變得非常清楚，JS/TS和Swift等只是API之上的API。我被吸引去學習更多關於計算機如何工作、編程/計算機的歷史（Unix、Sinclair、Commodore等，甚至可以追溯到20世紀50年代的Ada Lovelace、Babbage和大型機）以及諸如內存分配的東西。我曾試圖學習一些BASIC和彙編代碼，但還沒有真正學到很深的東西。我在https://twobithistory.org 等網站上閱讀/瀏覽文章，但它們只能讓你走到這一步。<p>我可以做些什麼來幫助加速學習，滿足我對計算機工作原理的渴望？我住在英國倫敦，如果有好的課程，我很樂意花些錢在大學課程或其他方面。我在實踐中學習效果最好，所以我喜歡在理論的基礎上做一些事情。"
}