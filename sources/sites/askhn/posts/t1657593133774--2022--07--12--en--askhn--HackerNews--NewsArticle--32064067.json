{
  "@type": "NewsArticle",
  "identifier": "2022--07--12--en--askhn--HackerNews--NewsArticle--32064067",
  "url": "https://news.ycombinator.com/item?id=32064067",
  "headline": "Ask HN: Team size thresholds for various web app architectures",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I have been involved in early stage teams where on day one it's decided to have a seperate frontend app ( usually React ) with a seperate API / Backend ( usually Rails ).<p>When it comes to team size, if you're building a team and a SaaS app, what size team would you want a generic SaaS app as a Monolith vs team size for SPA + API backend? What impact would available team size have on architecture decisions? E.g. a team of 2-3 vs a team of 12 vs 30.<p>I think the Google/Facebook/AirBnB/etc way of doing things isn't suitable for a lot of small teams, however it is the latest hot tech that always seems to get implemented in early stage startups. How should available team size impact technology choices? Any rules of thumb here?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "eadz",
    "url": "https://news.ycombinator.com/user?id=eadz"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32064067",
  "sameAs": "https://news.ycombinator.com/item?id=32064067",
  "dateCreated": "2022-07-12T02:32:13.774Z",
  "datePublished": "2022-07-12T00:30:00.000Z",
  "dateModified": "2022-07-12T02:32:13.774Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 2
    }
  ],
  "headline_zh-Hans": "Ask HN: 各种网络应用程序架构的团队规模阈值\n",
  "headline_zh-Hant": "Ask HN: 各種網絡應用程序架構的團隊規模閾值\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "<p>当涉及到团队规模时，如果你正在建立一个团队和一个SaaS应用，你希望一个普通的SaaS应用作为一个单体，与SPA+API后端的团队规模相比，你希望多大的团队？可用的团队规模对架构决策会有什么影响？<p>我认为Google/Facebook/AirBnB/等的做事方式并不适合很多小团队，但是它是最新的热门技术，似乎总是在早期的创业公司中得到实施。可用的团队规模应该如何影响技术选择？这里有什么经验法则吗？\n",
  "description_zh-Hant": "<p>當涉及到團隊規模時，如果你正在建立一個團隊和一個SaaS應用，你希望一個普通的SaaS應用作為一個單體，與SPA+API後端的團隊規模相比，你希望多大的團隊？可用的團隊規模對架構決策會有什麼影響？<p>我認為Google/Facebook/AirBnB/等的做事方式並不適合很多小團隊，但是它是最新的熱門技術，似乎總是在早期的創業公司中得到實施。可用的團隊規模應該如何影響技術選擇？這裡有什麼經驗法則嗎？\n"
}