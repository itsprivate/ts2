{
  "@type": "NewsArticle",
  "identifier": "2022--08--21--en--askhn--HackerNews--NewsArticle--32536610",
  "url": "https://news.ycombinator.com/item?id=32536610",
  "headline": "Ask HN: Could there be a “tech.fyi” (like levels.fyi for tech stack maturity?)",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Maybe you’re hesitant to switch jobs - you don’t want to join a tech dumpster fire! What could we do to make tech quality transparency more available before employees join?<p>Imagine a place you could lookup verifiable stats that indicate the company does a good job maintaining its projects and demonstrates good software craftsmanship. What stats might make sense? Stuff like tests per lines of code, how fast can a “hello world” change be made and tested? Frequency of deploys. Number of reverted PRs? How out of date dependencies are? I’m sure there’s existing stats in the software eng community.<p>There’s the “Joel Test” which is a bit outdated, and has a much to do with a devs quality of life.<p>What verified stats would you want to know before joining a company?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "throwarayes",
    "url": "https://news.ycombinator.com/user?id=throwarayes"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32536610",
  "sameAs": "https://news.ycombinator.com/item?id=32536610",
  "dateCreated": "2022-08-21T02:29:11.391Z",
  "datePublished": "2022-08-21T01:26:39.000Z",
  "dateModified": "2022-08-21T02:29:11.391Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 3
    }
  ],
  "headline_zh-Hans": "Ask HN: 能否有一个 \"tech.fyi\"（像技术栈成熟度的level.fyi？）\n",
  "headline_zh-Hant": "Ask HN: 能否有一個 \"tech.fyi\"（像技術棧成熟度的level.fyi？）\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "也许你正在犹豫要不要换工作--你不想加入一个技术垃圾场！我们可以做些什么来使技术质量在员工加入之前更有透明度？<p>想象一下，你可以在一个地方查询可核实的统计数据，以表明该公司在维护其项目方面做得很好，并表现出良好的软件工艺。哪些统计数字可能有意义？比如每行代码的测试，一个 \"hello world \"的改动能以多快的速度完成和测试？部署的频率。被撤销的PR的数量？过时的依赖性有多大？我相信在软件工程界有现成的统计数字。<p>有一个 \"Joel测试\"，它有点过时了，而且与开发人员的生活质量有很大关系。<p>在加入一家公司之前，你想知道哪些经过验证的统计数字？\n",
  "description_zh-Hant": "也許你正在猶豫要不要換工作--你不想加入一個技術垃圾場！我們可以做些什麼來使技術質量在員工加入之前更有透明度？<p>想象一下，你可以在一個地方查詢可核實的統計數據，以表明該公司在維護其項目方面做得很好，並表現出良好的軟件工藝。哪些統計數字可能有意義？比如每行代碼的測試，一個 \"hello world \"的改動能以多快的速度完成和測試？部署的頻率。被撤銷的PR的數量？過時的依賴性有多大？我相信在軟件工程界有現成的統計數字。<p>有一個 \"Joel測試\"，它有點過時了，而且與開發人員的生活質量有很大關係。<p>在加入一家公司之前，你想知道哪些經過驗證的統計數字？\n"
}