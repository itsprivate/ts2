{
  "@type": "NewsArticle",
  "identifier": "2022--04--11--en--askhn--HackerNews--NewsArticle--30990925",
  "url": "https://news.ycombinator.com/item?id=30990925",
  "headline": "Ask HN: What to do when code becomes an ad-hoc database?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "A hypothetical company uses infrastructure-as-code tools to provision all of their infrastructure. Managing the resources becomes tedious, and an engineer builds automation that allows all of the infrastructure code to be generated by pipelines from modules. Now a user clicks a button in order to provision infrastructure. The engineers only look at a few lines of module code once in a while. The issue is that the automation is very complicated and costly, and the generated code and all of it's associated git repositories etc have essentially become ad-hoc data in makeshift databases; what once was human-readable code is now primarily concerned with tracking the state of the infrastructure.<p>It seems like we've come full circle. If I can automate my infrastructure in this way, can I skip IAC and just use a database to track my state? Who has experience with this kind of problem? I can't help feeling like we're really re-inventing the wheel and making a huge complicated mess here.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "potta_coffee",
    "url": "https://news.ycombinator.com/user?id=potta_coffee"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30990925",
  "sameAs": "https://news.ycombinator.com/item?id=30990925",
  "dateCreated": "2022-04-11T16:48:42.182Z",
  "datePublished": "2022-04-11T16:17:43.000Z",
  "dateModified": "2022-04-11T16:48:42.182Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 当代码变成一个临时数据库时，该怎么办？",
  "headline_zh-Hant": "Ask HN: 當代碼變成一個臨時數據庫時，該怎麼辦？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "一个假设的公司使用基础设施即代码的工具来配置他们所有的基础设施。管理资源变得乏味，一位工程师建立了自动化，允许所有基础设施的代码由模块的管道生成。现在，用户点击一个按钮，就可以配置基础设施。工程师们只是偶尔看几行模块代码。问题是，自动化是非常复杂和昂贵的，而且生成的代码和所有相关的git存储库等基本上已经成为临时数据库中的临时数据；曾经是人类可读的代码，现在主要是为了跟踪基础设施的状态。如果我可以用这种方式使我的基础设施自动化，我是否可以跳过IAC，而只是用数据库来跟踪我的状态？谁对这种问题有经验？我不禁觉得我们真的在重新发明轮子，在这里制造了一个巨大的复杂的混乱。",
  "description_zh-Hant": "一個假設的公司使用基礎設施即代碼的工具來配置他們所有的基礎設施。管理資源變得乏味，一位工程師建立了自動化，允許所有基礎設施的代碼由模塊的管道生成。現在，用戶點擊一個按鈕，就可以配置基礎設施。工程師們只是偶爾看幾行模塊代碼。問題是，自動化是非常複雜和昂貴的，而且生成的代碼和所有相關的git存儲庫等基本上已經成為臨時數據庫中的臨時數據；曾經是人類可讀的代碼，現在主要是為了跟蹤基礎設施的狀態。如果我可以用這種方式使我的基礎設施自動化，我是否可以跳過IAC，而只是用數據庫來跟蹤我的狀態？誰對這種問題有經驗？我不禁覺得我們真的在重新發明輪子，在這裡製造了一個巨大的複雜的混亂。"
}