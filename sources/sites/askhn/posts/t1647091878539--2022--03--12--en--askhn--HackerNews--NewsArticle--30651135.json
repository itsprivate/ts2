{
  "@type": "NewsArticle",
  "identifier": "2022--03--12--en--askhn--HackerNews--NewsArticle--30651135",
  "url": "https://news.ycombinator.com/item?id=30651135",
  "headline": "Ask HN: Are knowledge-requirements for senior engineers becoming too much?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I work currently as a &quot;senior&quot; swe and my duties cover a wide range of technologies and non-tech related stuff: Elixir, Go, nginx, mysql, Docker, debezium, Kafka, Terraform, Ansible, HTTP APIs, a bit of Angular, mentoring, hiring (tech interviews), product discovery, design docs drafts, etc., etc.<p>When it comes to hiring senior software engineers, my company and peers seems to put a lot of focus on the following topics:<p>- does the candidate know about performance, scalability, and high availability topics?<p>- does they know about infra topics like: K8s, monitoring, CI/CD<p>- does they know about GCP or AWS?<p>- are they available to be part of our on-call rotation schemes?<p>- can they mentor more junior engineers?<p>Not to mention of course the more classic requirements for senior software engineers like: actual working experience on the field, solid knowledge of the fundamentals of comp sci/soft. eng., good practices, problem solving skills, good communication skills, etc.<p>When I interview candidates, I try to focus on the second group of requirements. I want to see if the candidates are able to communicate effectively while working on a technical solution. I could care less about details like GCP, Ansible, the programming language they master the most, or whether they use K8s or not. These technologies can be learned, if required. My company, though, doesn't like my approach and they insist on me asking very specific tech questions.<p>What do you think? We currently are hiring &quot;Go senior software engineers&quot; (that's the actual job title in Linkedin), but I couldn't care less if you know Go or not when you come to work with me. I want to know if you are good at solving problems.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "sdevonoes",
    "url": "https://news.ycombinator.com/user?id=sdevonoes"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30651135",
  "sameAs": "https://news.ycombinator.com/item?id=30651135",
  "dateCreated": "2022-03-12T13:31:18.539Z",
  "datePublished": "2022-03-12T13:19:36.000Z",
  "dateModified": "2022-03-12T13:31:18.539Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 对高级工程师的知识要求是否变得太多？",
  "headline_zh-Hant": "Ask HN: 對高級工程師的知識要求是否變得太多？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我目前的工作是&quot;高级&quot;汗，我的职责涵盖了广泛的技术和非技术相关的东西。Elixir, Go, nginx, mysql, Docker, debezium, Kafka, Terraform, Ansible, HTTP APIs, a bit of Angular, mentoring, hiring (technical interviews), product discovery, design docs drafts, etc, <p>当谈到招聘高级软件工程师时，我的公司和同行们似乎非常关注以下话题：<p>- 候选人是否了解性能、可扩展性和高可用性话题？<p>- 他们是否了解Infra话题，如。<p>- 他们是否了解GCP或AWS？<p>- 他们是否可以参加我们的轮值计划？<p>- 他们是否可以指导更多的初级工程师？<p> 当然更不用说对高级软件工程师的更多经典要求，如：实际工作经验，坚实的计算机科学/软件工程基础知识，良好的实践，解决问题的能力，良好的沟通能力，等等。我想看看候选人是否能够在从事技术解决方案的同时进行有效的沟通。我可以不关心GCP、Ansible、他们掌握的最多的编程语言等细节，或者他们是否使用K8s。如果需要的话，这些技术是可以学习的。不过，我的公司不喜欢我的做法，他们坚持要我问非常具体的技术问题。<p>你怎么看？我们目前正在招聘&quot;Go高级软件工程师&quot;（这是Linkedin中的实际职位名称），但当你来和我一起工作时，我不能关心你是否懂得Go。我想知道的是你是否善于解决问题。",
  "description_zh-Hant": "我目前的工作是&quot;高級&quot;汗，我的職責涵蓋了廣泛的技術和非技術相關的東西。Elixir, Go, nginx, mysql, Docker, debezium, Kafka, Terraform, Ansible, HTTP APIs, a bit of Angular, mentoring, hiring (technical interviews), product discovery, design docs drafts, etc, <p>當談到招聘高級軟件工程師時，我的公司和同行們似乎非常關注以下話題：<p>- 候選人是否瞭解性能、可擴展性和高可用性話題？<p>- 他們是否瞭解Infra話題，如。<p>- 他們是否瞭解GCP或AWS？<p>- 他們是否可以參加我們的輪值計劃？<p>- 他們是否可以指導更多的初級工程師？<p> 當然更不用說對高級軟件工程師的更多經典要求，如：實際工作經驗，堅實的計算機科學/軟件工程基礎知識，良好的實踐，解決問題的能力，良好的溝通能力，等等。我想看看候選人是否能夠在從事技術解決方案的同時進行有效的溝通。我可以不關心GCP、Ansible、他們掌握的最多的編程語言等細節，或者他們是否使用K8s。如果需要的話，這些技術是可以學習的。不過，我的公司不喜歡我的做法，他們堅持要我問非常具體的技術問題。<p>你怎麼看？我們目前正在招聘&quot;Go高級軟件工程師&quot;（這是Linkedin中的實際職位名稱），但當你來和我一起工作時，我不能關心你是否懂得Go。我想知道的是你是否善於解決問題。"
}