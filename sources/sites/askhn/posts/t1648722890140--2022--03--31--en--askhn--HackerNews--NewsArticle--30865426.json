{
  "@type": "NewsArticle",
  "identifier": "2022--03--31--en--askhn--HackerNews--NewsArticle--30865426",
  "url": "https://news.ycombinator.com/item?id=30865426",
  "headline": "Ask HN: How are OS able to support such a number of devices?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I have been reading about computer architecture and device drives and it is very fascinating on how a processor functions and how are operating systems created to abstract the low level details of the CPU. I was able to understand about the processor, memory and basic devices (like the Hard Disk and Display) using the  Writing a simple operating system from scratch book (https://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf) shared recently on HN (https://news.ycombinator.com/item?id=30800715). Understanding this provides a good grasp of the fundamentals of the hardware and software.<p>But, even after this, I am not really sure on an Operating System can support such a massive number of devices, that just simply work on plug and play basis. If feels like magic. I understand that the operating system has in build drivers to a lot of these devices, but still don't understand how are such a massive number of devices covered using just by the inbuild drivers. Also, how does this related to PCI Express and other kinds of busses ? What there the generic interfaces which enable such massive number of devices to be able to work with the operating system ?<p>Does anyone have any good resources for explaining this from first principles, for eg. How would one go about designing a system that can work with so many devices out of the box at runtime ? It'll be really great is anyone has analogies for understanding the various parts involved in such a system.<p>Thank you!",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "s3micolon0",
    "url": "https://news.ycombinator.com/user?id=s3micolon0"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30865426",
  "sameAs": "https://news.ycombinator.com/item?id=30865426",
  "dateCreated": "2022-03-31T10:34:50.140Z",
  "datePublished": "2022-03-31T09:48:28.000Z",
  "dateModified": "2022-03-31T10:34:50.140Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 操作系统如何能够支持如此多的设备？",
  "headline_zh-Hant": "Ask HN: 操作系統如何能夠支持如此多的設備？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我一直在阅读关于计算机架构和设备驱动的文章，其中关于处理器如何运作以及如何创建操作系统来抽象CPU的低级细节的内容非常吸引人。最近在HN（https://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf）上分享的《从零开始写一个简单的操作系统》一书，让我了解了处理器、内存和基本设备（如硬盘和显示器）。但是，即使这样，我也不确定一个操作系统是否能够支持如此大量的设备，这些设备只是简单地在即插即用的基础上工作。如果感觉像魔术一样。我知道操作系统对很多设备都有内置的驱动程序，但我仍然不明白，如此大量的设备是如何通过内置的驱动程序来覆盖的。另外，这与PCI Express和其他类型的总线有什么关系？有什么通用的接口可以让这么多的设备与操作系统一起工作呢？ <p>谁有什么好的资源可以从第一原理来解释这个问题，例如，如何去设计一个系统，可以在运行时与这么多设备一起工作？如果有人能用类比的方法来理解这样一个系统所涉及的各个部分，那就真的太好了。",
  "description_zh-Hant": "我一直在閱讀關於計算機架構和設備驅動的文章，其中關於處理器如何運作以及如何創建操作系統來抽象CPU的低級細節的內容非常吸引人。最近在HN（https://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf）上分享的《從零開始寫一個簡單的操作系統》一書，讓我瞭解了處理器、內存和基本設備（如硬盤和顯示器）。但是，即使這樣，我也不確定一個操作系統是否能夠支持如此大量的設備，這些設備只是簡單地在即插即用的基礎上工作。如果感覺像魔術一樣。我知道操作系統對很多設備都有內置的驅動程序，但我仍然不明白，如此大量的設備是如何通過內置的驅動程序來覆蓋的。另外，這與PCI Express和其他類型的總線有什麼關係？有什麼通用的接口可以讓這麼多的設備與操作系統一起工作呢？ <p>誰有什麼好的資源可以從第一原理來解釋這個問題，例如，如何去設計一個系統，可以在運行時與這麼多設備一起工作？如果有人能用類比的方法來理解這樣一個系統所涉及的各個部分，那就真的太好了。"
}