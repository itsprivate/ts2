{
  "@type": "NewsArticle",
  "identifier": "2022--03--07--en--askhn--HackerNews--NewsArticle--30594331",
  "url": "https://news.ycombinator.com/item?id=30594331",
  "headline": "Ask HN: Versioning Backup",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hello HN!<p>I currently have a backup/archival setup which works like this:<p><pre><code>  Local Machine --&gt; Syncthing --&gt; cluster of boxes regionally separated --&gt; zfs shares --&gt; restic --&gt; Amazon S3 (soon to be replaced)\n</code></pre>\nAs it stands, I have restic running on two servers, however they operate in a sort of primary/secondary mode (of my own design), where restic will only run on the secondary server if it cannot reach the primary server on a designated port and receive a correct message.<p>So far, this set up has worked well, I have hourly/daily/weekly snapshots on zfs, and restic runs daily archiving all the information.<p>I've been pretty happy with this setup, it's mostly been designed to protect against loss of data on my main machine (via PEBAK or ransomware type issues).<p>One noticeable gap I've found is the gap of versioning backup. Similar to something like Dropbox where it tracks the versions of files (up to a certain number), it would be nice if the first layer (i.e. the Syncthing replacement) could handle file versions. Obviously, this wouldn't be useful for items for which versioning isn't required (e.g. video/audio files) or where versioning is implicit (e.g. source code repos), but I found I like having versioning for things like my documents which do not fall into that category. The ideal state would be a program which could be configured for multiple profiles, so I could have video/audio backed up in one way, source code/artifacts backed up another, and finally documents backed up yet another way. I would then be able to view the revisions and restore.<p>I'm not looking for it to understand the structure of file and the changes (a la Office365 document changes) but at least show me the change times and the file size etc, and I could restore accordingly.<p>Some solutions I've tried:<p>- https://bvckup2.com/ (windows-only) -- this one came <i>really</i> close in that it had almost all the features, however it lacked a robust versioning feature. As it stands, it supports a file based feature which moves the file to an &quot;archive&quot; location. There isn't an in-app way to do this, although reviewing the archive folder is helpful.<p>- git-annex -- this one looked like it would work, but as I understand it, it does not actually store the differences of file versions. If you manually create tags, it will store those, but it won't by default (or atleast I couldn't find it in the git-annex-assistant stuff).<p>- Syncthing -- while there is a versioning capability as part of Syncthing, it is for inbound changes only, it won't version an outbound change.<p>- VSC/Time Machine -- these are close, but ultimately seem to be similar versions of creating snapshot at time intervals.<p>I'll be honest, I haven't spent too much time with git annex, it feels like it could work with a special remote of bup, but I just couldn't figure it out and I also wanted to avoid using bup until it was a bit more stable.<p>I also tried using NILFS2 (https://www.kernel.org/doc/html/latest/filesystems/nilfs2.html) on one of my boxes to see if I could use that in a similar fashion. While it worked it a fairly interesting manner, I didn't see a lot of broad support and didn't want to go down that route.<p>Does anyone have an ideas?<p>HN threads I've read:<p>- https://news.ycombinator.com/item?id=18692844<p>- https://news.ycombinator.com/item?id=28758415<p>- https://news.ycombinator.com/item?id=25758675<p>- https://news.ycombinator.com/item?id=18689269<p>- https://news.ycombinator.com/item?id=21211859<p>- https://news.ycombinator.com/item?id=22855755<p>- https://news.ycombinator.com/item?id=23281880<p>- https://news.ycombinator.com/item?id=29863822<p>- https://news.ycombinator.com/item?id=22253981<p>- https://news.ycombinator.com/item?id=30481935",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "backup_help",
    "url": "https://news.ycombinator.com/user?id=backup_help"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30594331",
  "sameAs": "https://news.ycombinator.com/item?id=30594331",
  "dateCreated": "2022-03-07T23:10:13.614Z",
  "datePublished": "2022-03-07T22:41:17.000Z",
  "dateModified": "2022-03-07T23:10:13.614Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 版本管理备份",
  "headline_zh-Hant": "Ask HN: 版本管理備份",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hello HN!<p>I currently have a backup/archival setup which works like this:<p><pre><code> Local Machine --&gt; Syncthing --&gt; cluster of boxes regionally separated --&gt; zfs shares --&gt; restic --&gt; Amazon S3 (soon to be replaced)\n</code></pre>\n目前，我在两台服务器上运行restic，但是它们以一种主/次模式（我自己设计的）运行，如果restic不能在指定的端口上到达主服务器并接收到正确的信息，它将只在次服务器上运行。 <p>到目前为止，这种设置运行良好，我在zfs上每小时/每天/每周都有快照，而restic每天都会运行存档所有的信息。<p>我对这种设置相当满意，它主要是为了防止我的主机器上的数据丢失（通过PEBAK或赎金软件类型的问题）。<p>我发现一个明显的差距是版本备份的差距。类似于像Dropbox那样跟踪文件的版本（达到一定数量），如果第一层（即Syncthing的替代品）能够处理文件版本，那就更好了。显然，这对于不需要版本控制的项目（如视频/音频文件）或版本控制是隐含的（如源代码库）来说是没有用的，但我发现我喜欢对像我的文件这样的东西有版本控制，而这些东西不属于这个类别。最理想的状态是一个可以配置多个配置文件的程序，所以我可以用一种方式备份视频/音频，用另一种方式备份源代码/工件，最后用另一种方式备份文档。<p>我不希望它了解文件的结构和变化（就像Office365的文件变化一样），但至少要告诉我变化的时间和文件的大小等，我可以据此进行恢复。<p>我试过的一些解决方案：<p>- https://bvckup2.com/ (windows-only) -- 这个解决方案非常接近，因为它几乎拥有所有的功能，但它缺乏一个强大的版本管理功能。目前，它支持一个基于文件的功能，将文件移动到一个&quot;存档&quot;位置。<p>- git-annex -- 这个看起来可以工作，但据我所知，它实际上并不存储文件版本的差异。<p>- Syncthing -- 虽然Syncthing有一个版本管理功能，但它只针对入站变化，不会对出站变化进行版本管理。<p>- VSC/Time Machine -- 这些很接近，但最终似乎是以时间间隔创建快照的类似版本。 <p>说实话，我没有花太多时间在git附件上，感觉它可以用bup的一个特殊的远程来工作，但我就是搞不清楚，我也想避免使用bup，直到它更稳定一些。<p>我也尝试在我的一个盒子上使用NILFS2（https://www.kernel.org/doc/html/latest/filesystems/nilfs2.html），看看我是否能以类似的方式使用它。虽然它的工作方式相当有趣，但我没有看到很多广泛的支持，也不想走这条路。<p>有人有想法吗？<p>我读过的HN线程：<p>- https://news.ycombinator.com/item?id=18692844<p>- https://news.ycombinator.com/item?id=28758415<p>- https://news.ycombinator.com/item?id=25758675<p>- https://news.ycombinator.com/item?id=18689269<p>- https://news.ycombinator.com/item?id=21211859<p>- https://news.ycombinator.com/item?id=22855755<p>- https://news.ycombinator.com/item?id=23281880<p>- https://news.ycombinator.com/item?id=29863822<p>- https://news.ycombinator.com/item?id=22253981<p>- https://news.ycombinator.com/item?id=30481935",
  "description_zh-Hant": "Hello HN!<p>I currently have a backup/archival setup which works like this:<p><pre><code> Local Machine --&gt; Syncthing --&gt; cluster of boxes regionally separated --&gt; zfs shares --&gt; restic --&gt; Amazon S3 (soon to be replaced)\n</code></pre>\n目前，我在兩臺服務器上運行restic，但是它們以一種主/次模式（我自己設計的）運行，如果restic不能在指定的端口上到達主服務器並接收到正確的信息，它將只在次服務器上運行。 <p>到目前為止，這種設置運行良好，我在zfs上每小時/每天/每週都有快照，而restic每天都會運行存檔所有的信息。<p>我對這種設置相當滿意，它主要是為了防止我的主機器上的數據丟失（通過PEBAK或贖金軟件類型的問題）。<p>我發現一個明顯的差距是版本備份的差距。類似於像Dropbox那樣跟蹤文件的版本（達到一定數量），如果第一層（即Syncthing的替代品）能夠處理文件版本，那就更好了。顯然，這對於不需要版本控制的項目（如視頻/音頻文件）或版本控制是隱含的（如源代碼庫）來說是沒有用的，但我發現我喜歡對像我的文件這樣的東西有版本控制，而這些東西不屬於這個類別。最理想的狀態是一個可以配置多個配置文件的程序，所以我可以用一種方式備份視頻/音頻，用另一種方式備份源代碼/工件，最後用另一種方式備份文檔。<p>我不希望它瞭解文件的結構和變化（就像Office365的文件變化一樣），但至少要告訴我變化的時間和文件的大小等，我可以據此進行恢復。<p>我試過的一些解決方案：<p>- https://bvckup2.com/ (windows-only) -- 這個解決方案非常接近，因為它幾乎擁有所有的功能，但它缺乏一個強大的版本管理功能。目前，它支持一個基於文件的功能，將文件移動到一個&quot;存檔&quot;位置。<p>- git-annex -- 這個看起來可以工作，但據我所知，它實際上並不存儲文件版本的差異。<p>- Syncthing -- 雖然Syncthing有一個版本管理功能，但它只針對入站變化，不會對出站變化進行版本管理。<p>- VSC/Time Machine -- 這些很接近，但最終似乎是以時間間隔創建快照的類似版本。 <p>說實話，我沒有花太多時間在git附件上，感覺它可以用bup的一個特殊的遠程來工作，但我就是搞不清楚，我也想避免使用bup，直到它更穩定一些。<p>我也嘗試在我的一個盒子上使用NILFS2（https://www.kernel.org/doc/html/latest/filesystems/nilfs2.html），看看我是否能以類似的方式使用它。雖然它的工作方式相當有趣，但我沒有看到很多廣泛的支持，也不想走這條路。<p>有人有想法嗎？<p>我讀過的HN線程：<p>- https://news.ycombinator.com/item?id=18692844<p>- https://news.ycombinator.com/item?id=28758415<p>- https://news.ycombinator.com/item?id=25758675<p>- https://news.ycombinator.com/item?id=18689269<p>- https://news.ycombinator.com/item?id=21211859<p>- https://news.ycombinator.com/item?id=22855755<p>- https://news.ycombinator.com/item?id=23281880<p>- https://news.ycombinator.com/item?id=29863822<p>- https://news.ycombinator.com/item?id=22253981<p>- https://news.ycombinator.com/item?id=30481935"
}