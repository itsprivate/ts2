{
  "@type": "NewsArticle",
  "identifier": "2022--07--11--en--askhn--HackerNews--NewsArticle--32058284",
  "url": "https://news.ycombinator.com/item?id=32058284",
  "headline": "Ask HN: Any alternative to Java (OOP) which has the same ecosystem?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I've professionally programmed in Java, Python, Haskell and JavaScript.<p>Of these, I've found Java to be easiest when dealing with large code bases ( &gt; 100,000 LOC ). It is complied, has a strong type system, very good standard library, good &amp; mature build systems, and excellent tooling with IDEs like IntelliJ.<p>However, I am not a fan to object oriented programming. I suppose I am looking for a C / Python / Haskell like language with the same ecosystem / popularity as Java.<p>I tried Go, but it looks like Go is built to programmed on internet connected devices only. \nWith Java, dependencies can even be downloaded and put as Jars.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "SpacePortKnight",
    "url": "https://news.ycombinator.com/user?id=SpacePortKnight"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32058284",
  "sameAs": "https://news.ycombinator.com/item?id=32058284",
  "dateCreated": "2022-07-11T16:44:42.007Z",
  "datePublished": "2022-07-11T16:27:43.000Z",
  "dateModified": "2022-07-11T16:44:42.007Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 2
    }
  ],
  "headline_zh-Hans": "Ask HN: 有什么可以替代具有相同生态系统的Java（OOP）？\n",
  "headline_zh-Hant": "Ask HN: 有什麼可以替代具有相同生態系統的Java（OOP）？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我曾经用Java、Python、Haskell和JavaScript进行过专业编程。<p>其中，我发现在处理大型代码库（&gt; 100,000 LOC）时，Java是最容易的。它被编译，有一个强大的类型系统，非常好的标准库，良好的&amp；成熟的构建系统，以及像IntelliJ这样的IDE的优秀工具。<p>然而，我并不喜欢面向对象的编程。我想我正在寻找一种类似于C/Python/Haskell的语言，它具有与Java相同的生态系统/知名度。<p>我试过Go，但看起来Go只为在互联网连接的设备上编程而生。\n在Java中，依赖性甚至可以被下载并作为Jars放入。\n",
  "description_zh-Hant": "我曾經用Java、Python、Haskell和JavaScript進行過專業編程。<p>其中，我發現在處理大型代碼庫（&gt; 100,000 LOC）時，Java是最容易的。它被編譯，有一個強大的類型系統，非常好的標準庫，良好的&amp；成熟的構建系統，以及像IntelliJ這樣的IDE的優秀工具。<p>然而，我並不喜歡面向對象的編程。我想我正在尋找一種類似於C/Python/Haskell的語言，它具有與Java相同的生態系統/知名度。<p>我試過Go，但看起來Go只為在互聯網連接的設備上編程而生。\n在Java中，依賴性甚至可以被下載並作為Jars放入。\n"
}