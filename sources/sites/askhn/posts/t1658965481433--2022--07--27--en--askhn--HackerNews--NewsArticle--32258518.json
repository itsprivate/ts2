{
  "@type": "NewsArticle",
  "identifier": "2022--07--27--en--askhn--HackerNews--NewsArticle--32258518",
  "url": "https://news.ycombinator.com/item?id=32258518",
  "headline": "Ask HN: Similar project for dotfile management exist?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi!<p>I checked a few project for dotfile management (GNU stow, dotbot, chezmoi, etc) but each very similar in operation: the dofiles are linked/copied based on a predefined config file or a folder structure.<p>I'm searching for a solution which operates something like this (lets call it foo):<p>1. a folder for the dotfiles initialized somewhere, but empty. For example ~/.foo<p>2. you can be anywhere in the directory sturcture, lets say you are in the /etc/ folder<p>3. If you execute the &quot;foo hosts&quot; command, (it may asks for root passwd) the following happens: mv /etc/hosts ~/.foo/etc/hosts, and link it back to its original place + write info about the files into a text based config file like ~/.foo/config.yaml<p>4. You can push all of it into git<p>5. Pull the configs into a new machine, and based on the config.yaml file &quot;foo&quot; can restore the desidred dot/config files<p>The important thing here is I dont have to edit config files manually while I can save/restore config files from anywhere on my system. Unfortunately I havent found similar projects yet, thanks for any tip!",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "SPYFF",
    "url": "https://news.ycombinator.com/user?id=SPYFF"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32258518",
  "sameAs": "https://news.ycombinator.com/item?id=32258518",
  "dateCreated": "2022-07-27T23:44:41.433Z",
  "datePublished": "2022-07-27T23:37:07.000Z",
  "dateModified": "2022-07-27T23:44:41.433Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 是否存在类似的dotfile管理项目？\n",
  "headline_zh-Hant": "Ask HN: 是否存在類似的dotfile管理項目？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嗨！<p>我检查了几个点文件管理的项目（GNU stow, dotbot, chezmoi等），但每个项目的操作都非常相似：点文件是根据一个预定义的配置文件或文件夹结构来链接/复制的。<p>我正在寻找一个解决方案，它的操作是这样的（让我们称之为foo）：<p>1.一个点文件的文件夹被初始化，但是是空的。例如 ~/.foo<p>2.你可以在目录结构中的任何地方，比如说你在 /etc/ 文件夹中<p>3.如果你执行 &quot;foo hosts&quot; 命令，（它可能要求 root 密码）会发生以下情况：mv /etc/hosts ~/. foo/etc/hosts，并将其链接到原来的地方 + 将文件信息写入基于文本的配置文件，如 ~/.foo/config.yaml<p>4。 你可以将所有这些推送到git<p>5。把配置拉到一个新的机器上，根据config.yaml文件&quot;foo&quot;可以恢复指定的dot/config文件<p>这里重要的是我不必手动编辑配置文件，而我可以从系统的任何地方保存/恢复配置文件。不幸的是，我还没有找到类似的项目，谢谢你的任何提示\n",
  "description_zh-Hant": "嗨！<p>我檢查了幾個點文件管理的項目（GNU stow, dotbot, chezmoi等），但每個項目的操作都非常相似：點文件是根據一個預定義的配置文件或文件夾結構來鏈接/複製的。<p>我正在尋找一個解決方案，它的操作是這樣的（讓我們稱之為foo）：<p>1.一個點文件的文件夾被初始化，但是是空的。例如 ~/.foo<p>2.你可以在目錄結構中的任何地方，比如說你在 /etc/ 文件夾中<p>3.如果你執行 &quot;foo hosts&quot; 命令，（它可能要求 root 密碼）會發生以下情況：mv /etc/hosts ~/. foo/etc/hosts，並將其鏈接到原來的地方 + 將文件信息寫入基於文本的配置文件，如 ~/.foo/config.yaml<p>4。 你可以將所有這些推送到git<p>5。把配置拉到一個新的機器上，根據config.yaml文件&quot;foo&quot;可以恢復指定的dot/config文件<p>這裡重要的是我不必手動編輯配置文件，而我可以從系統的任何地方保存/恢復配置文件。不幸的是，我還沒有找到類似的項目，謝謝你的任何提示\n"
}