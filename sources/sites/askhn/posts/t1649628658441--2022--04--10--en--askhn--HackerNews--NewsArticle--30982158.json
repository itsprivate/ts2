{
  "@type": "NewsArticle",
  "identifier": "2022--04--10--en--askhn--HackerNews--NewsArticle--30982158",
  "url": "https://news.ycombinator.com/item?id=30982158",
  "headline": "Ask HN: Is Nvidia making an open-source Linux driver?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Some may have seen this article: https://www.phoronix.com/scan.php?page=news_item&amp;px=NVIDIA-Kernel-Driver-Source. I know it was posted a few days ago on HN and dismissed as the `nvgpu` driver. Curious for myself, I downloaded the driver and investigated.<p>When you download a regular desktop NVIDIA driver on Linux, you get a file called `nv-kernel.o_binary`. This is the binary blob, to my knowledge, that is used over a shim that is FOSS (to get around Linux licensing restrictions). When I downloaded this new Tegra driver, it had a modified version of the `nv-kernel.o_binary`'s source code. As in, if I run make in the directory, it compiles all the files and gives me an `nv-kernel.o`. Furthermore, looking through the actual code, there seem to be implementations of several functions that are in the binary blob that I can read in physical, hard C code.<p>To (perhaps) prove to you this isn't just some ordinary thing, look at a reverse-engineered file of NVIDIA ioctl structs: https://github.com/envytools/envytools/blob/master/demmt/nvrm_mthd.h#L46.<p>File `src/common/sdk/nvidia/inc/ctrl/ctrl0000/ctrl0000system.h` from the new Tegra driver, line 112;<p><pre><code>  #define NV0000_CTRL_CMD_SYSTEM_GET_BUILD_VERSION          (0x101) /* finn: Evaluated from &quot;(FINN_NV01_ROOT_SYSTEM_INTERFACE_ID &lt;&lt; 8) | NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS_MESSAGE_ID&quot; */\n\n  #define NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS_MESSAGE_ID (0x1U) \n\n  typedef struct NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS {\n      NvU32 sizeOfStrings;\n      NV_DECLARE_ALIGNED(NvP64 pDriverVersionBuffer, 8);\n      NV_DECLARE_ALIGNED(NvP64 pVersionBuffer, 8);\n      NV_DECLARE_ALIGNED(NvP64 pTitleBuffer, 8);\n      NvU32 changelistNumber;  \n      NvU32 officialChangelistNumber;\n  } NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS;\n</code></pre>\nNotice how the sizeof's of each struct, whether the reverse engineered one or the new one are the same (EDIT they're not, but they're similar in size (missing one u32) and the operation hex code is the same). Not only do we know what this undocumented ioctl does now, we also have its struct members' names and purposes that you'd pass when trying to issue that ioctl.<p>In addition, I found other evidence of a possible open-source NVIDIA driver. A prior HN article: https://www.collabora.com/news-and-blog/blog/2022/03/23/how-to-write-vulkan-driver-in-2022/, clearly highlights that Collabora is working on a FOSS Mesa Vulkan driver for NVIDIA GPUs.<p>&gt; I'm going to pick on NVIDIA because... Why not? Such a driver is clearly missing and really should happen soon. (Hint! Hint!)<p>Furthermore, https://blogs.gnome.org/uraeus/2022/02/01/getting-rid-of-the-need-for-the-usecase-linux-distribution/.<p>&gt; while I am not at liberty to mention any details I think I can at least mention that we are meeting with our engineering counterparts at NVidia on almost a weekly basis to discuss how to improve things, not just for graphics, but around compute and other shared areas of interest. The most recent public result of that collaboration was of course the XWayland support in recent NVidia drivers, but I promise you that this is something we keep focusing on and I expect that we will be able to share more cool news and important progress over the course of the year, both for users of the NVidia binary driver and for users of Nouveau.<p>Why would NVIDIA take their binary blob and open source at least some of it under MIT (revealing new details about how their GPUs work)? Their Tegra driver is clearly not the old one, it has references to enterprise GPUs and features like vGPU, GRID, and VMware ESXi. Why is Collabora working on a FOSS NVIDIA Vulkan driver? Why are people saying something regarding NVIDIA is under wraps?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "kaladin-jasnah",
    "url": "https://news.ycombinator.com/user?id=kaladin-jasnah"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30982158",
  "sameAs": "https://news.ycombinator.com/item?id=30982158",
  "dateCreated": "2022-04-10T22:10:58.441Z",
  "datePublished": "2022-04-10T22:01:36.000Z",
  "dateModified": "2022-04-10T22:10:58.441Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: Nvidia正在制作一个开源的Linux驱动程序吗？",
  "headline_zh-Hant": "Ask HN: Nvidia正在製作一個開源的Linux驅動程序嗎？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "有些人可能已经看到这篇文章：https://www.phoronix.com/scan.php?page=news_item&amp;px=NVIDIA-Kernel-Driver-Source。我知道它几天前被贴在HN上，并被当作 \"nvgpu \"驱动驳回。<p>当你在Linux上下载普通桌面NVIDIA驱动程序时，你会得到一个名为`nv-kernel.o_binary`的文件。据我所知，这是一个二进制的blob，它被用在一个FOSS的垫片上（以绕过Linux的许可限制）。当我下载这个新的Tegra驱动时，它有一个`nv-kernel.o_binary`源代码的修改版本。就像，如果我在目录中运行make，它会编译所有的文件并给我一个`nv-kernel.o`。Furthermore, looking through the actual code, there seem to be implementations of several functions that are in the binary blob that I can read in physical, hard C code.<p>To (perhaps) prove to you this isn't just some ordinary thing, look at a reverse-engineered file of NVIDIA ioctl structs: https://github. com/envytools/envytools/blob/master/demmt/nvrm_mthd.h#L46.<p>File `src/common/sdk/nvidia/inc/ctrl/ctrl0000/ctrl0000system.h` from the new Tegra driver, line 112;<p><pre><code> #define NV0000_CTRL_CMD_SYSTEM_GET_BUILD_VERSION (0x101) /* finn: 从&quot;(FINN_NV01_ROOT_SYSTEM_INTERFACE_ID &lt;&lt; 8) | NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS_MESSAGE_ID&quot; */\n\n  #define NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS_MESSAGE_ID (0x1U) \n\n  typedef struct NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS {\n      NvU32 sizeOfStrings;\n      NV_DECLARE_ALIGNED(NvP64 pDriverVersionBuffer, 8);\n      NV_DECLARE_ALIGNED(NvP64 pVersionBuffer, 8);\n      NV_DECLARE_ALIGNED(NvP64 pTitleBuffer, 8);\n      NvU32 changelistNumber;  \n      NvU32 officialChangelistNumber;\n  } NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS;\n</code></pre>\n注意到每个结构的sizeof's，无论是反向工程的结构还是新的结构都是一样的（EDIT他们不是，但他们的大小相似（缺少一个u32），而且操作的十六进制代码也是一样的）。我们现在不仅知道这个未记录的ioctl是做什么的，我们还知道它的结构成员的名字和用途，当你试图发出这个ioctl时，你会通过它。<p>此外，我还发现了其他可能是开源的NVIDIA驱动程序的证据。HN之前的一篇文章：https://www.collabora.com/news-and-blog/blog/2022/03/23/how-to-write-vulkan-driver-in-2022/，清楚地强调了Collabora正在为NVIDIA GPU开发一个FOSS Mesa Vulkan驱动程序。<p>&gt; 我之所以要针对NVIDIA，是因为。为什么不呢？这样的驱动显然是缺失的，而且真的应该尽快实现。(提示！提示！)<p>此外，https://blogs.gnome.org/uraeus/2022/02/01/getting-rid-of-the-need-for-the-usecase-linux-distribution/。<p>&gt; 虽然我不能随意提及任何细节，但我想我至少可以提及，我们几乎每周都会与NVidia的工程同行会面，讨论如何改进工作，不仅是图形，还有围绕计算和其他共同感兴趣的领域。这种合作的最新公开成果当然是最近NVidia驱动程序中对XWayland的支持，但我向你保证，这是我们一直关注的事情，我希望在这一年中，我们能够为NVidia二进制驱动程序的用户和Nouveau的用户分享更多很酷的消息和重要进展。<p>为什么NVIDIA会把他们的二进制blob和至少部分在MIT下开放源代码（揭示他们GPU工作的新细节）？他们的Tegra驱动程序显然不是旧版的，它提到了企业级GPU和vGPU、GRID和VMware ESXi等功能。为什么Collabora正在开发一个FOSS的NVIDIA Vulkan驱动程序？为什么人们说有关英伟达的东西是保密的？",
  "description_zh-Hant": "有些人可能已經看到這篇文章：https://www.phoronix.com/scan.php?page=news_item&amp;px=NVIDIA-Kernel-Driver-Source。我知道它幾天前被貼在HN上，並被當作 \"nvgpu \"驅動駁回。<p>當你在Linux上下載普通桌面NVIDIA驅動程序時，你會得到一個名為`nv-kernel.o_binary`的文件。據我所知，這是一個二進制的blob，它被用在一個FOSS的墊片上（以繞過Linux的許可限制）。當我下載這個新的Tegra驅動時，它有一個`nv-kernel.o_binary`源代碼的修改版本。就像，如果我在目錄中運行make，它會編譯所有的文件並給我一個`nv-kernel.o`。Furthermore, looking through the actual code, there seem to be implementations of several functions that are in the binary blob that I can read in physical, hard C code.<p>To (perhaps) prove to you this isn't just some ordinary thing, look at a reverse-engineered file of NVIDIA ioctl structs: https://github. com/envytools/envytools/blob/master/demmt/nvrm_mthd.h#L46.<p>File `src/common/sdk/nvidia/inc/ctrl/ctrl0000/ctrl0000system.h` from the new Tegra driver, line 112;<p><pre><code> #define NV0000_CTRL_CMD_SYSTEM_GET_BUILD_VERSION (0x101) /* finn: 從&quot;(FINN_NV01_ROOT_SYSTEM_INTERFACE_ID &lt;&lt; 8) | NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS_MESSAGE_ID&quot; */\n\n  #define NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS_MESSAGE_ID (0x1U) \n\n  typedef struct NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS {\n      NvU32 sizeOfStrings;\n      NV_DECLARE_ALIGNED(NvP64 pDriverVersionBuffer, 8);\n      NV_DECLARE_ALIGNED(NvP64 pVersionBuffer, 8);\n      NV_DECLARE_ALIGNED(NvP64 pTitleBuffer, 8);\n      NvU32 changelistNumber;  \n      NvU32 officialChangelistNumber;\n  } NV0000_CTRL_SYSTEM_GET_BUILD_VERSION_PARAMS;\n</code></pre>\n注意到每個結構的sizeof's，無論是反向工程的結構還是新的結構都是一樣的（EDIT他們不是，但他們的大小相似（缺少一個u32），而且操作的十六進制代碼也是一樣的）。我們現在不僅知道這個未記錄的ioctl是做什麼的，我們還知道它的結構成員的名字和用途，當你試圖發出這個ioctl時，你會通過它。<p>此外，我還發現了其他可能是開源的NVIDIA驅動程序的證據。HN之前的一篇文章：https://www.collabora.com/news-and-blog/blog/2022/03/23/how-to-write-vulkan-driver-in-2022/，清楚地強調了Collabora正在為NVIDIA GPU開發一個FOSS Mesa Vulkan驅動程序。<p>&gt; 我之所以要針對NVIDIA，是因為。為什麼不呢？這樣的驅動顯然是缺失的，而且真的應該儘快實現。(提示！提示！)<p>此外，https://blogs.gnome.org/uraeus/2022/02/01/getting-rid-of-the-need-for-the-usecase-linux-distribution/。<p>&gt; 雖然我不能隨意提及任何細節，但我想我至少可以提及，我們幾乎每週都會與NVidia的工程同行會面，討論如何改進工作，不僅是圖形，還有圍繞計算和其他共同感興趣的領域。這種合作的最新公開成果當然是最近NVidia驅動程序中對XWayland的支持，但我向你保證，這是我們一直關注的事情，我希望在這一年中，我們能夠為NVidia二進制驅動程序的用戶和Nouveau的用戶分享更多很酷的消息和重要進展。<p>為什麼NVIDIA會把他們的二進制blob和至少部分在MIT下開放源代碼（揭示他們GPU工作的新細節）？他們的Tegra驅動程序顯然不是舊版的，它提到了企業級GPU和vGPU、GRID和VMware ESXi等功能。為什麼Collabora正在開發一個FOSS的NVIDIA Vulkan驅動程序？為什麼人們說有關英偉達的東西是保密的？"
}