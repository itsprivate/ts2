{
  "@type": "NewsArticle",
  "identifier": "2022--08--21--en--askhn--HackerNews--NewsArticle--32536835",
  "url": "https://news.ycombinator.com/item?id=32536835",
  "headline": "Ask HN: Tools for Noob to Polished IC",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hobbyist/grad/nOOb to polished IC: What are the learnable tools that can best help an  early hire transition to a productive IC in *your own* type of software team? Very curious if this tends to be highly uniform or highly varied.<p>Considerations for starters:\nGit with team-based workflow\nAbstraction/modularity\nAlgorithms\nTest-driven development \nScrum/agile\nExtreme expertise in a particular language or framework<p>Let’s assume the person is otherwise reliable, respectful, enthusiastic, communicates well, etc.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "medymed",
    "url": "https://news.ycombinator.com/user?id=medymed"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32536835",
  "sameAs": "https://news.ycombinator.com/item?id=32536835",
  "dateCreated": "2022-08-21T02:29:11.398Z",
  "datePublished": "2022-08-21T02:17:32.000Z",
  "dateModified": "2022-08-21T02:29:11.398Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 从新手到精通IC的工具\n",
  "headline_zh-Hant": "Ask HN: 從新手到精通IC的工具\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "爱好者/毕业生/nOOb到成熟的IC。在你自己的*类型的软件团队中，有哪些可学习的工具可以最好地帮助早期雇员过渡到一个有成效的IC？我很好奇，这往往是高度统一的，还是高度不同的。<p>初学者的考虑因素。\n基于团队的工作流程的Git\n抽象/模块化\n算法\n测试驱动的开发 \nScrum/agile\n在某一特定语言或框架方面的极端专长<p>让我们假设这个人在其他方面是可靠的、尊重的、热情的、沟通良好的，等等。\n",
  "description_zh-Hant": "愛好者/畢業生/nOOb到成熟的IC。在你自己的*類型的軟件團隊中，有哪些可學習的工具可以最好地幫助早期僱員過渡到一個有成效的IC？我很好奇，這往往是高度統一的，還是高度不同的。<p>初學者的考慮因素。\n基於團隊的工作流程的Git\n抽象/模塊化\n算法\n測試驅動的開發 \nScrum/agile\n在某一特定語言或框架方面的極端專長<p>讓我們假設這個人在其他方面是可靠的、尊重的、熱情的、溝通良好的，等等。\n"
}