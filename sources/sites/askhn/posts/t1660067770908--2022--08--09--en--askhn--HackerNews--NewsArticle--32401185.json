{
  "@type": "NewsArticle",
  "identifier": "2022--08--09--en--askhn--HackerNews--NewsArticle--32401185",
  "url": "https://news.ycombinator.com/item?id=32401185",
  "headline": "Ask HN: Why don't non-relational databases just treat rows as files?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Assuming the operating system's file system is built on some B+tree, the filename is the key (a UUID) and IO calls like fopen() and fclose() will have O(logn) access time. Files, while being modified, can be locked to prevent race conditions. Yes, there is inode overhead (1 million files in a folder is ~40MB), but I'm not using a 1994 desktop machine anymore.<p>What am I missing?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "glouwbug",
    "url": "https://news.ycombinator.com/user?id=glouwbug"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32401185",
  "sameAs": "https://news.ycombinator.com/item?id=32401185",
  "dateCreated": "2022-08-09T17:56:10.908Z",
  "datePublished": "2022-08-09T17:43:51.000Z",
  "dateModified": "2022-08-09T17:56:10.908Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 为什么非关系型数据库不直接将行作为文件来处理？\n",
  "headline_zh-Hant": "Ask HN: 為什麼非關係型數據庫不直接將行作為文件來處理？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "假设操作系统的文件系统建立在一些B+树上，文件名是关键（UUID），像fopen()和fclose()这样的IO调用将有O(logn)访问时间。文件在被修改时，可以被锁定以防止竞赛条件。是的，有节点开销（一个文件夹中的100万个文件是~40MB），但我不再使用1994年的台式机了。<p>我错过了什么？\n",
  "description_zh-Hant": "假設操作系統的文件系統建立在一些B+樹上，文件名是關鍵（UUID），像fopen()和fclose()這樣的IO調用將有O(logn)訪問時間。文件在被修改時，可以被鎖定以防止競賽條件。是的，有節點開銷（一個文件夾中的100萬個文件是~40MB），但我不再使用1994年的臺式機了。<p>我錯過了什麼？\n"
}