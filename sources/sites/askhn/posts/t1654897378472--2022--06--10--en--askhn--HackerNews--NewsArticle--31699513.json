{
  "@type": "NewsArticle",
  "identifier": "2022--06--10--en--askhn--HackerNews--NewsArticle--31699513",
  "url": "https://news.ycombinator.com/item?id=31699513",
  "headline": "Ask HN: Building a Kubernetes just for stateless applications",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Most of the gnarly things I've had to deal with while building and operations K8s clusters and related infrastructure is around stateful apps.<p>Most modern cloud applications and services rely on a set of services for storage that are mostly hosted by a cloud provider. I understand Kubernetes' intention is to help support all workloads. My thought is that those starting now don't need to inherit all that complexity - code paths, operations, possible risks in terms of security and stability as that part of the code changes, and the myriad of configuration options.<p>Instead a stateless container orchestrator can focus on things that maybe more relevant to modern cloud apps - like improved autoscaling, traffic routing, placement, etc.<p>I'd be interested to learn about new applications that are being built that require persistent disk storage.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "websap",
    "url": "https://news.ycombinator.com/user?id=websap"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31699513",
  "sameAs": "https://news.ycombinator.com/item?id=31699513",
  "dateCreated": "2022-06-10T21:42:58.472Z",
  "datePublished": "2022-06-10T21:23:07.000Z",
  "dateModified": "2022-06-10T21:42:58.472Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 为无状态的应用程序构建专门的Kubernetes\n",
  "headline_zh-Hant": "Ask HN: 為無狀態的應用程序構建專門的Kubernetes\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "在构建和运营K8s集群和相关基础设施时，我不得不处理的大多数棘手的事情都是围绕着有状态的应用程序。<p>大多数现代云应用程序和服务都依赖于一套用于存储的服务，这些服务大多由云提供商托管。我理解Kubernetes的意图是帮助支持所有工作负载。我的想法是，那些现在开始的人不需要继承所有这些复杂性--代码路径、操作、在安全和稳定性方面可能存在的风险，因为这部分代码发生了变化，以及无数的配置选项。<p>相反，无状态容器协调器可以专注于可能与现代云应用程序更相关的事情--如改进的自动缩放、流量路由、放置等。\n",
  "description_zh-Hant": "在構建和運營K8s集群和相關基礎設施時，我不得不處理的大多數棘手的事情都是圍繞著有狀態的應用程序。<p>大多數現代雲應用程序和服務都依賴於一套用於存儲的服務，這些服務大多由雲提供商託管。我理解Kubernetes的意圖是幫助支持所有工作負載。我的想法是，那些現在開始的人不需要繼承所有這些複雜性--代碼路徑、操作、在安全和穩定性方面可能存在的風險，因為這部分代碼發生了變化，以及無數的配置選項。<p>相反，無狀態容器協調器可以專注於可能與現代雲應用程序更相關的事情--如改進的自動縮放、流量路由、放置等。\n"
}