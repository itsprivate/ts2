{
  "@type": "NewsArticle",
  "identifier": "2022--08--17--en--askhn--HackerNews--NewsArticle--32498132",
  "url": "https://news.ycombinator.com/item?id=32498132",
  "headline": "Ask HN: Non-Breaking API deprecation in OpenAPI spec – what do you think?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Sometimes APIs need to be retired, for example when they are superseded by a new version.\nOpenAPI specification supports a &quot;deprecated&quot; flag which can be used to mark operations and other object types as deprecated, but it lacks the ability to manage a 2-phased API retirement process:\n1. Deprecate an API and, optionally, announce a &quot;sunset&quot; date\n2. Delete the API at the sunset date or later<p>People seem to want such a process in order to prevent breaking-changes.<p>I wrote a diff tool for OpenAPI spec which supports detection of breaking-changes and I recently extended it to support this process and a bit more.<p>Now I'm looking for feedback.<p>Proposed Solution (currently in Beta): https://github.com/Tufin/oasdiff#non-breaking-removal-of-deprecated-resources<p>Related requests:\n1. https://github.com/Tufin/oasdiff/issues/116\n2. https://github.com/OAI/OpenAPI-Specification/discussions/2770<p>Your feedback is much appreciated!",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "lonelygiraffe",
    "url": "https://news.ycombinator.com/user?id=lonelygiraffe"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32498132",
  "sameAs": "https://news.ycombinator.com/item?id=32498132",
  "dateCreated": "2022-08-17T16:40:54.182Z",
  "datePublished": "2022-08-17T16:04:22.000Z",
  "dateModified": "2022-08-17T16:40:54.182Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: OpenAPI规范中的非破坏性API废弃--你怎么看？\n",
  "headline_zh-Hant": "Ask HN: OpenAPI規範中的非破壞性API廢棄--你怎麼看？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "有时API需要退役，例如当它们被新的版本所取代时。\nOpenAPI规范支持一个&quot;deprecated&quot;标志，可以用来标记操作和其他对象类型为已废弃，但它缺乏管理两阶段API退休过程的能力。\n1. 废弃一个API，并可选择宣布一个&quot;日落&quot;日期\n2. <p>人们似乎希望有这样一个过程，以防止破坏性变化。<p>我为OpenAPI规范写了一个差异工具，它支持对破坏性变化的检测，我最近对它进行了扩展，以支持这个过程和更多。<p>现在我正在寻找反馈。<p>建议的解决方案（目前在Beta版）：https://github.com/Tufin/oasdiff#non-breaking-removal-of-deprecated-resources<p>相关的请求。\n1. https://github.com/Tufin/oasdiff/issues/116\n2. https://github.com/OAI/OpenAPI-Specification/discussions/2770<p>非常感谢您的反馈!\n",
  "description_zh-Hant": "有時API需要退役，例如當它們被新的版本所取代時。\nOpenAPI規範支持一個&quot;deprecated&quot;標誌，可以用來標記操作和其他對象類型為已廢棄，但它缺乏管理兩階段API退休過程的能力。\n1. 廢棄一個API，並可選擇宣佈一個&quot;日落&quot;日期\n2. <p>人們似乎希望有這樣一個過程，以防止破壞性變化。<p>我為OpenAPI規範寫了一個差異工具，它支持對破壞性變化的檢測，我最近對它進行了擴展，以支持這個過程和更多。<p>現在我正在尋找反饋。<p>建議的解決方案（目前在Beta版）：https://github.com/Tufin/oasdiff#non-breaking-removal-of-deprecated-resources<p>相關的請求。\n1. https://github.com/Tufin/oasdiff/issues/116\n2. https://github.com/OAI/OpenAPI-Specification/discussions/2770<p>非常感謝您的反饋!\n"
}