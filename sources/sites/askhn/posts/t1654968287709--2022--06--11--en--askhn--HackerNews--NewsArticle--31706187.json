{
  "@type": "NewsArticle",
  "identifier": "2022--06--11--en--askhn--HackerNews--NewsArticle--31706187",
  "url": "https://news.ycombinator.com/item?id=31706187",
  "headline": "Ask HN: How to advocate for prospective employers to show us their codebases?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "It's common for prospective employers to ask for some examples that prove our ability to code, whether through a sample assignment, an online programming test, whiteboarding, etc.<p>Sometimes a new job or contract will come with the discovery that the codebases on which we are asked to work are not what we were expecting, to put it lightly.<p>Such as,<p>* saturated with anti-patterns to the point that it's a massively negative impact on productivity<p>* excessively long compile / build times due to lack of maintenance and/or things just not being built well<p>* severely outdated tooling and versioning<p>etc.<p>While this can be a workable situation sometimes, an opportunity to contribute in a meaningful, positive way, in others it can be a tedious slog.<p>A developer can ask questions during the interview process about these things, which can sometimes illuminate these issues.<p>If an organization's developers are active in open source contributions, that can be a helpful signal as to the quality of a codebase.<p>And, it occurred to me that there's a big double standard in hiring around this. It seems like the software development process, generally speaking, is built on what is essentially a lack of trust in engineers - we can come in with over 10 years of verifiable experience, talk eloquently about that and our abilities, and still be met with these ridiculous and demeaning puzzles.<p>Why should we not be able to look at the code at a place we are thinking about working at? It's a CORE part of the job. To be blind to that doesn't feel right to me.<p>If/when I decide to look for a different position, I'm considering to only agree to a form of puzzle or test if and only if the prospective employer also permits me to examine the code on which I'll be working. I'll happily sign an NDA to do so.<p>I'm curious how this idea lands for people reading this post. I can envision a world where this is standard practice in hiring.<p>I'm curious to also hear reasons as to why this couldn't work in practice.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "palimpsests",
    "url": "https://news.ycombinator.com/user?id=palimpsests"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31706187",
  "sameAs": "https://news.ycombinator.com/item?id=31706187",
  "dateCreated": "2022-06-11T17:24:47.709Z",
  "datePublished": "2022-06-11T17:20:46.000Z",
  "dateModified": "2022-06-11T17:24:47.709Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 如何倡导未来的雇主向我们展示他们的代码库？\n",
  "headline_zh-Hant": "Ask HN: 如何倡導未來的僱主向我們展示他們的代碼庫？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "潜在的雇主通常会要求我们提供一些例子来证明我们的编码能力，无论是通过样本作业、在线编程测试、白板等。<p>有时，一份新的工作或合同会发现，要求我们工作的代码库并不是我们所期望的那样，说得轻巧。 <p>例如，<p>* 饱和的反模式，以至于对生产力产生了巨大的负面影响<p>* 由于缺乏维护和/或事情没有被很好地构建，编译/构建时间过长<p>* 严重过时的工具和版本<p>等等。 <p>虽然这有时是一种可行的情况，是一种以有意义的、积极的方式做出贡献的机会，但在其他情况下，这可能是一种乏味的折磨。<p>开发人员可以在面试过程中就这些事情提出问题，这有时可以说明这些问题。<p>如果一个组织的开发人员积极参与开源贡献，这可能是一个关于代码库质量的有用信号。<p>而且，我想到，在招聘方面存在一个很大的双重标准。一般来说，软件开发过程似乎是建立在对工程师缺乏信任的基础上的--我们可以带着超过10年的可证实的经验进来，滔滔不绝地谈论我们的能力，但仍然会遇到这些荒谬和贬低的难题。<p>为什么我们不能看我们正在考虑工作的地方的代码？这是工作的一个核心部分。<p>如果/当我决定寻找一个不同的职位时，我考虑只有在未来的雇主允许我检查我将要工作的代码时，才会同意某种形式的谜题或测试。我很乐意为此签署一份NDA。<p>我很好奇这个想法对于阅读这篇文章的人来说是如何实现的。我可以设想，在这个世界上，这将是招聘中的标准做法。<p>我也很想听听为什么这在实践中不可行的原因。\n",
  "description_zh-Hant": "潛在的僱主通常會要求我們提供一些例子來證明我們的編碼能力，無論是通過樣本作業、在線編程測試、白板等。<p>有時，一份新的工作或合同會發現，要求我們工作的代碼庫並不是我們所期望的那樣，說得輕巧。 <p>例如，<p>* 飽和的反模式，以至於對生產力產生了巨大的負面影響<p>* 由於缺乏維護和/或事情沒有被很好地構建，編譯/構建時間過長<p>* 嚴重過時的工具和版本<p>等等。 <p>雖然這有時是一種可行的情況，是一種以有意義的、積極的方式做出貢獻的機會，但在其他情況下，這可能是一種乏味的折磨。<p>開發人員可以在面試過程中就這些事情提出問題，這有時可以說明這些問題。<p>如果一個組織的開發人員積極參與開源貢獻，這可能是一個關於代碼庫質量的有用信號。<p>而且，我想到，在招聘方面存在一個很大的雙重標準。一般來說，軟件開發過程似乎是建立在對工程師缺乏信任的基礎上的--我們可以帶著超過10年的可證實的經驗進來，滔滔不絕地談論我們的能力，但仍然會遇到這些荒謬和貶低的難題。<p>為什麼我們不能看我們正在考慮工作的地方的代碼？這是工作的一個核心部分。<p>如果/當我決定尋找一個不同的職位時，我考慮只有在未來的僱主允許我檢查我將要工作的代碼時，才會同意某種形式的謎題或測試。我很樂意為此簽署一份NDA。<p>我很好奇這個想法對於閱讀這篇文章的人來說是如何實現的。我可以設想，在這個世界上，這將是招聘中的標準做法。<p>我也很想聽聽為什麼這在實踐中不可行的原因。\n"
}