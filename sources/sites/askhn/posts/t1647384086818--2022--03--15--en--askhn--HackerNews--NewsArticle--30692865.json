{
  "@type": "NewsArticle",
  "identifier": "2022--03--15--en--askhn--HackerNews--NewsArticle--30692865",
  "url": "https://news.ycombinator.com/item?id=30692865",
  "headline": "Ask HN: Is it better to start a front-end feature component first or API first?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "By API, I mean whatever calls that are managing your front-end data. For example, if I had many user inputs that managed closely related data, should I start from a user perspective and build out all the components with empty calls? Or should I define and build out all the calls themselves before even thinking about the components (assuming the spec isn't super strict)? Fwiw I'm assuming a reactive, data-driven front-end. Also assuming the priority is extensibility. Does any of that makes sense lol",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "abhpro",
    "url": "https://news.ycombinator.com/user?id=abhpro"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30692865",
  "sameAs": "https://news.ycombinator.com/item?id=30692865",
  "dateCreated": "2022-03-15T22:41:26.818Z",
  "datePublished": "2022-03-15T22:37:56.000Z",
  "dateModified": "2022-03-15T22:41:26.818Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 是先启动前端功能组件好还是先启动API好？",
  "headline_zh-Hant": "Ask HN: 是先啟動前端功能組件好還是先啟動API好？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我所说的API，是指管理你的前端数据的任何调用。例如，如果我有许多管理密切相关数据的用户输入，我应该从用户的角度出发，用空的调用建立所有的组件？或者我应该在考虑组件之前就定义并建立所有的调用（假设规范不是很严格）？顺便说一下，我假设是一个反应式的、数据驱动的前端。还假设优先考虑的是可扩展性。这有什么意义吗？",
  "description_zh-Hant": "我所說的API，是指管理你的前端數據的任何調用。例如，如果我有許多管理密切相關數據的用戶輸入，我應該從用戶的角度出發，用空的調用建立所有的組件？或者我應該在考慮組件之前就定義並建立所有的調用（假設規範不是很嚴格）？順便說一下，我假設是一個反應式的、數據驅動的前端。還假設優先考慮的是可擴展性。這有什麼意義嗎？"
}