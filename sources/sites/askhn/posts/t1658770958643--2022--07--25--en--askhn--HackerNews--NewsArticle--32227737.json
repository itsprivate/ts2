{
  "@type": "NewsArticle",
  "identifier": "2022--07--25--en--askhn--HackerNews--NewsArticle--32227737",
  "url": "https://news.ycombinator.com/item?id=32227737",
  "headline": "Ask HN: Why do you make class members private?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I know this is something that a lot of people do without thinking about it. So let's think about it.<p>I want to know the main reasons for making variables and functions in a class private. How is it better? What can happen if you don't do it?<p>Here are a few possible reasons that I can think of that someone could have:<p>* You have been taught to do it so you just do it without thinking.<p>* It reduces the number of files you have to search in if you want to find all uses of a member.<p>* The member is hard to understand so you want to discourage people from using it.<p>To clarify, I'm only talking about code in the same project that everyone has access to. I'm not talking about defining an API for other people to use that don't have access to the code, like when you make a library.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "robalni",
    "url": "https://news.ycombinator.com/user?id=robalni"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32227737",
  "sameAs": "https://news.ycombinator.com/item?id=32227737",
  "dateCreated": "2022-07-25T17:42:38.643Z",
  "datePublished": "2022-07-25T17:23:43.000Z",
  "dateModified": "2022-07-25T17:42:38.643Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 2
    }
  ],
  "headline_zh-Hans": "Ask HN: 为什么要把类成员变成私有？\n",
  "headline_zh-Hant": "Ask HN: 為什麼要把類成員變成私有？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我知道这是很多人不假思索就做的事情。所以让我们来思考一下。<p>我想知道在一个类中把变量和函数变成私有的主要原因。这样做有什么好处？如果你不这样做会发生什么？<p>以下是我能想到的一些可能的理由：<p>* 你被教导要这样做，所以你不假思索地就这样做了。<p>* 如果你想找到一个成员的所有用途，它可以减少你要搜索的文件数量。<p>* 这个成员很难理解，所以你想阻止人们使用它。<p>澄清一下，我只是在谈论同一个项目中的代码，所有人都可以访问。我说的不是定义一个API供其他不能访问代码的人使用，比如你做一个库。\n",
  "description_zh-Hant": "我知道這是很多人不假思索就做的事情。所以讓我們來思考一下。<p>我想知道在一個類中把變量和函數變成私有的主要原因。這樣做有什麼好處？如果你不這樣做會發生什麼？<p>以下是我能想到的一些可能的理由：<p>* 你被教導要這樣做，所以你不假思索地就這樣做了。<p>* 如果你想找到一個成員的所有用途，它可以減少你要搜索的文件數量。<p>* 這個成員很難理解，所以你想阻止人們使用它。<p>澄清一下，我只是在談論同一個項目中的代碼，所有人都可以訪問。我說的不是定義一個API供其他不能訪問代碼的人使用，比如你做一個庫。\n"
}