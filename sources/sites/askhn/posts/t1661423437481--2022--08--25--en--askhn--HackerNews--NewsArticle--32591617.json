{
  "@type": "NewsArticle",
  "identifier": "2022--08--25--en--askhn--HackerNews--NewsArticle--32591617",
  "url": "https://news.ycombinator.com/item?id=32591617",
  "headline": "Ask HN: Is it better to be quick generalist or a slow specialist?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "In development world, we often espouse idealistic ways of writing and managing code: readability, maintainability etc...it's a very deep subject.<p>Compare this to the reality of many jobs, where some manager needs stuff delivered NOW.<p>It would seem a &quot;hacker&quot;, someone that can bodge things together and make them &quot;work&quot; is more valuable often than someone who does everything following best practices....which would be seen as more naive perhaps.<p>Put another way, is it better to be a ultra pragmatic could-care-less hacker or an opinionated craftsman.<p>I know people complain, that you leave a mess for others to deal with. But really why would you care? It's not your problem anymore.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "mouzogu",
    "url": "https://news.ycombinator.com/user?id=mouzogu"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32591617",
  "sameAs": "https://news.ycombinator.com/item?id=32591617",
  "dateCreated": "2022-08-25T10:30:37.481Z",
  "datePublished": "2022-08-25T09:56:18.000Z",
  "dateModified": "2022-08-25T10:30:37.481Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 是做快速的通才好还是做缓慢的专家好？\n",
  "headline_zh-Hant": "Ask HN: 是做快速的通才好還是做緩慢的專家好？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "在开发领域，我们经常推崇理想化的代码编写和管理方式：可读性、可维护性等......这是一个非常深刻的主题。<p>将其与许多工作的现实相比较，一些经理需要立即交付东西。 <p>似乎一个 \"黑客\"，一个能把东西拼凑在一起并使其 \"工作 \"的人，往往比一个一切都遵循最佳实践的人更有价值....，后者可能会被视为更天真。<p>换个角度看，是做一个极端务实的可以不在乎的黑客好，还是做一个有主见的工匠好。<p>我知道人们抱怨，说你给别人留下一个麻烦。但实际上，你为什么要在乎呢？这已经不是你的问题了。\n",
  "description_zh-Hant": "在開發領域，我們經常推崇理想化的代碼編寫和管理方式：可讀性、可維護性等......這是一個非常深刻的主題。<p>將其與許多工作的現實相比較，一些經理需要立即交付東西。 <p>似乎一個 \"黑客\"，一個能把東西拼湊在一起並使其 \"工作 \"的人，往往比一個一切都遵循最佳實踐的人更有價值....，後者可能會被視為更天真。<p>換個角度看，是做一個極端務實的可以不在乎的黑客好，還是做一個有主見的工匠好。<p>我知道人們抱怨，說你給別人留下一個麻煩。但實際上，你為什麼要在乎呢？這已經不是你的問題了。\n"
}