{
  "@type": "NewsArticle",
  "identifier": "2022--08--06--en--askhn--HackerNews--NewsArticle--32372351",
  "url": "https://news.ycombinator.com/item?id=32372351",
  "headline": "Ask HN: More “experimental“ UIs for editing/writing code?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "There is a bunch of editors with the traditional model of inserting text with the keyboard, arrows move the cursor around, you click around in menus/using hotkeys to perform actions (Visual Studio Code, Atom, Eclipse). Then there is the &quot;modal&quot; editors that have different modes where you can switch between for example &quot;editing&quot; or &quot;movement&quot; modes, and what your keyboard controls depends on the mode you're in (editors like Vim). Otherwise there is also very interactive and extensible editors, where eval basically lives within/together with the editor (Emacs, LightTable)<p>Otherwise, most editors fit in somewhere along those lines.<p>But what other editors is there out there that have something really different for editing/writing code? Things that come to mind is &quot;editors&quot; like Scratch where you aren't really &quot;editing&quot; code with your keyboard, but moving things around instead. Or, if I imagine I'd create a editor for programming controlled by a joystick, what kind of UI and UX would that editor have?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "capableweb",
    "url": "https://news.ycombinator.com/user?id=capableweb"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32372351",
  "sameAs": "https://news.ycombinator.com/item?id=32372351",
  "dateCreated": "2022-08-06T23:26:33.520Z",
  "datePublished": "2022-08-06T22:59:03.000Z",
  "dateModified": "2022-08-06T23:26:33.520Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 更多用于编辑/编写代码的 \"实验性 \"用户界面？\n",
  "headline_zh-Hant": "Ask HN: 更多用於編輯/編寫代碼的 \"實驗性 \"用戶界面？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "有一堆编辑器采用传统的模式，用键盘插入文本，箭头移动光标，你在菜单中点击/使用热键来执行操作（Visual Studio Code, Atom, Eclipse）。然后是有不同模式的&quot;modal&quot;编辑器，你可以在&quot;编辑&quot;或&quot;移动&quot;模式之间切换，你的键盘控制取决于你所处的模式（如Vim等编辑器）。除此之外，还有一些非常具有交互性和可扩展性的编辑器，其中的评估基本上是与编辑器一起存在的（Emacs、LightTable）<p>除此之外，大多数的编辑器都是沿着这些路线的。<p>但是还有哪些编辑器在编辑/编写代码时有一些真正不同的东西？我想到的是像Scratch这样的 \"编辑器\"，在那里你并不是真的用键盘来编辑代码，而是在周围移动东西。或者，如果我想象我将创建一个由操纵杆控制的编程编辑器，这个编辑器会有什么样的用户界面和用户体验？\n",
  "description_zh-Hant": "有一堆編輯器採用傳統的模式，用鍵盤插入文本，箭頭移動光標，你在菜單中點擊/使用熱鍵來執行操作（Visual Studio Code, Atom, Eclipse）。然後是有不同模式的&quot;modal&quot;編輯器，你可以在&quot;編輯&quot;或&quot;移動&quot;模式之間切換，你的鍵盤控制取決於你所處的模式（如Vim等編輯器）。除此之外，還有一些非常具有交互性和可擴展性的編輯器，其中的評估基本上是與編輯器一起存在的（Emacs、LightTable）<p>除此之外，大多數的編輯器都是沿著這些路線的。<p>但是還有哪些編輯器在編輯/編寫代碼時有一些真正不同的東西？我想到的是像Scratch這樣的 \"編輯器\"，在那裡你並不是真的用鍵盤來編輯代碼，而是在周圍移動東西。或者，如果我想象我將創建一個由操縱桿控制的編程編輯器，這個編輯器會有什麼樣的用戶界面和用戶體驗？\n"
}