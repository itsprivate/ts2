{
  "@type": "NewsArticle",
  "identifier": "2022--06--03--en--askhn--HackerNews--NewsArticle--31609471",
  "url": "https://news.ycombinator.com/item?id=31609471",
  "headline": "Ask HN: Scaling and Measuring Engineering Productivity",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hey!\nI’m interested in finding resources, postmortems, case studies, as well as personal success/failure stories of measuring development teams while scaling them - when it gets harder to do that directly, as you would in a small team.<p>Now, don’t get me wrong, I’m not advocating for metrics like tasks delivered, commits done, lines of code changed (hard to even write the latter ones down without cringing). This kind of “productivity output measuring” sounds easily-gamed, very stressful, and ultimately fairly useless.<p>This can be a totally different approach - streamlining the identification of blockers, exploring what time sinks developers are being hindered by. I think this handbook by okay.com is a very good example of a great resource looking at the problem from that side: https://www.okayhq.com/handbook/getting-started/what-is\nMeasuring the time CI/CD pipelines take, PR’s take to be reviewed, etc. looks like a very sensible approach.<p>What are your experiences? What worked for you? What did you hate?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "cube2222",
    "url": "https://news.ycombinator.com/user?id=cube2222"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31609471",
  "sameAs": "https://news.ycombinator.com/item?id=31609471",
  "dateCreated": "2022-06-03T15:27:19.368Z",
  "datePublished": "2022-06-03T15:18:02.000Z",
  "dateModified": "2022-06-03T15:27:19.368Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 缩放和测量工程生产力\n",
  "headline_zh-Hant": "Ask HN: 縮放和測量工程生產力\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嘿!\n我对寻找资源、事后总结、案例研究以及个人在扩展开发团队时的成功/失败故事很感兴趣--当你越来越难直接做到这一点时，就像在一个小团队中一样。<p>现在，不要误会我的意思，我并不主张采用任务交付、完成提交、改变代码行等指标（甚至很难在不畏惧的情况下写下后面的指标）。这种 \"生产力产出测量 \"听起来很容易上当受骗，压力很大，而且最终相当无用。<p>这可能是一种完全不同的方法--简化识别障碍物的过程，探索开发人员被哪些时间沉淀所阻碍。我认为okay.com的这本手册是一个非常好的例子，从这个方面看问题的资源非常好：https://www.okayhq.com/handbook/getting-started/what-is\n测量CI/CD管道所需的时间、PR的审核时间等看起来是一个非常合理的方法。<p>你有什么经验？什么对你有用？你讨厌什么？\n",
  "description_zh-Hant": "嘿!\n我對尋找資源、事後總結、案例研究以及個人在擴展開發團隊時的成功/失敗故事很感興趣--當你越來越難直接做到這一點時，就像在一個小團隊中一樣。<p>現在，不要誤會我的意思，我並不主張採用任務交付、完成提交、改變代碼行等指標（甚至很難在不畏懼的情況下寫下後面的指標）。這種 \"生產力產出測量 \"聽起來很容易上當受騙，壓力很大，而且最終相當無用。<p>這可能是一種完全不同的方法--簡化識別障礙物的過程，探索開發人員被哪些時間沉澱所阻礙。我認為okay.com的這本手冊是一個非常好的例子，從這個方面看問題的資源非常好：https://www.okayhq.com/handbook/getting-started/what-is\n測量CI/CD管道所需的時間、PR的審核時間等看起來是一個非常合理的方法。<p>你有什麼經驗？什麼對你有用？你討厭什麼？\n"
}