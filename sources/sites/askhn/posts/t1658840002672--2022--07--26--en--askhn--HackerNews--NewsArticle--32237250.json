{
  "@type": "NewsArticle",
  "identifier": "2022--07--26--en--askhn--HackerNews--NewsArticle--32237250",
  "url": "https://news.ycombinator.com/item?id=32237250",
  "headline": "Ask HN: How do experienced programmers learn new languages and judge them?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Programmers (academic and/or industrial) who have programmed in quite a few languages and paradigms, how do you learn or pickup a new programming languages (maybe against your choice but the domain you are working in requires that language)?<p>How much time does it take?<p>How do you judge the merits and demerits of the language?<p>Do people who know some PL theory judge it in a different way than those who don't? Like do they have a mathematical framework in mind and map the language docs to that framework to see what is bad or what is good?<p>For example:<p>Suppose I am to learn Python. I go to the official website and go to the docs page: https://docs.python.org/3/. I see a Tutorial section and a Language Reference section. I go through the tutorial. It is just a sneak peak. Then the Language reference?<p>Or do I read the Python source code?<p>P.S: For PL theory people what book/course do you recommend for that mental framework?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "debanjan16",
    "url": "https://news.ycombinator.com/user?id=debanjan16"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32237250",
  "sameAs": "https://news.ycombinator.com/item?id=32237250",
  "dateCreated": "2022-07-26T12:53:22.672Z",
  "datePublished": "2022-07-26T12:16:30.000Z",
  "dateModified": "2022-07-26T12:53:22.672Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 有经验的程序员如何学习新语言并对其进行判断？\n",
  "headline_zh-Hant": "Ask HN: 有經驗的程序員如何學習新語言並對其進行判斷？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "已经用相当多的语言和范式编程的程序员（学术界和/或工业界），你是如何学习或挑选一种新的编程语言的（也许与你的选择相反，但你工作的领域需要这种语言）？<p>这需要多少时间？<p>你如何判断这种语言的优点和缺点？<p>知道一些PL理论的人与不知道的人判断的方式不同吗？比如他们心中是否有一个数学框架，并将语言文档映射到该框架上，以看到什么是坏的，什么是好的？<p>例如：<p>假设我要学习 Python。我进入官方网站并进入文档页面：https://docs.python.org/3/。我看到一个教程部分和一个语言参考部分。我浏览了一下教程。这只是一个初步的了解。然后是语言参考？<p>还是我读Python源代码？<p>P.S：对于PL理论的人，你推荐什么书/课程来学习这个心理框架？\n",
  "description_zh-Hant": "已經用相當多的語言和範式編程的程序員（學術界和/或工業界），你是如何學習或挑選一種新的編程語言的（也許與你的選擇相反，但你工作的領域需要這種語言）？<p>這需要多少時間？<p>你如何判斷這種語言的優點和缺點？<p>知道一些PL理論的人與不知道的人判斷的方式不同嗎？比如他們心中是否有一個數學框架，並將語言文檔映射到該框架上，以看到什麼是壞的，什麼是好的？<p>例如：<p>假設我要學習 Python。我進入官方網站並進入文檔頁面：https://docs.python.org/3/。我看到一個教程部分和一個語言參考部分。我瀏覽了一下教程。這只是一個初步的瞭解。然後是語言參考？<p>還是我讀Python源代碼？<p>P.S：對於PL理論的人，你推薦什麼書/課程來學習這個心理框架？\n"
}