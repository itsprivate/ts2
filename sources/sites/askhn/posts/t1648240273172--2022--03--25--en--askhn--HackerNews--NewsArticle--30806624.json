{
  "@type": "NewsArticle",
  "identifier": "2022--03--25--en--askhn--HackerNews--NewsArticle--30806624",
  "url": "https://news.ycombinator.com/item?id=30806624",
  "headline": "Ask HN: Why are there no easy-to-use highly-available open source databases?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I'm a single engineer who wants to run a database by myself, no cloud vendors involved. I don't really care about scalability to a point, I don't really care about the API to interact with the database. I just want something that I can set up on multiple machines with minimal effort and have the loss of one of those nodes not cause catastrophic failures. I want the experience of something like etcd without being limited to a few gigabytes of data in the cluster (a Terabyte or maybe a couple hundred Gigabytes as a limit would probably be fine). I've spent a lot of time looking through the various options and wrote up my thoughts on why each of them wasn't a good fit.<p>Postgres: A great database but HA options either have far too many moving parts, require manual intervention, are proprietary, or are Fake Open Source. Seems like there's lack of interest in addressing this because companies that sponsor development generate a lot of value off complex operations<p>MySQL: This database has some odd behavior but that would be fine if it weren't Fake Open Source<p>MariaDB: HA Options are poor or abandoned<p>SQL Server: Proprietary<p>Oracle: haha<p>CockroachDB: Fake Open Source<p>YugabyteDB: Fake Open Source. Special shout out here for not even linking to instructions for how to build the database in the readme.<p>MongoDB: Proprietary, and even before the license change it was Fake Open Source<p>Cassandra: Not fun to run, and even though I said I didn't care about API I don't necessarily love how it works. But it comes probably the closest?<p>ScyllaDB: Fake Open Source<p>TiDB: Fake Open Source<p>Singlestore: Fake Open Source<p>FoundationDB: This one comes close but its beginning as a proprietary database really hurt its community, which is way smaller now than it should be. Could grow into something great if more folks got behind it.<p>etcd: not suitable for use above a couple GB of data<p>What do I mean by Fake Open Source? A project that has a large percentage of its contributors beholden to a single organization/entity to me is not really open source in spirit. I'm looking for a project where I can feel confident my contributions won't effectively end up behind some proprietary license down the line if/when the VC backed organization that primarily sponsors development decides it needs to protect itself from AWS. If there's an &quot;Enterprise&quot; product and the organization calls the source code for the main project the &quot;Community Edition&quot; or something like it, it's not Real Open Source. If a single organization shuts down and contributions fall off a cliff (https://github.com/rethinkdb/rethinkdb/graphs/contributors) it's not Real Open Source. There are lots of Real Open Source projects with great communities of users/contributors, but many of the newer databases don't have legitimate open source development communities behind them, in my opinion.<p>I've probably missed some examples. Mostly, I wonder why there hasn't been a general purpose open source database that does the operations stuff as well as the proprietary databases do. Am I missing something?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "database_guy",
    "url": "https://news.ycombinator.com/user?id=database_guy"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30806624",
  "sameAs": "https://news.ycombinator.com/item?id=30806624",
  "dateCreated": "2022-03-25T20:31:13.172Z",
  "datePublished": "2022-03-25T20:16:49.000Z",
  "dateModified": "2022-03-25T20:31:13.172Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 2
    }
  ],
  "headline_zh-Hans": "Ask HN: 为什么没有易于使用的高可用开源数据库？",
  "headline_zh-Hant": "Ask HN: 為什麼沒有易於使用的高可用開源數據庫？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我是一个想自己运行数据库的单身工程师，不涉及云供应商。我并不关心可扩展性的问题，也不关心与数据库交互的API。我只是想要一些我可以用最小的努力在多台机器上设置的东西，并且其中一个节点的损失不会导致灾难性的失败。我想获得像etcd那样的经验，但又不被限制在集群中的几千兆字节的数据（一兆字节或几百兆字节的限制可能会很好）。我花了很多时间来研究各种选项，并写下了我的想法，为什么每一个选项都不适合。一个伟大的数据库，但HA选项要么有太多的移动部件，需要人工干预，要么是专有的，要么是假的开源。似乎对解决这个问题缺乏兴趣，因为赞助开发的公司从复杂的操作中产生大量的价值<p>MySQL。这个数据库有一些奇怪的行为，但如果它不是假的开源，那就很好<p>MariaDB：HA选项很差或被放弃<p>SQL服务器。专利的<p>Oracle：哈哈<p>CockroachDB：假的开源<p>YugabyteDB：假的开源。<p>MongoDB：专有的，甚至在许可证变更之前也是假的开源<p>Cassandra：运行起来并不有趣，尽管我说我不关心API，但我不一定喜欢它的工作方式。但它可能是最接近的。<p>ScyllaDB：假的开源<p>TiDB：假的开源<p>Singlestore。假的开源<p>FoundationDB：这个数据库很接近，但是它作为一个专有数据库的开始确实伤害了它的社区，现在的社区比它应该的要小。如果有更多的人支持它，它可以成长为一个伟大的东西。<p>etcd：不适合使用超过几GB的数据<p>我说的假开源是什么意思？在我看来，一个项目如果有很大比例的贡献者受制于一个组织/实体，那就不是真正意义上的开源。我正在寻找一个项目，在这个项目中，我可以确信我的贡献不会有效地在某些专有许可证后面结束，如果/当主要赞助开发的VC支持的组织决定它需要保护自己不受AWS影响。如果有一个&quot;企业&quot;产品，而该组织将主要项目的源代码称为&quot;社区版&quot;或类似的东西，这就不是真正的开源。如果一个组织关闭了，贡献从悬崖上掉下来（https://github.com/rethinkdb/rethinkdb/graphs/contributors），那就不是真正的开放源码。有很多真正的开源项目拥有伟大的用户/贡献者社区，但在我看来，许多较新的数据库背后没有合法的开源开发社区。<p>我可能错过了一些例子。最主要的是，我想知道为什么还没有一个通用的开源数据库能够像专有数据库那样做操作的事情。我是不是错过了什么？",
  "description_zh-Hant": "我是一個想自己運行數據庫的單身工程師，不涉及雲供應商。我並不關心可擴展性的問題，也不關心與數據庫交互的API。我只是想要一些我可以用最小的努力在多臺機器上設置的東西，並且其中一個節點的損失不會導致災難性的失敗。我想獲得像etcd那樣的經驗，但又不被限制在集群中的幾千兆字節的數據（一兆字節或幾百兆字節的限制可能會很好）。我花了很多時間來研究各種選項，並寫下了我的想法，為什麼每一個選項都不適合。一個偉大的數據庫，但HA選項要麼有太多的移動部件，需要人工干預，要麼是專有的，要麼是假的開源。似乎對解決這個問題缺乏興趣，因為贊助開發的公司從複雜的操作中產生大量的價值<p>MySQL。這個數據庫有一些奇怪的行為，但如果它不是假的開源，那就很好<p>MariaDB：HA選項很差或被放棄<p>SQL服務器。專利的<p>Oracle：哈哈<p>CockroachDB：假的開源<p>YugabyteDB：假的開源。<p>MongoDB：專有的，甚至在許可證變更之前也是假的開源<p>Cassandra：運行起來並不有趣，儘管我說我不關心API，但我不一定喜歡它的工作方式。但它可能是最接近的。<p>ScyllaDB：假的開源<p>TiDB：假的開源<p>Singlestore。假的開源<p>FoundationDB：這個數據庫很接近，但是它作為一個專有數據庫的開始確實傷害了它的社區，現在的社區比它應該的要小。如果有更多的人支持它，它可以成長為一個偉大的東西。<p>etcd：不適合使用超過幾GB的數據<p>我說的假開源是什麼意思？在我看來，一個項目如果有很大比例的貢獻者受制於一個組織/實體，那就不是真正意義上的開源。我正在尋找一個項目，在這個項目中，我可以確信我的貢獻不會有效地在某些專有許可證後面結束，如果/當主要贊助開發的VC支持的組織決定它需要保護自己不受AWS影響。如果有一個&quot;企業&quot;產品，而該組織將主要項目的源代碼稱為&quot;社區版&quot;或類似的東西，這就不是真正的開源。如果一個組織關閉了，貢獻從懸崖上掉下來（https://github.com/rethinkdb/rethinkdb/graphs/contributors），那就不是真正的開放源碼。有很多真正的開源項目擁有偉大的用戶/貢獻者社區，但在我看來，許多較新的數據庫背後沒有合法的開源開發社區。<p>我可能錯過了一些例子。最主要的是，我想知道為什麼還沒有一個通用的開源數據庫能夠像專有數據庫那樣做操作的事情。我是不是錯過了什麼？"
}