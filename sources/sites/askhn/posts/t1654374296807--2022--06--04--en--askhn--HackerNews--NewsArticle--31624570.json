{
  "@type": "NewsArticle",
  "identifier": "2022--06--04--en--askhn--HackerNews--NewsArticle--31624570",
  "url": "https://news.ycombinator.com/item?id=31624570",
  "headline": "Ask HN: Optimizing established functions/code, like QS. There's still a point?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Greetings. Apologies for the title, but it's length is rather limited.<p>I'm asking, because I've seen the article about google's simd based quicksort, and because I've actually thought about this recently.<p>I've neglected to pursue this problem, because I was thinking that there's no point to it anymore. I was thinking that everything solved to best efficiency already anyway, so why bother?<p>Am I wrong? Is there still room for improving efficiency/performance of at least some functions/algorithms out there?<p>If so ... what should I tackle? To make this easier, just assume I can improve <i>literally anything, as long as there's still room for it,</i> and throw the challenges/problems at me! :D<p>Thank you!",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "MrYellowP",
    "url": "https://news.ycombinator.com/user?id=MrYellowP"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31624570",
  "sameAs": "https://news.ycombinator.com/item?id=31624570",
  "dateCreated": "2022-06-04T20:24:56.807Z",
  "datePublished": "2022-06-04T20:11:46.000Z",
  "dateModified": "2022-06-04T20:24:56.807Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 优化既定的功能/代码，如QS。还有意义吗？\n",
  "headline_zh-Hant": "Ask HN: 優化既定的功能/代碼，如QS。還有意義嗎？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Greetings. Apologies for the title, but it's length is rather limited.<p>I'm asking, because I've seen the article about google's simd based quicksort, and because I've actually thought about this recently.<p>I've neglected to pursue this problem, because I was thinking that there's no point to it anymore. I was thinking that everything solved to best efficiency already anyway, so why bother?<p>Am I wrong? Is there still room for improving efficiency/performance of at least some functions/algorithms out there?<p>If so ... what should I tackle? To make this easier, just assume I can improve <i>literally anything, as long as there's still room for it,</i> and throw the challenges/problems at me! :D<p>Thank you!\n",
  "description_zh-Hant": "Greetings. Apologies for the title, but it's length is rather limited.<p>I'm asking, because I've seen the article about google's simd based quicksort, and because I've actually thought about this recently.<p>I've neglected to pursue this problem, because I was thinking that there's no point to it anymore. I was thinking that everything solved to best efficiency already anyway, so why bother?<p>Am I wrong? Is there still room for improving efficiency/performance of at least some functions/algorithms out there?<p>If so ... what should I tackle? To make this easier, just assume I can improve <i>literally anything, as long as there's still room for it,</i> and throw the challenges/problems at me! :D<p>Thank you!\n"
}