{
  "@type": "NewsArticle",
  "identifier": "2022--07--04--en--askhn--HackerNews--NewsArticle--31982584",
  "url": "https://news.ycombinator.com/item?id=31982584",
  "headline": "Ask HN: What do you look for when reviewing 3rd party dependencies?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "As downloading and using 3rd party dependencies is as normal as writing code nowadays, it feels like the process of reviewing said dependencies has fallen out of fashion.<p>Normally (or &quot;back in the day&quot; rather) you'd read through the code, see if it's of &quot;maintainable&quot; quality in case you're gonna have to fork it, see if the code quality is at least average, the author being consistent, having good tests and so on.<p>But today I see people just pulling down fresh 3rd party dependencies just because their peers are using the same ones, or going by number of GitHub stars to see if it's OK to use.<p>If you're reviewing dependencies before using them, what kind of things are you looking for? Is there something obvious that would immediately make you reject the dependency outright?<p>If you're not, do you go by some other metrics or even feelings to understand if it's OK to depend on this dependency or not?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "diggan",
    "url": "https://news.ycombinator.com/user?id=diggan"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31982584",
  "sameAs": "https://news.ycombinator.com/item?id=31982584",
  "dateCreated": "2022-07-04T23:25:33.109Z",
  "datePublished": "2022-07-04T23:00:34.000Z",
  "dateModified": "2022-07-04T23:25:33.109Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 在审查第三方依赖关系时，你要注意什么？\n",
  "headline_zh-Hant": "Ask HN: 在審查第三方依賴關係時，你要注意什麼？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "<p>通常情况下（或者说 \"在过去\"），你会通读代码，看看它是否具有可维护性，以防你不得不分叉它，看看代码质量是否至少是平均水平，作者是否一致，是否有良好的测试，等等。 <p>但是今天我看到人们只是因为他们的同行在使用相同的依赖关系而拉下新的第三方依赖关系，或者根据GitHub的星级数量来判断是否可以使用。<p>如果你在使用依赖关系之前审查它们，你在寻找什么样的东西？是否有一些明显的东西会让你立即直接拒绝这个依赖？<p>如果不是，你是否会通过一些其他的指标，甚至是感觉来了解是否可以依赖这个依赖？\n",
  "description_zh-Hant": "<p>通常情況下（或者說 \"在過去\"），你會通讀代碼，看看它是否具有可維護性，以防你不得不分叉它，看看代碼質量是否至少是平均水平，作者是否一致，是否有良好的測試，等等。 <p>但是今天我看到人們只是因為他們的同行在使用相同的依賴關係而拉下新的第三方依賴關係，或者根據GitHub的星級數量來判斷是否可以使用。<p>如果你在使用依賴關係之前審查它們，你在尋找什麼樣的東西？是否有一些明顯的東西會讓你立即直接拒絕這個依賴？<p>如果不是，你是否會通過一些其他的指標，甚至是感覺來了解是否可以依賴這個依賴？\n"
}