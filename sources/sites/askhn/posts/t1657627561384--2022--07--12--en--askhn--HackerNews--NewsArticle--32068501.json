{
  "@type": "NewsArticle",
  "identifier": "2022--07--12--en--askhn--HackerNews--NewsArticle--32068501",
  "url": "https://news.ycombinator.com/item?id=32068501",
  "headline": "Ask HN: How do I start learning about lower level compiled languages?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN<p>I work quite a lot with Python and JS, and some other higher level languages, but have recently wanted to get involved in lower level languages, particularly NIM. I have already started coding with it, but it comes with a whole range of new topics that are semi-unknown to me, heaps, stacks, memory management, pointers, compilers, debugging compiled applications, garbage collection, etc. Does anyone know of any material that can help demystify those topics and any other that come up.<p>I know the common answer will be to start coding and learn it as you go along. But I was curious to understand if there was any supplementary material that can support my introduction to this new works of coding?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "budafish",
    "url": "https://news.ycombinator.com/user?id=budafish"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32068501",
  "sameAs": "https://news.ycombinator.com/item?id=32068501",
  "dateCreated": "2022-07-12T12:06:01.384Z",
  "datePublished": "2022-07-12T11:50:16.000Z",
  "dateModified": "2022-07-12T12:06:01.384Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 我如何开始学习低级别的编译语言？\n",
  "headline_zh-Hant": "Ask HN: 我如何開始學習低級別的編譯語言？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嗨，HN<p>我经常使用Python和JS，以及其他一些高级语言，但最近想接触一下低级语言，特别是NIM。我已经开始用它编码了，但它带来了一系列新的话题，对我来说都是未知的，堆、栈、内存管理、指针、编译器、调试编译的应用程序、垃圾回收等等。有谁知道有什么材料可以帮助解开这些话题以及其他任何出现的话题。<p>我知道常见的答案是开始编码，并在你前进的过程中学习它。但我很想知道，是否有任何补充材料可以支持我对这个新的编码工作的介绍？\n",
  "description_zh-Hant": "嗨，HN<p>我經常使用Python和JS，以及其他一些高級語言，但最近想接觸一下低級語言，特別是NIM。我已經開始用它編碼了，但它帶來了一系列新的話題，對我來說都是未知的，堆、棧、內存管理、指針、編譯器、調試編譯的應用程序、垃圾回收等等。有誰知道有什麼材料可以幫助解開這些話題以及其他任何出現的話題。<p>我知道常見的答案是開始編碼，並在你前進的過程中學習它。但我很想知道，是否有任何補充材料可以支持我對這個新的編碼工作的介紹？\n"
}