{
  "@type": "NewsArticle",
  "identifier": "2022--03--28--en--askhn--HackerNews--NewsArticle--30835780",
  "url": "https://news.ycombinator.com/item?id=30835780",
  "headline": "Ask HN: How to break down a bonded NIC pair in Linux?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hackernews turned me onto a new bare metal hosting provider. (Thanks - great tip.) The default box comes with four Ethernet devices (2 Mellanox and 2 Intel cards). Two of them are bonded. \nMy goal:<p>* How can I reconfigure these four cards so that I still have a public IP, and a local (internal) IP but such that I can free up both of the mellanox cards or both of the Intel devices so I can use them for DPDK development?<p>I have no need for any high speed public connections. ssh is fine. It has a IPV6 local address; I don't about that either. All IPV4 is fine.<p>I've figured this out in Amazon EC2, however, the default NIC situation comes to me simpler than this. I'm just don't have any serious know-how in this particular kind of Linux-admin. And I've never bonded or unbounded a pair of NICs.<p>Details follow.<p>TIA<p>===================================<p>user@defaulthost:~# ifconfig -a<p>bond0: flags=5187&lt;UP,BROADCAST,RUNNING,MASTER,MULTICAST&gt;  mtu 1500<p><pre><code>        inet &lt;public-IP-address&gt; netmask 255.255.255.254  broadcast 255.255.255.255\n\n        inet6 xxxx:xxxx:xxxx:xxx::1  prefixlen 127  scopeid 0x0&lt;global&gt;\n\n        inet6 xxxx::xxxx:xxxx:xxxx:xxxx  prefixlen 64  scopeid 0x20&lt;link&gt;\n\n        ether xx:xx:xx:xx:xx:xx  txqueuelen 1000  (Ethernet)\n</code></pre>\nbond0:0: flags=5187&lt;UP,BROADCAST,RUNNING,MASTER,MULTICAST&gt;  mtu 1500<p><pre><code>        inet &lt;local-IP-address&gt;  netmask 255.255.255.254  broadcast 255.255.255.255\n\n        ether xx:xx:xx:xx:xx:xx  txqueuelen 1000  (Ethernet)\n</code></pre>\neno1: flags=4098&lt;BROADCAST,MULTICAST&gt;  mtu 1500\n        ether xx:xx:xx:xx:xx:xx  txqueuelen 1000  (Ethernet)<p>eno2: flags=4098&lt;BROADCAST,MULTICAST&gt;  mtu 1500\n        ether xx:xx:xx:xx:xx:xx  txqueuelen 1000  (Ethernet)<p>enp2s0f0: flags=6211&lt;UP,BROADCAST,RUNNING,SLAVE,MULTICAST&gt;  mtu 1500<p><pre><code>        ether xx:xx:xx:xx:xx:xx  txqueuelen 1000  (Ethernet)\n</code></pre>\nenp2s0f1: flags=6211&lt;UP,BROADCAST,RUNNING,SLAVE,MULTICAST&gt;  mtu 1500<p><pre><code>        ether xx:xx:xx:xx:xx:xx  txqueuelen 1000  (Ethernet)\n</code></pre>\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;<p>=================<p>user@defaulthost:~# dmesg | grep enp2\n[    6.331694] mlx5_core 0000:02:00.0 enp2s0f0np0: renamed from eth0<p>[    6.372339] mlx5_core 0000:02:00.1 enp2s0f1np1: renamed from eth1<p>[    9.429331] mlx5_core 0000:02:00.0 enp2s0f0: renamed from enp2s0f0np0<p>[    9.484863] mlx5_core 0000:02:00.1 enp2s0f1: renamed from enp2s0f1np1<p>[   11.548785] mlx5_core 0000:02:00.0 enp2s0f0: Link up<p>[   11.553936] bond0: (slave enp2s0f0): Enslaving as a backup interface with an up link<p>[   11.609695] bond0: (slave enp2s0f0): link status definitely up, 10000 Mbps full duplex<p>[   15.421901] mlx5_core 0000:02:00.1 enp2s0f1: Link up<p>[   15.429399] bond0: (slave enp2s0f1): Enslaving as a backup interface with an up link<p>[   15.678759] bond0: (slave enp2s0f1): link status definitely up, 10000 Mbps full duplex\nuser@defaulthost:~# dmesg | grep eno<p>[    2.036278] ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)<p>[    5.178678] igb 0000:04:00.0 eno1: renamed from eth0<p>[    5.285816] igb 0000:05:00.0 eno2: renamed from eth1<p>==================<p>user@defaulthost:~# lspci | grep Eth<p>02:00.0 Ethernet controller: Mellanox Technologies MT27710 Family [ConnectX-4 Lx]<p>02:00.1 Ethernet controller: Mellanox Technologies MT27710 Family [ConnectX-4 Lx]<p>04:00.0 Ethernet controller: Intel Corporation I210 Gigabit Network Connection (rev 03)<p>05:00.0 Ethernet controller: Intel Corporation I210 Gigabit Network Connection (rev 03)",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "scrubs",
    "url": "https://news.ycombinator.com/user?id=scrubs"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30835780",
  "sameAs": "https://news.ycombinator.com/item?id=30835780",
  "dateCreated": "2022-03-28T21:29:06.597Z",
  "datePublished": "2022-03-28T21:23:45.000Z",
  "dateModified": "2022-03-28T21:29:06.597Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 如何在Linux中分解一个绑定的网卡对？",
  "headline_zh-Hant": "Ask HN: 如何在Linux中分解一個綁定的網卡對？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hackernews让我认识了一个新的裸机托管供应商。(谢谢--很好的提示。）默认的盒子里有四个以太网设备（2个Mellanox和2个Intel卡）。其中两个是绑定的。\n我的目标是：<p>* 我怎样才能重新配置这四张卡，使我仍然有一个公共IP和一个本地（内部）IP，但我可以腾出两个Mellanox卡或两个Intel设备，以便我可以用它们来开发DPDK？它有一个IPV6的本地地址；我也不关心这个。<p>我已经在Amazon EC2中弄清楚了这个问题，但是，默认的网卡情况对我来说比这更简单。我只是在这种特殊的Linux管理方面没有任何严肃的知识。And I've never bonded or unbounded a pair of NICs.<p>Details follow. <p>TIA<p>===================================<p>user@defaulthost:~# ifconfig -a<p>bond0: flags=5187&lt;UP,BROADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500<p><pre><code> inet &lt;public-IP-address&gt; netmask 255.255.255.254 broadcast 255.255.255.255\n\n        inet6 xxxx:xxxx:xxxx:xxx::1 prefixlen 127 scopeid 0x0&lt;global&gt;\n\n        inet6 xxxx::xxxx:xxxx:xxxx:xxxx prefixlen 64 scopeid 0x20&lt;link&gt;\n\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\nbond0:0: flags=5187&lt;UP,BROADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500<p></p><code> inet &lt;local-IP-address&gt; netmask 255.255.255.254 broadcasting 255.255.255.255\n\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\neno1: flags=4098&lt;BROADCAST,MULTICAST&gt; mtu 1500\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)<p>eno2: flags=4098&lt;BROADCAST,MULTICAST&gt; mtu 1500\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)<p>enp2s0f0: flags=6211&lt;UP,BROADCAST,RUNNING,SLAVE,MULTICAST&gt; mtu 1500<p><pre><code> ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\nenp2s0f1: flags=6211&lt;UP,BROADCAST,RUNNING,SLAVE,MULTICAST&gt; mtu 1500<p><pre><code> ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536\n        inet 127.0.0.1 netmask 255.0.0.0\n        inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt;<p>=================<p>user@defaulthost:~# dmesg | grep enp2\n[ 6.331694] mlx5_core 0000:02:00.0 enp2s0f0np0: 从eth0重命名<p>[ 6.372339] mlx5_core 0000:02:00.1 enp2s0f1np1: 从eth1重命名<p>[ 9.429331] mlx5_core 0000:02:00. 0 enp2s0f0: 从enp2s0f0np0重命名<p>[ 9.484863] mlx5_core 0000:02:00.1 enp2s0f1: 从enp2s0f1np1重命名<p>[ 11.548785] mlx5_core 0000:02:00.0 enp2s0f0: Link up<p>[ 11.553936] bond0: （slaveenp2s0f0）。作为一个备份接口，链路是向上的<p>[ 11.609695] bond0: (slave enp2s0f0): 链路状态肯定是向上的，10000 Mbps全双工<p>[ 15.421901] mlx5_core 0000:02:00.1 enp2s0f1: 链路向上<p>[ 15.429399] bond0: (slave enp2s0f1)。作为一个备份接口，链路是向上的<p>[ 15.678759] bond0: (slave enp2s0f1): 链路状态绝对向上，10000 Mbps 全双工\nuser@defaulthost:~# dmesg | grep eno<p>[ 2.036278] ACPI。添加了_OSI(Linux-Lenovo-NV-HDMI-Audio)<p>[ 5.178678] igb 0000:04:00.0 eno1: 从eth0重命名<p>[ 5.285816] igb 0000:05:00.0 eno2: 从eth1重命名<p>==================<p>user@defaulthost:~# lspci | grep Eth<p>02:00.0 Ethernet controller: Mellanox Technologies MT27710 Family [ConnectX-4 Lx]<p>02:00.1 Ethernet controller: Mellanox Technologies MT27710 Family [ConnectX-4 Lx]<p>04:00.0 Ethernet controller: Intel Corporation I210 Gigabit Network Connection (rev 03)<p>05:00.0 Ethernet controller: Intel Corporation I210 Gigabit Network Connection (rev 03)",
  "description_zh-Hant": "Hackernews讓我認識了一個新的裸機託管供應商。(謝謝--很好的提示。）默認的盒子裡有四個以太網設備（2個Mellanox和2個Intel卡）。其中兩個是綁定的。\n我的目標是：<p>* 我怎樣才能重新配置這四張卡，使我仍然有一個公共IP和一個本地（內部）IP，但我可以騰出兩個Mellanox卡或兩個Intel設備，以便我可以用它們來開發DPDK？它有一個IPV6的本地地址；我也不關心這個。<p>我已經在Amazon EC2中弄清楚了這個問題，但是，默認的網卡情況對我來說比這更簡單。我只是在這種特殊的Linux管理方面沒有任何嚴肅的知識。And I've never bonded or unbounded a pair of NICs.<p>Details follow. <p>TIA<p>===================================<p>user@defaulthost:~# ifconfig -a<p>bond0: flags=5187&lt;UP,BROADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500<p><pre><code> inet &lt;public-IP-address&gt; netmask 255.255.255.254 broadcast 255.255.255.255\n\n        inet6 xxxx:xxxx:xxxx:xxx::1 prefixlen 127 scopeid 0x0&lt;global&gt;\n\n        inet6 xxxx::xxxx:xxxx:xxxx:xxxx prefixlen 64 scopeid 0x20&lt;link&gt;\n\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\nbond0:0: flags=5187&lt;UP,BROADCAST,RUNNING,MASTER,MULTICAST&gt; mtu 1500<p></p><code> inet &lt;local-IP-address&gt; netmask 255.255.255.254 broadcasting 255.255.255.255\n\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\neno1: flags=4098&lt;BROADCAST,MULTICAST&gt; mtu 1500\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)<p>eno2: flags=4098&lt;BROADCAST,MULTICAST&gt; mtu 1500\n        ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)<p>enp2s0f0: flags=6211&lt;UP,BROADCAST,RUNNING,SLAVE,MULTICAST&gt; mtu 1500<p><pre><code> ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\nenp2s0f1: flags=6211&lt;UP,BROADCAST,RUNNING,SLAVE,MULTICAST&gt; mtu 1500<p><pre><code> ether xx:xx:xx:xx:xx:xx txqueuelen 1000 (Ethernet)\n</code></pre>\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536\n        inet 127.0.0.1 netmask 255.0.0.0\n        inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt;<p>=================<p>user@defaulthost:~# dmesg | grep enp2\n[ 6.331694] mlx5_core 0000:02:00.0 enp2s0f0np0: 從eth0重命名<p>[ 6.372339] mlx5_core 0000:02:00.1 enp2s0f1np1: 從eth1重命名<p>[ 9.429331] mlx5_core 0000:02:00. 0 enp2s0f0: 從enp2s0f0np0重命名<p>[ 9.484863] mlx5_core 0000:02:00.1 enp2s0f1: 從enp2s0f1np1重命名<p>[ 11.548785] mlx5_core 0000:02:00.0 enp2s0f0: Link up<p>[ 11.553936] bond0: （slaveenp2s0f0）。作為一個備份接口，鏈路是向上的<p>[ 11.609695] bond0: (slave enp2s0f0): 鏈路狀態肯定是向上的，10000 Mbps全雙工<p>[ 15.421901] mlx5_core 0000:02:00.1 enp2s0f1: 鏈路向上<p>[ 15.429399] bond0: (slave enp2s0f1)。作為一個備份接口，鏈路是向上的<p>[ 15.678759] bond0: (slave enp2s0f1): 鏈路狀態絕對向上，10000 Mbps 全雙工\nuser@defaulthost:~# dmesg | grep eno<p>[ 2.036278] ACPI。添加了_OSI(Linux-Lenovo-NV-HDMI-Audio)<p>[ 5.178678] igb 0000:04:00.0 eno1: 從eth0重命名<p>[ 5.285816] igb 0000:05:00.0 eno2: 從eth1重命名<p>==================<p>user@defaulthost:~# lspci | grep Eth<p>02:00.0 Ethernet controller: Mellanox Technologies MT27710 Family [ConnectX-4 Lx]<p>02:00.1 Ethernet controller: Mellanox Technologies MT27710 Family [ConnectX-4 Lx]<p>04:00.0 Ethernet controller: Intel Corporation I210 Gigabit Network Connection (rev 03)<p>05:00.0 Ethernet controller: Intel Corporation I210 Gigabit Network Connection (rev 03)"
}