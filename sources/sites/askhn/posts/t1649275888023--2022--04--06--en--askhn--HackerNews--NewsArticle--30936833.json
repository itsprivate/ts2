{
  "@type": "NewsArticle",
  "identifier": "2022--04--06--en--askhn--HackerNews--NewsArticle--30936833",
  "url": "https://news.ycombinator.com/item?id=30936833",
  "headline": "Ask HN: How are you supposed to use LeetCode?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "This is all pretty new to me. Been at the same place for over a decade, but figured working on my chops would be good. So I made an account, picked a &quot;medium&quot; exercise at random, and started working on it.<p>It probably took me 2 full hours, and I only got it with a brute force approach and a butt-load of optimization to make it efficient later.<p>So, anyway, then I go to the discussion tab, and that's where everyone is chatting about this really cool, elegant, O(n) solution. But it's the kind of thing you would see in a CS textbook, not just come up with on your own. And I didn't see any proofs, so I still don't know that it _really_ works. But I do see lots of examples of exactly how to implement it.<p>My question is; what's the point then? Are you supposed to not look at the discussion and beat your head against the wall trying to best Donal Knuth, or do you look at the discussion and then just copy it all over with your brain totally turned off? I don't get it.<p>Oh, here it is, in case anyone is wondering:<p>https://leetcode.com/problems/container-with-most-water/",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "leetthrowaway",
    "url": "https://news.ycombinator.com/user?id=leetthrowaway"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30936833",
  "sameAs": "https://news.ycombinator.com/item?id=30936833",
  "dateCreated": "2022-04-06T20:11:28.023Z",
  "datePublished": "2022-04-06T20:01:33.000Z",
  "dateModified": "2022-04-06T20:11:28.023Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 你应该如何使用LeetCode？",
  "headline_zh-Hant": "Ask HN: 你應該如何使用LeetCode？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "这对我来说都很新鲜。我在同一个地方呆了十多年，但我想，锻炼一下自己的能力会有好处。<p>我大概花了整整两个小时，而且我只用了一个蛮力方法和大量的优化来使它变得高效。<p>所以，无论如何，我去了讨论标签，那是每个人都在谈论这个非常酷、优雅、O(n)的解决方案。但这是那种你会在CS教科书上看到的东西，而不是你自己想出来的。而且我没有看到任何证明，所以我仍然不知道它是否真的有效。<p>我的问题是；那有什么意义呢？你是应该不看这些讨论，用你的头去撞墙，试图做到最好，还是看了这些讨论，然后把它全部复制下来，完全关闭你的大脑？我不明白。<p>哦，在这里，如果有人想知道：<p>https://leetcode.com/problems/container-with-most-water/",
  "description_zh-Hant": "這對我來說都很新鮮。我在同一個地方呆了十多年，但我想，鍛鍊一下自己的能力會有好處。<p>我大概花了整整兩個小時，而且我只用了一個蠻力方法和大量的優化來使它變得高效。<p>所以，無論如何，我去了討論標籤，那是每個人都在談論這個非常酷、優雅、O(n)的解決方案。但這是那種你會在CS教科書上看到的東西，而不是你自己想出來的。而且我沒有看到任何證明，所以我仍然不知道它是否真的有效。<p>我的問題是；那有什麼意義呢？你是應該不看這些討論，用你的頭去撞牆，試圖做到最好，還是看了這些討論，然後把它全部複製下來，完全關閉你的大腦？我不明白。<p>哦，在這裡，如果有人想知道：<p>https://leetcode.com/problems/container-with-most-water/"
}