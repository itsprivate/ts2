{
  "@type": "NewsArticle",
  "identifier": "2022--06--20--en--askhn--HackerNews--NewsArticle--31808632",
  "url": "https://news.ycombinator.com/item?id=31808632",
  "headline": "Ask HN: How is Python's OOP is superior vs. Lisp CLOS?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Python classes may be clunky but it is said that Python class system is more flexible than other languages' OOP, even Lisp CLOS.<p>How does Python class system actually compare to Lisp CLOS?<p>I've seen arguments for Python class system is the blocker for important code optimizations, AOT or JIT. Are there elaborate explanations on why we get near-machine code speed for compiled SBCL Lisp but we cannot even save the image for PyPy runs? Seems like a problem worse than GIL.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "stealthcat",
    "url": "https://news.ycombinator.com/user?id=stealthcat"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31808632",
  "sameAs": "https://news.ycombinator.com/item?id=31808632",
  "dateCreated": "2022-06-20T10:48:54.515Z",
  "datePublished": "2022-06-20T10:37:33.000Z",
  "dateModified": "2022-06-20T10:48:54.515Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: Python的OOP与Lisp的CLOS相比有什么优势？\n",
  "headline_zh-Hant": "Ask HN: Python的OOP與Lisp的CLOS相比有什麼優勢？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "<p>Python类可能很笨重，但据说Python类系统比其他语言的OOP更灵活，甚至是Lisp CLOS。<p>Python类系统与Lisp CLOS相比究竟如何？<p>我看到有观点认为Python类系统是重要代码优化、AOT或JIT的阻碍者。是否有详细的解释，为什么我们在编译SBCL Lisp时可以获得接近机器的代码速度，但在PyPy运行时却连图像都无法保存？这似乎是一个比GIL更糟糕的问题。\n",
  "description_zh-Hant": "<p>Python類可能很笨重，但據說Python類系統比其他語言的OOP更靈活，甚至是Lisp CLOS。<p>Python類系統與Lisp CLOS相比究竟如何？<p>我看到有觀點認為Python類系統是重要代碼優化、AOT或JIT的阻礙者。是否有詳細的解釋，為什麼我們在編譯SBCL Lisp時可以獲得接近機器的代碼速度，但在PyPy運行時卻連圖像都無法保存？這似乎是一個比GIL更糟糕的問題。\n"
}