{
  "@type": "NewsArticle",
  "identifier": "2022--08--01--en--askhn--HackerNews--NewsArticle--32309179",
  "url": "https://news.ycombinator.com/item?id=32309179",
  "headline": "Ask HN: Resources for Learning Continuous Delivery",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Looking for something that tackles the big picture and doesn't spend too much time fiddling with the actual implementation. My mental model is currently composed of tiny bits and bobs (testing, configuration management, IaC, etc.) but lacks a concrete object which is capable of tying it all together.<p>What are the core components of a continuous delivery pipeline? What are the abstract design principles which can be applied across different domains? What gatchas are beginners prone to and how can we avoid them?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "aliasxneo",
    "url": "https://news.ycombinator.com/user?id=aliasxneo"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32309179",
  "sameAs": "https://news.ycombinator.com/item?id=32309179",
  "dateCreated": "2022-08-01T17:43:25.928Z",
  "datePublished": "2022-08-01T17:16:09.000Z",
  "dateModified": "2022-08-01T17:43:25.928Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 学习持续交付的资源\n",
  "headline_zh-Hant": "Ask HN: 學習持續交付的資源\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我想找一些能够解决大问题的东西，而不需要花太多时间去摆弄实际的实现。我的心智模型目前是由一些细小的片段组成的（测试、配置管理、IaC等），但缺乏一个能够将其联系在一起的具体对象。<p>持续交付管道的核心组件是什么？有哪些抽象的设计原则可以适用于不同的领域？初学者容易出现哪些问题，我们如何避免这些问题？\n",
  "description_zh-Hant": "我想找一些能夠解決大問題的東西，而不需要花太多時間去擺弄實際的實現。我的心智模型目前是由一些細小的片段組成的（測試、配置管理、IaC等），但缺乏一個能夠將其聯繫在一起的具體對象。<p>持續交付管道的核心組件是什麼？有哪些抽象的設計原則可以適用於不同的領域？初學者容易出現哪些問題，我們如何避免這些問題？\n"
}