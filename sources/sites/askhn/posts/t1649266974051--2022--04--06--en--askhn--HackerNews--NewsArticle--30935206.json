{
  "@type": "NewsArticle",
  "identifier": "2022--04--06--en--askhn--HackerNews--NewsArticle--30935206",
  "url": "https://news.ycombinator.com/item?id=30935206",
  "headline": "Ask HN: Interest in a 0-downtime managed Postgres migration tool?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I recently discovered how much of a hassle it is to migrate off of Heroku Postgres. Both to keep the user from screwing themselves and as a vendor lock-in mechanism there's no possibility of running an external replica for your Heroku Postgres database. Unless I'm missing something after a bunch of Googling it seems like there is a market gap for a tool that allows for a seamless migration away from a Postgres DB that won't allow for replicas.<p>I imagine that, given some constraints on what queries you allow on your database, you could proxy connections to a managed Postgres database while feeding them simultaneously to a new database. Starting from a snapshot of the old database one could catch the new database up to a live state of the old database and then swap over all connections to the new one.<p>Does such a proxy already exist? I'd love to know as I could use it. If not it might be fun to build and a good side-project.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "teaearlgraycold",
    "url": "https://news.ycombinator.com/user?id=teaearlgraycold"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30935206",
  "sameAs": "https://news.ycombinator.com/item?id=30935206",
  "dateCreated": "2022-04-06T17:42:54.051Z",
  "datePublished": "2022-04-06T17:41:00.000Z",
  "dateModified": "2022-04-06T17:42:54.051Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 对0-downtime管理的Postgres迁移工具感兴趣吗？",
  "headline_zh-Hant": "Ask HN: 對0-downtime管理的Postgres遷移工具感興趣嗎？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我最近发现，从Heroku Postgres上迁移下来是多么的麻烦。无论是为了防止用户搞砸自己，还是作为一个供应商的锁定机制，都不可能为你的Heroku Postgres数据库运行一个外部副本。除非我在Google上搜索到了一些东西，否则，对于一个允许从不允许复制的Postgres数据库中无缝迁移的工具来说，似乎是一个市场空白。<p>我想，如果你对你的数据库允许的查询有一些限制，你可以代理连接到一个管理的Postgres数据库，同时将它们输送到一个新的数据库。从旧数据库的快照开始，我们可以将新数据库赶上旧数据库的实时状态，然后将所有连接换到新数据库。我很想知道，因为我可以使用它。如果没有的话，建立它可能会很有趣，也是一个很好的副业项目。",
  "description_zh-Hant": "我最近發現，從Heroku Postgres上遷移下來是多麼的麻煩。無論是為了防止用戶搞砸自己，還是作為一個供應商的鎖定機制，都不可能為你的Heroku Postgres數據庫運行一個外部副本。除非我在Google上搜索到了一些東西，否則，對於一個允許從不允許複製的Postgres數據庫中無縫遷移的工具來說，似乎是一個市場空白。<p>我想，如果你對你的數據庫允許的查詢有一些限制，你可以代理連接到一個管理的Postgres數據庫，同時將它們輸送到一個新的數據庫。從舊數據庫的快照開始，我們可以將新數據庫趕上舊數據庫的實時狀態，然後將所有連接換到新數據庫。我很想知道，因為我可以使用它。如果沒有的話，建立它可能會很有趣，也是一個很好的副業項目。"
}