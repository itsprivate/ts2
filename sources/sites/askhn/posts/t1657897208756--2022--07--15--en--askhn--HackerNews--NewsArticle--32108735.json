{
  "@type": "NewsArticle",
  "identifier": "2022--07--15--en--askhn--HackerNews--NewsArticle--32108735",
  "url": "https://news.ycombinator.com/item?id=32108735",
  "headline": "Ask HN: Is there any “Make you a Haskell” tutorial?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi all,<p>I would like to write a programming language with semantics compatible with Haskell alike languages like F# or OCaml. I would make the prototype in python for all its bindings as I hope I can be more productive even if it has not support for pattern matching and ADTs.<p>The only known guide I know about hundreds of &quot;Make you a Lisp&quot; tutorials and about a &quot;Make you a Haskell&quot; one which is not complete.<p>The only part that scares me a bit is the type system for what I would be afraid to have to recreate a Prolog or something similar (my first thought was to delegate this job to a separate engine during the first proofs of concept but I to report errors properly and advance I will end up having to implement my own, much more complex, system). Also in order to implement proper Effect Systems or Lazy Execution/evaluation elegantly.<p>If that doesn't exist I also would love some pointers in any other programming language, such as Python, Clojure or OCaml.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "nudpiedo",
    "url": "https://news.ycombinator.com/user?id=nudpiedo"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32108735",
  "sameAs": "https://news.ycombinator.com/item?id=32108735",
  "dateCreated": "2022-07-15T15:00:08.756Z",
  "datePublished": "2022-07-15T14:47:56.000Z",
  "dateModified": "2022-07-15T15:00:08.756Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 有没有什么 \"让你成为哈士奇 \"的教程？\n",
  "headline_zh-Hant": "Ask HN: 有沒有什麼 \"讓你成為哈士奇 \"的教程？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "大家好，<p>我想写一种编程语言，其语义与Haskell类似的语言如F#或OCaml兼容。我想用python来制作它的所有绑定的原型，因为我希望我可以更有效率，即使它不支持模式匹配和ADT。<p>我所知道的唯一指南是数百个&quot;让你成为Lisp&quot;教程和一个&quot;让你成为Haskell&quot;的教程，但并不完整。 <p>唯一让我有点害怕的部分是类型系统，因为我害怕不得不重新创建一个Prolog或类似的东西（我的第一个想法是在最初的概念验证期间将这项工作委托给一个单独的引擎，但我要正确地报告错误，并提前实现我自己的、更复杂的系统）。此外，为了优雅地实现适当的效果系统或懒惰执行/评估。<p>如果不存在这些，我也希望在任何其他编程语言中得到一些指导，如Python、Clojure或OCaml。\n",
  "description_zh-Hant": "大家好，<p>我想寫一種編程語言，其語義與Haskell類似的語言如F#或OCaml兼容。我想用python來製作它的所有綁定的原型，因為我希望我可以更有效率，即使它不支持模式匹配和ADT。<p>我所知道的唯一指南是數百個&quot;讓你成為Lisp&quot;教程和一個&quot;讓你成為Haskell&quot;的教程，但並不完整。 <p>唯一讓我有點害怕的部分是類型系統，因為我害怕不得不重新創建一個Prolog或類似的東西（我的第一個想法是在最初的概念驗證期間將這項工作委託給一個單獨的引擎，但我要正確地報告錯誤，並提前實現我自己的、更復雜的系統）。此外，為了優雅地實現適當的效果系統或懶惰執行/評估。<p>如果不存在這些，我也希望在任何其他編程語言中得到一些指導，如Python、Clojure或OCaml。\n"
}