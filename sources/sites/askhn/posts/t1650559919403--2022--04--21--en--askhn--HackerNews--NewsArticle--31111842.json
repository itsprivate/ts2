{
  "@type": "NewsArticle",
  "identifier": "2022--04--21--en--askhn--HackerNews--NewsArticle--31111842",
  "url": "https://news.ycombinator.com/item?id=31111842",
  "headline": "Ask HN: Benchmarking Ideas?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "We have a &quot;blended stack&quot; app which combines video and printing.<p>Currently our stuff runs on two t2.small servers. One serves the app (has everything). I know we can break it up. What we send out is an app which is just a static build (react) and it can be smaller (it's big right now, need to purge Tailwind CSS). We use a postgres backend with Express.<p>Aside from that the video is handled by another party and our second server is primarily for an Apple CUPS instance. This server also handles websocket connections between users.<p>The servers are single CPU, 2GB RAM, not a lot of storage (not really needed for operation, we use S3 to store things).<p>Some ideas to scale are to just serve the front end builds via a CDN/from S3.<p>I just was trying to figure out how I could get numbers per server, how many people it could hold. I have seen crazy figures like a single NGINX instance doing 10,000 requests out of the box easily.<p>The printer is the interesting one because the load is in bursts. Not sure what I should cap each machine at even though it's probably never really 100% used at any time.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "jcun4128",
    "url": "https://news.ycombinator.com/user?id=jcun4128"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31111842",
  "sameAs": "https://news.ycombinator.com/item?id=31111842",
  "dateCreated": "2022-04-21T16:51:59.403Z",
  "datePublished": "2022-04-21T16:46:43.000Z",
  "dateModified": "2022-04-21T16:51:59.403Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 基准化的想法？",
  "headline_zh-Hant": "Ask HN: 基準化的想法？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我们有一个&quot;混合堆栈&quot;应用程序，它结合了视频和打印。<p>目前，我们的东西运行在两个t2.small服务器上。一台为应用程序服务（拥有一切）。我知道我们可以把它拆开。我们发送的是一个应用程序，它只是一个静态构建（反应），它可以更小（它现在很大，需要清除Tailwind CSS）。<p>除此之外，视频由另一方处理，我们的第二台服务器主要用于苹果CUPS实例。这台服务器还处理用户之间的websocket连接。<p>服务器是单CPU，2GB内存，没有大量的存储空间（实际上不需要操作，我们使用S3来存储东西）。<p>一些扩展的想法是通过CDN/S3来提供前端构建。我见过一些疯狂的数字，比如一个NGINX实例可以轻松完成10000个请求。<p>打印机是一个有趣的问题，因为负载是突发的。我不确定每台机器的上限是多少，即使它在任何时候都不可能真正100%使用。",
  "description_zh-Hant": "我們有一個&quot;混合堆棧&quot;應用程序，它結合了視頻和打印。<p>目前，我們的東西運行在兩個t2.small服務器上。一臺為應用程序服務（擁有一切）。我知道我們可以把它拆開。我們發送的是一個應用程序，它只是一個靜態構建（反應），它可以更小（它現在很大，需要清除Tailwind CSS）。<p>除此之外，視頻由另一方處理，我們的第二臺服務器主要用於蘋果CUPS實例。這臺服務器還處理用戶之間的websocket連接。<p>服務器是單CPU，2GB內存，沒有大量的存儲空間（實際上不需要操作，我們使用S3來存儲東西）。<p>一些擴展的想法是通過CDN/S3來提供前端構建。我見過一些瘋狂的數字，比如一個NGINX實例可以輕鬆完成10000個請求。<p>打印機是一個有趣的問題，因為負載是突發的。我不確定每臺機器的上限是多少，即使它在任何時候都不可能真正100%使用。"
}