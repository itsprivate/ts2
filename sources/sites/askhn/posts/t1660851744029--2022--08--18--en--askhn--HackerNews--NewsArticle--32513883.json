{
  "@type": "NewsArticle",
  "identifier": "2022--08--18--en--askhn--HackerNews--NewsArticle--32513883",
  "url": "https://news.ycombinator.com/item?id=32513883",
  "headline": "Ask HN: Increase the Performance of (Fast)CGI Applications",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I just had a nice idea.<p>Imagine a Web Application.<p>The Application has todo various things.<p>I) Receive user input\nII )Connect to DB and load Wordpress plugins\nIII) Interpret user input\nIV) Calculate Output\nV) Send response<p>Now the clue is; Step II) could be done before ány connection and input is accepted from the httpd.<p>A hot process with loaded plugins could wait for the next client.<p>I could imagine to intruduce a new keyword or function: &quot;listen_and_accept&quot; - which will put your application into the accept state.\nCode before this state can be executed, but without user input, to preheat the process.<p>Maybe a mapping, ModuleLoader, LanguageFileLoading, Code Autoload, etc.<p>What do you think?<p>- gizmore",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "gizmore",
    "url": "https://news.ycombinator.com/user?id=gizmore"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32513883",
  "sameAs": "https://news.ycombinator.com/item?id=32513883",
  "dateCreated": "2022-08-18T19:42:24.029Z",
  "datePublished": "2022-08-18T19:32:03.000Z",
  "dateModified": "2022-08-18T19:42:24.029Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 提高（快速）CGI应用程序的性能\n",
  "headline_zh-Hant": "Ask HN: 提高（快速）CGI應用程序的性能\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我刚刚有了一个好主意。<p>想象一个Web应用程序。<p>该应用程序要做各种事情。<p>I) 接收用户的输入\nII）连接到数据库并加载Wordpress插件\nIII）解释用户的输入\nIV) 计算输出\n<p>现在的线索是；步骤II）可以在任何连接和输入被httpd接受之前完成。<p>一个加载了插件的热进程可以等待下一个客户端。<p>我可以想象引入一个新的关键字或函数：&quot;listen_and_accept&quot; - 这将使你的应用程序进入接受状态。\n在这个状态之前的代码可以被执行，但不需要用户输入，以预热这个过程。<p>也许是一个映射，ModuleLoader，LanguageFileLoading，Code Autoload等。<p>你怎么看？<p>- gizmore\n",
  "description_zh-Hant": "我剛剛有了一個好主意。<p>想象一個Web應用程序。<p>該應用程序要做各種事情。<p>I) 接收用戶的輸入\nII）連接到數據庫並加載Wordpress插件\nIII）解釋用戶的輸入\nIV) 計算輸出\n<p>現在的線索是；步驟II）可以在任何連接和輸入被httpd接受之前完成。<p>一個加載了插件的熱進程可以等待下一個客戶端。<p>我可以想象引入一個新的關鍵字或函數：&quot;listen_and_accept&quot; - 這將使你的應用程序進入接受狀態。\n在這個狀態之前的代碼可以被執行，但不需要用戶輸入，以預熱這個過程。<p>也許是一個映射，ModuleLoader，LanguageFileLoading，Code Autoload等。<p>你怎麼看？<p>- gizmore\n"
}