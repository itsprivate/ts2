{
  "@type": "NewsArticle",
  "identifier": "2022--02--21--en--askhn--HackerNews--NewsArticle--30419592",
  "url": "https://news.ycombinator.com/item?id=30419592",
  "headline": "Ask HN: What would be your ideal IDE experience be in Rust/Java?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "We have been working IDE extensions to make programs nicer on the eye, easier to navigate through and playful to work with. One of the ways we have been experimenting with it is through 1:1 mapping of programs into a lean visual representation (Java for now).<p>The visual representation doesn't get in the way, you can type code like you would and we convert the code into UI on the fly with regular autocompletes as you'd expect.<p>Why UI you ask:<p>1. UI allows us to give hard interaction points where you can click in the right places to access the programming language features available at that point in code.\nex. select 4 statements and press ctrl+f to wrap then in for loop/ right click and select &quot;wrap in for&quot;.<p>2. It lets us lay out your code in a map (or what is suitable for current task), for example when you want to see where all a reference has been used in a program, you can double click on it and we will show you the usages relative to your current position in the program in a map (instead of a list as in current IDEs). You can click on a method and we can bring all the fields/methods that are being used right next to that method without changing the code.<p>3. The UI is quite dense actually, you can zoom out to the point where it's just code with tokens you can interact with, zoom further and we can show you a local code map of the things that the selected region of your code accesses.<p>4. It could be useful for accessibility/interaction with code on touch devices.<p>5. Learn a language by interacting with the UI, the UI can serve to help you explore new language features by making them more accessible. Shifting the focus from learning a language to build programs to learning to use an IDE to build programs.<p>_________________________________\nHere is a link to show what we have been experimenting with:<p>https://drive.google.com/drive/folders/18CdALYNg3v-Qngle-bOErWl3w8mWT-gR?usp=sharing\n_________________________________<p>How do `you` imagine your perfect IDE experience to be? In your opinion how can one enhance the programming experience with meaningful UIs embedded in the IDE?<p>* If things are unclear regarding where we are going with this, we are just experimenting with ideas :)",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "vyomkeshj",
    "url": "https://news.ycombinator.com/user?id=vyomkeshj"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30419592",
  "sameAs": "https://news.ycombinator.com/item?id=30419592",
  "dateCreated": "2022-02-21T19:35:21.700Z",
  "datePublished": "2022-02-21T19:26:15.000Z",
  "dateModified": "2022-02-21T19:35:21.700Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 在Rust/Java中，你理想的IDE体验是什么？",
  "headline_zh-Hant": "Ask HN: 在Rust/Java中，你理想的IDE體驗是什麼？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我们一直在进行IDE扩展，以使程序更美观，更容易浏览，并使工作更有趣。我们一直在尝试的方法之一是通过1:1的程序映射到一个精益的视觉表示（目前是Java）。<p>视觉表示并不碍事，你可以像你一样输入代码，我们会像你所期望的那样通过常规的自动完成将代码转换成UI。UI允许我们提供硬性的交互点，你可以点击正确的地方来访问代码中该点可用的编程语言功能。\n例如，选择4条语句并按ctrl+f将其包裹在for循环中/右击并选择&quot;包裹在for&quot;。<p>2.它让我们将你的代码布置在地图上（或适合当前任务的地方），例如，当你想看一个程序中所有引用的位置时，你可以双击它，我们将在地图上显示相对于你当前位置的使用情况（而不是像当前IDE中的列表）。你可以点击一个方法，我们可以在不改变代码的情况下，将所有正在使用的字段/方法带到该方法旁边。<p>3.UI实际上是相当密集的，你可以放大到只有代码与你可以互动的标记，进一步放大，我们可以向你展示你的代码的选定区域所访问的东西的本地代码地图。 <p>4.它可能对触摸设备上的可访问性/代码交互很有用。通过与用户界面的互动来学习一种语言，用户界面可以起到帮助你探索新的语言功能的作用，使它们更容易被接受。将重点从学习语言来构建程序转移到学习使用IDE来构建程序。<p>_________________________________\n下面是一个链接，显示我们一直在进行的实验：<p>https://drive.google.com/drive/folders/18CdALYNg3v-Qngle-bOErWl3w8mWT-gR?usp=sharing\n_________________________________<p>你想象中的完美IDE体验是怎样的？在你看来，如何通过在IDE中嵌入有意义的UI来提高编程体验？<p>* 如果对我们要做的事情不清楚，我们只是在试验一些想法而已:)",
  "description_zh-Hant": "我們一直在進行IDE擴展，以使程序更美觀，更容易瀏覽，並使工作更有趣。我們一直在嘗試的方法之一是通過1:1的程序映射到一個精益的視覺表示（目前是Java）。<p>視覺表示並不礙事，你可以像你一樣輸入代碼，我們會像你所期望的那樣通過常規的自動完成將代碼轉換成UI。UI允許我們提供硬性的交互點，你可以點擊正確的地方來訪問代碼中該點可用的編程語言功能。\n例如，選擇4條語句並按ctrl+f將其包裹在for循環中/右擊並選擇&quot;包裹在for&quot;。<p>2.它讓我們將你的代碼佈置在地圖上（或適合當前任務的地方），例如，當你想看一個程序中所有引用的位置時，你可以雙擊它，我們將在地圖上顯示相對於你當前位置的使用情況（而不是像當前IDE中的列表）。你可以點擊一個方法，我們可以在不改變代碼的情況下，將所有正在使用的字段/方法帶到該方法旁邊。<p>3.UI實際上是相當密集的，你可以放大到只有代碼與你可以互動的標記，進一步放大，我們可以向你展示你的代碼的選定區域所訪問的東西的本地代碼地圖。 <p>4.它可能對觸摸設備上的可訪問性/代碼交互很有用。通過與用戶界面的互動來學習一種語言，用戶界面可以起到幫助你探索新的語言功能的作用，使它們更容易被接受。將重點從學習語言來構建程序轉移到學習使用IDE來構建程序。<p>_________________________________\n下面是一個鏈接，顯示我們一直在進行的實驗：<p>https://drive.google.com/drive/folders/18CdALYNg3v-Qngle-bOErWl3w8mWT-gR?usp=sharing\n_________________________________<p>你想象中的完美IDE體驗是怎樣的？在你看來，如何通過在IDE中嵌入有意義的UI來提高編程體驗？<p>* 如果對我們要做的事情不清楚，我們只是在試驗一些想法而已:)"
}