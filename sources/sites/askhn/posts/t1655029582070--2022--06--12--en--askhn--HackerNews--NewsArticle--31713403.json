{
  "@type": "NewsArticle",
  "identifier": "2022--06--12--en--askhn--HackerNews--NewsArticle--31713403",
  "url": "https://news.ycombinator.com/item?id=31713403",
  "headline": "Ask HN: Java Suffers from an Identity Problem",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Most of the day to day software engineering is our ability to work with the language tooling. We can also call it the ecosystem that the language provides. From Java's perspective most of our interaction with the language is not directly with the language but with frameworks like Spring etc. These things are meant to make the language more easily digestible.<p>The problem comes in when the platform becomes so huge that there is no way to logical develop a thorough understanding of the actual technology at hand. I have been studying Java again to brush up my understanding of it but found that the language has grown so much it is difficult to derive a logical end to the platform.<p>This was further evident when I started looking for Java developer roles in my country and found that just understanding Java and its principles were not enough. There seemed to be a general consensus that Java developers must know other related technologies like Spring, JPA, Hibernate, etc.<p>All these related technologies bring their own software paradigm into the picture and hide the actual technology (Java) under the hood.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "itsmefaz",
    "url": "https://news.ycombinator.com/user?id=itsmefaz"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31713403",
  "sameAs": "https://news.ycombinator.com/item?id=31713403",
  "dateCreated": "2022-06-12T10:26:22.070Z",
  "datePublished": "2022-06-12T10:19:16.000Z",
  "dateModified": "2022-06-12T10:26:22.070Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: Java受到身份问题的困扰\n",
  "headline_zh-Hant": "Ask HN: Java受到身份問題的困擾\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "大部分日常的软件工程是我们与语言工具的工作能力。我们也可以称之为语言所提供的生态系统。从Java的角度来看，我们与语言的大部分互动不是直接与语言，而是与Spring等框架。这些东西是为了让语言更容易消化。<p>当平台变得如此巨大时，问题就来了，以至于没有办法对手头的实际技术进行逻辑上的透彻理解。我一直在重新学习Java，以刷新我对它的理解，但发现这门语言已经发展得如此之大，以至于很难在平台上推导出一个合理的结局。<p>当我开始在我国寻找Java开发人员的职位时，这一点进一步显现出来，我发现仅仅理解Java及其原理是不够的。<p>所有这些相关的技术都带来了他们自己的软件范式，并将实际的技术（Java）隐藏在引擎盖之下。\n",
  "description_zh-Hant": "大部分日常的軟件工程是我們與語言工具的工作能力。我們也可以稱之為語言所提供的生態系統。從Java的角度來看，我們與語言的大部分互動不是直接與語言，而是與Spring等框架。這些東西是為了讓語言更容易消化。<p>當平臺變得如此巨大時，問題就來了，以至於沒有辦法對手頭的實際技術進行邏輯上的透徹理解。我一直在重新學習Java，以刷新我對它的理解，但發現這門語言已經發展得如此之大，以至於很難在平臺上推導出一個合理的結局。<p>當我開始在我國尋找Java開發人員的職位時，這一點進一步顯現出來，我發現僅僅理解Java及其原理是不夠的。<p>所有這些相關的技術都帶來了他們自己的軟件範式，並將實際的技術（Java）隱藏在引擎蓋之下。\n"
}