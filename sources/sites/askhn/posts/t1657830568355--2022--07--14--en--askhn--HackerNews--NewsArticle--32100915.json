{
  "@type": "NewsArticle",
  "identifier": "2022--07--14--en--askhn--HackerNews--NewsArticle--32100915",
  "url": "https://news.ycombinator.com/item?id=32100915",
  "headline": "Ask HN: How do you document your Data Models?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "When documenting my last project I came to the realization that all projects I have worked on have a very poor documentation of their data model. I believe that this leads to longer onboarding time and a lot of newscommer mistakes in the project (such adding new properties for something that exists somewhere else). Generally the data model is documented in the database / ORM, but it generally describe the physical representation of the data in the database (name is a Varchar(128)) but not how/for what such data are to be use (which is sometime complicate to understand on old project where knowledge has been lost and when naming is not consistent/explicit).<p>It seems that recent ORM that allow you to describe your DB schema as code (like Prisma) allow you to add ‘comments’ on your Data model, but I feel it’s not enough.<p>I have look at the data modeling tooling but haven’t found satisfying solutions.<p>I missing something? How do you document your app data model?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "pierre",
    "url": "https://news.ycombinator.com/user?id=pierre"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32100915",
  "sameAs": "https://news.ycombinator.com/item?id=32100915",
  "dateCreated": "2022-07-14T20:29:28.355Z",
  "datePublished": "2022-07-14T20:13:42.000Z",
  "dateModified": "2022-07-14T20:29:28.355Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Ask HN: 你如何记录你的数据模型？\n",
  "headline_zh-Hant": "Ask HN: 你如何記錄你的數據模型？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "在记录我的最后一个项目时，我意识到我所做的所有项目的数据模型的文档都非常差。我相信这导致了更长的入职时间和项目中大量的新手错误（比如为其他地方存在的东西添加新属性）。一般来说，数据模型是在数据库/ORM中记录的，但它通常描述了数据在数据库中的物理表示（名字是Varchar(128)），而不是如何/为了什么而使用这些数据（在知识已经丢失的老项目中，当命名不一致/不明确时，这有时会很复杂）。 <p>最近的ORM允许你用代码来描述你的DB模式（如Prisma），允许你在数据模型上添加 \"注释\"，但我觉得这还不够。你是如何记录你的应用程序数据模型的？\n",
  "description_zh-Hant": "在記錄我的最後一個項目時，我意識到我所做的所有項目的數據模型的文檔都非常差。我相信這導致了更長的入職時間和項目中大量的新手錯誤（比如為其他地方存在的東西添加新屬性）。一般來說，數據模型是在數據庫/ORM中記錄的，但它通常描述了數據在數據庫中的物理表示（名字是Varchar(128)），而不是如何/為了什麼而使用這些數據（在知識已經丟失的老項目中，當命名不一致/不明確時，這有時會很複雜）。 <p>最近的ORM允許你用代碼來描述你的DB模式（如Prisma），允許你在數據模型上添加 \"註釋\"，但我覺得這還不夠。你是如何記錄你的應用程序數據模型的？\n"
}