{
  "@type": "NewsArticle",
  "identifier": "2022--08--21--en--besthn--HackerNews--NewsArticle--32532875",
  "url": "https://news.ycombinator.com/item?id=32532875",
  "headline": "Tell HN: A new way to use GPT-3 to generate code (and everything else)",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN,<p>One of the things that frustrates me about Copilot is that all tasks posed to it must be in the form of a completion. By writing clever comments you can get it to generate a few lines of code or a short function body, but you never get coherent long-form generations just from mashing the tab key.<p>I’m working on a different approach. Instead of requiring you specify your code generation task through stilted comments, you can use GPT-3 to fill in what I call “instructional templates”. They’re like f-strings, except the English goes on the inside and the Python goes on the outside. Additionally, each instruction’s location and surrounding context can aid in interpreting it, allowing instructions to be impressively terse.<p>I’ve collected 10 examples of the method on a Twitter thread here. Most code examples are in Python, but I also demonstrate generating CSV, NDJSON, R, Markdown, and HTML: <a href=\"https://twitter.com/goodside/status/1559801520773898240?s=21&amp;t=-r-dR8pkhZ3lfCpeLOWqvw\" rel=\"nofollow\">https://twitter.com/goodside/status/1559801520773898240?s=21...</a><p>I also have a few examples of more creative, non-program output in HTML and Markdown in this thread: <a href=\"https://twitter.com/goodside/status/1560953991722418177?s=21&amp;t=-r-dR8pkhZ3lfCpeLOWqvw\" rel=\"nofollow\">https://twitter.com/goodside/status/1560953991722418177?s=21...</a><p>Interested in any feedback, especially from anyone who’s tried to apply my method to their own problems.",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "goodside",
    "url": "https://news.ycombinator.com/user?id=goodside"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32532875",
  "sameAs": "https://news.ycombinator.com/item?id=32532875",
  "dateCreated": "2022-08-21T02:29:11.554Z",
  "datePublished": "2022-08-20T15:45:52.000Z",
  "dateModified": "2022-08-21T02:29:11.554Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 216
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 63
    }
  ],
  "headline_zh-Hans": "告诉HN：使用GPT-3生成代码的新方法（和其他一切）。\n",
  "headline_zh-Hant": "告訴HN：使用GPT-3生成代碼的新方法（和其他一切）。\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hi HN,<p>One of the things that frustrates me about Copilot is that all tasks posed to it must be in the form of a completion. By writing clever comments you can get it to generate a few lines of code or a short function body, but you never get coherent long-form generations just from mashing the tab key.<p>I’m working on a different approach. Instead of requiring you specify your code generation task through stilted comments, you can use GPT-3 to fill in what I call “instructional templates”. They’re like f-strings, except the English goes on the inside and the Python goes on the outside. Additionally, each instruction’s location and surrounding context can aid in interpreting it, allowing instructions to be impressively terse.<p>I’ve collected 10 examples of the method on a Twitter thread here. Most code examples are in Python, but I also demonstrate generating CSV, NDJSON, R, Markdown, and HTML: <a href=\"https://twitter.com/goodside/status/1559801520773898240?s=21&amp;t=-r-dR8pkhZ3lfCpeLOWqvw\" rel=\"nofollow\">https://twitter.com/goodside/status/1559801520773898240?s=21...</a><p>I also have a few examples of more creative, non-program output in HTML and Markdown in this thread: <a href=\"https://twitter.com/goodside/status/1560953991722418177?s=21&amp;t=-r-dR8pkhZ3lfCpeLOWqvw\" rel=\"nofollow\">https://twitter.com/goodside/status/1560953991722418177?s=21...</a><p>Interested in any feedback, especially from anyone who’s tried to apply my method to their own problems.\n",
  "description_zh-Hant": "Hi HN,<p>One of the things that frustrates me about Copilot is that all tasks posed to it must be in the form of a completion. By writing clever comments you can get it to generate a few lines of code or a short function body, but you never get coherent long-form generations just from mashing the tab key.<p>I’m working on a different approach. Instead of requiring you specify your code generation task through stilted comments, you can use GPT-3 to fill in what I call “instructional templates”. They’re like f-strings, except the English goes on the inside and the Python goes on the outside. Additionally, each instruction’s location and surrounding context can aid in interpreting it, allowing instructions to be impressively terse.<p>I’ve collected 10 examples of the method on a Twitter thread here. Most code examples are in Python, but I also demonstrate generating CSV, NDJSON, R, Markdown, and HTML: <a href=\"https://twitter.com/goodside/status/1559801520773898240?s=21&amp;t=-r-dR8pkhZ3lfCpeLOWqvw\" rel=\"nofollow\">https://twitter.com/goodside/status/1559801520773898240?s=21...</a><p>I also have a few examples of more creative, non-program output in HTML and Markdown in this thread: <a href=\"https://twitter.com/goodside/status/1560953991722418177?s=21&amp;t=-r-dR8pkhZ3lfCpeLOWqvw\" rel=\"nofollow\">https://twitter.com/goodside/status/1560953991722418177?s=21...</a><p>Interested in any feedback, especially from anyone who’s tried to apply my method to their own problems.\n"
}