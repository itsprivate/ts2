{
  "@type": "NewsArticle",
  "identifier": "2022--02--25--en--showhn--HackerNews--NewsArticle--30465854",
  "url": "https://news.ycombinator.com/item?id=30465854",
  "headline": "Show HN: Open-Source Unbound DNS Resolver Docker Image",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hey Hacker News!<p>I am madnuttah, I am a Windows/Linux Sysadmin and some folks may remember this username for &quot;niche&quot; mods I've made for Fallout and Skyrim and some C# UWP Windows Store Apps which I've retired because of Microsoft's unclear strategy abandoning things from one day to another.<p>Why am I writing this?<p>I wanted to be independent from the DNS servers of my provider, because they have often shined brightly with problems in the past instead of functioning properly, wanted to have a little bit more privacy and freedom back by fighting censorship via DNS, so I built my own Unbound Docker image with a lot of effort and conscientiousness. Because I think it's worth it, I'd like to share my efforts with you.<p>My life taught me that trust must be earned, you never know what was fiddled into and what was tampered with. This image is therefore entirely built online using workflows in a GitHub action, uses the very lean Alpine Linux with all its security features and Unbound directly queries a local copy of the root zone, which is kept up-to-date using DNS zone transfers (XFR). Instead of occupying a few hundred megabytes on your harddisk, my image is only about 30 megabytes uncompressed in size.<p>The separate components Libevent and OpenSSL3 are compiled in the build process in their separate workflows and all the downloads, even the Internic files (root.hints and root.zone) are checked using their PGP keys and signature files if available, following my zero-trust policy. Unbound is compiled with hardening security features that most images do not include, such as PIE (Position Independent Executables), which randomizes the application's position in memory which makes attacks more difficult and RELRO (Relocation Read-Only) which also can mitigate exploitations.<p>The image was actually designed as an DNSSEC validating upstream DNS resolver with Pi-hole for adblocking and tracking prevention in mind but it also works perfectly as a standalone server. All Linux architectures are supported, which are currently used by Pi-hole: 386, armv6, armv7, arm64 and amd64. So it also able to run on older Raspberries under Docker.<p>I maintain the image regularly and as soon as included components are updated, security vulnerabilities become known or an update of Unbound is released, the image will be available for you on the Docker registry in a few hours.<p>If anyone would like to contribute to the development, I'm happy to receive a pull request of yours.<p>For any suggestions, questions, comments or even criticism you are very welcome to contact me here on HN or on Mastodon (https://fosstodon.org/@madnuttah).<p>Here is the link to my GitHub repo https://github.com/madnuttah/unbound-docker.<p>You may find the following links useful for testing the security of your DNS or even in case you want to do a before and after comparison if you want to give the image a try:<p>DNS Leak Test: https://www.dnsleaktest.com/<p>DNSSEC-Test from the University of Duisburg-Essen: https://dnssec.vs.uni-due.de/<p>GRC's DNS Nameserver Spoofability Test: https://www.grc.com/dns/dns.htm<p>Cheers, madnuttah",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "madnuttah",
    "url": "https://news.ycombinator.com/user?id=madnuttah"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30465854",
  "sameAs": "https://news.ycombinator.com/item?id=30465854",
  "dateCreated": "2022-02-25T11:10:34.167Z",
  "datePublished": "2022-02-25T10:50:56.000Z",
  "dateModified": "2022-02-25T11:10:34.167Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: 开源的无约束DNS解析器Docker镜像",
  "headline_zh-Hant": "Show HN: 開源的無約束DNS解析器Docker鏡像",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嘿，Hacker News！<p>我是madnuttah，我是一个Windows/Linux系统管理员，有些人可能记得这个用户名，因为我为Fallout和Skyrim制作的&quot;小众&quot;mods和一些C# UWP Windows Store Apps，由于微软的战略不明确，从一天到另一天，我已经退休了。<p>我为什么写这个？ <p>我想独立于我的供应商的DNS服务器，因为他们在过去经常闪现问题，而不是正常运行，想通过DNS对抗审查制度，多一点隐私和自由回来，所以我花了很多精力和认真的态度建立了自己的Unbound Docker镜像。因为我认为这是值得的，所以我想与你分享我的努力。<p>我的生活告诉我，信任必须要赢得，你永远不知道什么被摆弄了，什么被篡改了。因此，这个图像完全是使用GitHub行动中的工作流在线构建的，使用了非常精简的Alpine Linux及其所有的安全功能，Unbound直接查询根区的本地副本，使用DNS区域传输（XFR）保持最新。<p>在构建过程中，Libevent 和 OpenSSL3 这两个独立的组件在各自的工作流程中被编译，所有的下载，甚至是 Internic 文件（root.hints 和 root.zone）都使用其 PGP 密钥和签名文件（如果有的话）进行检查，遵循我的零信任政策。Unbound是用大多数图像不包括的加固安全功能编译的，例如PIE（位置独立的可执行文件），它随机化应用程序在内存中的位置，使攻击更加困难，以及RELRO（重新定位只读），也可以减轻利用。<p>该图像实际上被设计为一个DNSSEC验证的上游DNS解析器，考虑到广告屏蔽和跟踪预防的Pi-hole，但它也能完美地作为一个独立的服务器。所有的Linux架构都被支持，目前Pi-hole使用的架构是：386、armv6、armv7、arm64和amd64。<p>我定期维护这个镜像，一旦包含的组件被更新，安全漏洞被发现，或者Unbound的更新被发布，这个镜像将在几个小时后在Docker注册表上为你提供。<p>如果有人想为开发做贡献，我很高兴收到你的拉动请求。<p>如果有任何建议、问题、评论甚至批评，非常欢迎你在HN或Mastodon上联系我（https://fosstodon. org/@madnuttah）。<p>这里是我的GitHub repo的链接：https://github.com/madnuttah/unbound-docker。<p>你可能会发现以下链接对测试你的DNS的安全性很有用，甚至在你想给图像做一个前后对比的情况下：<p>DNS泄漏测试：https://www.dnsleaktest.com/<p>杜伊斯堡大学-埃森的DNSSEC-测试：https://dnssec.vs.uni-due.de/<p>GRC的DNS名称服务器欺骗性测试：https://www.grc.com/dns/dns.htm<p>Cheers, madnuttah",
  "description_zh-Hant": "嘿，Hacker News！<p>我是madnuttah，我是一個Windows/Linux系統管理員，有些人可能記得這個用戶名，因為我為Fallout和Skyrim製作的&quot;小眾&quot;mods和一些C# UWP Windows Store Apps，由於微軟的戰略不明確，從一天到另一天，我已經退休了。<p>我為什麼寫這個？ <p>我想獨立於我的供應商的DNS服務器，因為他們在過去經常閃現問題，而不是正常運行，想通過DNS對抗審查制度，多一點隱私和自由回來，所以我花了很多精力和認真的態度建立了自己的Unbound Docker鏡像。因為我認為這是值得的，所以我想與你分享我的努力。<p>我的生活告訴我，信任必須要贏得，你永遠不知道什麼被擺弄了，什麼被篡改了。因此，這個圖像完全是使用GitHub行動中的工作流在線構建的，使用了非常精簡的Alpine Linux及其所有的安全功能，Unbound直接查詢根區的本地副本，使用DNS區域傳輸（XFR）保持最新。<p>在構建過程中，Libevent 和 OpenSSL3 這兩個獨立的組件在各自的工作流程中被編譯，所有的下載，甚至是 Internic 文件（root.hints 和 root.zone）都使用其 PGP 密鑰和簽名文件（如果有的話）進行檢查，遵循我的零信任政策。Unbound是用大多數圖像不包括的加固安全功能編譯的，例如PIE（位置獨立的可執行文件），它隨機化應用程序在內存中的位置，使攻擊更加困難，以及RELRO（重新定位只讀），也可以減輕利用。<p>該圖像實際上被設計為一個DNSSEC驗證的上游DNS解析器，考慮到廣告屏蔽和跟蹤預防的Pi-hole，但它也能完美地作為一個獨立的服務器。所有的Linux架構都被支持，目前Pi-hole使用的架構是：386、armv6、armv7、arm64和amd64。<p>我定期維護這個鏡像，一旦包含的組件被更新，安全漏洞被發現，或者Unbound的更新被髮布，這個鏡像將在幾個小時後在Docker註冊表上為你提供。<p>如果有人想為開發做貢獻，我很高興收到你的拉動請求。<p>如果有任何建議、問題、評論甚至批評，非常歡迎你在HN或Mastodon上聯繫我（https://fosstodon. org/@madnuttah）。<p>這裡是我的GitHub repo的鏈接：https://github.com/madnuttah/unbound-docker。<p>你可能會發現以下鏈接對測試你的DNS的安全性很有用，甚至在你想給圖像做一個前後對比的情況下：<p>DNS洩漏測試：https://www.dnsleaktest.com/<p>杜伊斯堡大學-埃森的DNSSEC-測試：https://dnssec.vs.uni-due.de/<p>GRC的DNS名稱服務器欺騙性測試：https://www.grc.com/dns/dns.htm<p>Cheers, madnuttah"
}