{
  "@type": "NewsArticle",
  "identifier": "2022--03--16--en--showhn--HackerNews--NewsArticle--30703392",
  "url": "https://news.ycombinator.com/item?id=30703392",
  "headline": "Show HN: Progress: a simple-text subtask progress standard",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hello,<p>Over the years I've repeatedly run into the problem that my projects end up outputting a <i>lot</i> of logging text, when running tests, when doing build steps, etc. But most of the logfile is uninteresting if the tests pass, the build steps succeed, etc. Normally the only interesting part is pass/fail and maybe how many subtasks were run.<p>I finally got around to extracting a text-based utility that makes this more standard. All of my projects now use it.<p>It's really simple. Every process or script that has a lot of steps simply outputs those steps in a standard format on specially-marked lines (beginning with ##), and then that output is piped a utility that parses those lines and displays up-to-date progress as the process runs. There are a lot of different modes, e.g. to output one character per subtask, one line, or to do all-in-one line interactive display.<p>I've found this very useful over the past several years and maybe others will too.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "titzer",
    "url": "https://news.ycombinator.com/user?id=titzer"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30703392",
  "sameAs": "https://github.com/titzer/progress",
  "dateCreated": "2022-03-16T20:11:44.264Z",
  "datePublished": "2022-03-16T20:08:35.000Z",
  "dateModified": "2022-03-16T20:11:44.264Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: 进度：一个简单的文本子任务进度标准",
  "headline_zh-Hant": "Show HN: 進度：一個簡單的文本子任務進度標準",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "你好，<p>多年来，我多次遇到这样的问题：我的项目在运行测试和构建步骤时，最终会输出很多<i></i>日志文本。但如果测试通过了，构建步骤成功了，等等，大部分日志文件都是无趣的。通常情况下，唯一有趣的部分是通过/失败，也许还有运行了多少个子任务。<p>我终于可以提取一个基于文本的实用程序，使之更加标准。现在我所有的项目都使用它。<p>它真的很简单。每个有很多步骤的进程或脚本都会以标准格式在特别标记的行中输出这些步骤（以 ## 开头），然后这些输出被输送到一个工具中，该工具会解析这些行并在进程运行时显示最新的进度。有很多不同的模式，例如，每一个子任务输出一个字符、一行，或者做一体化的行交互式显示。<p>在过去几年中，我发现这非常有用，也许其他人也会。",
  "description_zh-Hant": "你好，<p>多年來，我多次遇到這樣的問題：我的項目在運行測試和構建步驟時，最終會輸出很多<i></i>日誌文本。但如果測試通過了，構建步驟成功了，等等，大部分日誌文件都是無趣的。通常情況下，唯一有趣的部分是通過/失敗，也許還有運行了多少個子任務。<p>我終於可以提取一個基於文本的實用程序，使之更加標準。現在我所有的項目都使用它。<p>它真的很簡單。每個有很多步驟的進程或腳本都會以標準格式在特別標記的行中輸出這些步驟（以 ## 開頭），然後這些輸出被輸送到一個工具中，該工具會解析這些行並在進程運行時顯示最新的進度。有很多不同的模式，例如，每一個子任務輸出一個字符、一行，或者做一體化的行交互式顯示。<p>在過去幾年中，我發現這非常有用，也許其他人也會。"
}