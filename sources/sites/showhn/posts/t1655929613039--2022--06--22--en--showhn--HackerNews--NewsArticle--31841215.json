{
  "@type": "NewsArticle",
  "identifier": "2022--06--22--en--showhn--HackerNews--NewsArticle--31841215",
  "url": "https://news.ycombinator.com/item?id=31841215",
  "headline": "Show HN: Crocodile - Better code review for GitHub",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN!<p>I've been working on a code review app for GitHub called Crocodile for about a year. I used to work at Microsoft where we used a tool called CodeFlow for reviewing code and I missed it after I left. I know many other ex-Microsoft engineers feel the same. Here are some of the distinguishing features of Crocodile that are inspired by CodeFlow:<p>* Comments float above the code instead of being inline. Long discussions that are displayed inline make it really hard to review the code.\n* Comment on any text selection in the file, even a single character.\n* Comments don't get lost when code changes. I hate it when comments become &quot;outdated&quot; because I rebase or the line is edited.<p>I also implemented lots of features that I wish CodeFlow had which you can read more about on the blog. [1]<p>For those curious about the tech stack: it's mostly written in Go with Alpine.js, HTMX, and Tailwind CSS for the frontend. For storage I use PostgreSQL, S3 compatible object storage, and Redis for caching. I use Pulumi for infrastructure provisioning and Kubernetes deployments. Everything is hosted on DigitalOcean.<p>Feedback is welcome!<p>[1] <a href=\"https://www.crocodile.dev/blog/why-crocodile\" rel=\"nofollow\">https://www.crocodile.dev/blog/why-crocodile</a>",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "jameslao",
    "url": "https://news.ycombinator.com/user?id=jameslao"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31841215",
  "sameAs": "https://www.crocodile.dev/",
  "dateCreated": "2022-06-22T20:26:53.039Z",
  "datePublished": "2022-06-22T20:07:32.000Z",
  "dateModified": "2022-06-22T20:26:53.039Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Crocodile - 为GitHub提供更好的代码审查\n",
  "headline_zh-Hant": "Show HN: Crocodile - 為GitHub提供更好的代碼審查\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hi HN!<p>I've been working on a code review app for GitHub called Crocodile for about a year. I used to work at Microsoft where we used a tool called CodeFlow for reviewing code and I missed it after I left. I know many other ex-Microsoft engineers feel the same. Here are some of the distinguishing features of Crocodile that are inspired by CodeFlow:<p>* Comments float above the code instead of being inline. Long discussions that are displayed inline make it really hard to review the code.\n* Comment on any text selection in the file, even a single character.\n* Comments don't get lost when code changes. I hate it when comments become &quot;outdated&quot; because I rebase or the line is edited.<p>I also implemented lots of features that I wish CodeFlow had which you can read more about on the blog. [1]<p>For those curious about the tech stack: it's mostly written in Go with Alpine.js, HTMX, and Tailwind CSS for the frontend. For storage I use PostgreSQL, S3 compatible object storage, and Redis for caching. I use Pulumi for infrastructure provisioning and Kubernetes deployments. Everything is hosted on DigitalOcean.<p>Feedback is welcome!<p>[1] <a href=\"https://www.crocodile.dev/blog/why-crocodile\" rel=\"nofollow\">https://www.crocodile.dev/blog/why-crocodile</a>\n",
  "description_zh-Hant": "Hi HN!<p>I've been working on a code review app for GitHub called Crocodile for about a year. I used to work at Microsoft where we used a tool called CodeFlow for reviewing code and I missed it after I left. I know many other ex-Microsoft engineers feel the same. Here are some of the distinguishing features of Crocodile that are inspired by CodeFlow:<p>* Comments float above the code instead of being inline. Long discussions that are displayed inline make it really hard to review the code.\n* Comment on any text selection in the file, even a single character.\n* Comments don't get lost when code changes. I hate it when comments become &quot;outdated&quot; because I rebase or the line is edited.<p>I also implemented lots of features that I wish CodeFlow had which you can read more about on the blog. [1]<p>For those curious about the tech stack: it's mostly written in Go with Alpine.js, HTMX, and Tailwind CSS for the frontend. For storage I use PostgreSQL, S3 compatible object storage, and Redis for caching. I use Pulumi for infrastructure provisioning and Kubernetes deployments. Everything is hosted on DigitalOcean.<p>Feedback is welcome!<p>[1] <a href=\"https://www.crocodile.dev/blog/why-crocodile\" rel=\"nofollow\">https://www.crocodile.dev/blog/why-crocodile</a>\n"
}