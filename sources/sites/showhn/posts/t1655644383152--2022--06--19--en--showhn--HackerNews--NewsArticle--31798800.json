{
  "@type": "NewsArticle",
  "identifier": "2022--06--19--en--showhn--HackerNews--NewsArticle--31798800",
  "url": "https://news.ycombinator.com/item?id=31798800",
  "headline": "Show HN: Fourplay.fun – A Cooperative Word Game",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I built this websocket game with the intent of learning the actor model with Actix, and getting better with Rust. The front end is made with Svelte, though I'm not really a frontend person, so if you poke around it's bound to be clunky. I've tested it with with Chrome, Firefox and Android, but not iOS or Safari. If you find errors with those, I'd appreciate a quick note.<p>I have yet to clean up the frontend, but you can find the backend source <a href=\"https://github.com/kilroyjones/game-server\" rel=\"nofollow\">https://github.com/kilroyjones/game-server</a>, if you're curious. This could have been built with socket.io, but who doesn't want to spend more than double the time building a higher performance server to push around 100 bytes of JSON?<p>The game is cooperative because I enjoy cooperative play more than competition, and wanted to build something that pushed people to work together. There's no in-game communication, so you really need to pay attention to what your teammates are doing.<p>If you want to see what the game is like, but players aren't there, you can load up four windows and it'll work fine as well.<p>Advice, comments and criticism are welcome.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "markles",
    "url": "https://news.ycombinator.com/user?id=markles"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31798800",
  "sameAs": "https://fourplay.fun/",
  "dateCreated": "2022-06-19T13:13:03.152Z",
  "datePublished": "2022-06-19T12:47:40.000Z",
  "dateModified": "2022-06-19T13:13:03.152Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Fourplay.fun - 一个合作的文字游戏\n",
  "headline_zh-Hant": "Show HN: Fourplay.fun - 一個合作的文字遊戲\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "I built this websocket game with the intent of learning the actor model with Actix, and getting better with Rust. The front end is made with Svelte, though I'm not really a frontend person, so if you poke around it's bound to be clunky. I've tested it with with Chrome, Firefox and Android, but not iOS or Safari. If you find errors with those, I'd appreciate a quick note.<p>I have yet to clean up the frontend, but you can find the backend source <a href=\"https://github.com/kilroyjones/game-server\" rel=\"nofollow\">https://github.com/kilroyjones/game-server</a>, if you're curious. This could have been built with socket.io, but who doesn't want to spend more than double the time building a higher performance server to push around 100 bytes of JSON?<p>The game is cooperative because I enjoy cooperative play more than competition, and wanted to build something that pushed people to work together. There's no in-game communication, so you really need to pay attention to what your teammates are doing.<p>If you want to see what the game is like, but players aren't there, you can load up four windows and it'll work fine as well.<p>Advice, comments and criticism are welcome.\n",
  "description_zh-Hant": "I built this websocket game with the intent of learning the actor model with Actix, and getting better with Rust. The front end is made with Svelte, though I'm not really a frontend person, so if you poke around it's bound to be clunky. I've tested it with with Chrome, Firefox and Android, but not iOS or Safari. If you find errors with those, I'd appreciate a quick note.<p>I have yet to clean up the frontend, but you can find the backend source <a href=\"https://github.com/kilroyjones/game-server\" rel=\"nofollow\">https://github.com/kilroyjones/game-server</a>, if you're curious. This could have been built with socket.io, but who doesn't want to spend more than double the time building a higher performance server to push around 100 bytes of JSON?<p>The game is cooperative because I enjoy cooperative play more than competition, and wanted to build something that pushed people to work together. There's no in-game communication, so you really need to pay attention to what your teammates are doing.<p>If you want to see what the game is like, but players aren't there, you can load up four windows and it'll work fine as well.<p>Advice, comments and criticism are welcome.\n"
}