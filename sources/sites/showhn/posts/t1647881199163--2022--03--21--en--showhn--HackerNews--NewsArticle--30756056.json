{
  "@type": "NewsArticle",
  "identifier": "2022--03--21--en--showhn--HackerNews--NewsArticle--30756056",
  "url": "https://news.ycombinator.com/item?id=30756056",
  "headline": "Show HN: Generic functional library for Go, inspired by Kotlin collection API",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "https://github.com/luraim/fun<p>With the release of go 1.18 we have exp/slices and exp/maps modules, but they are not as rich as the Kotlin collection library which has been a real pleasure to use.<p>This module attempts to provide simple functions to reduce boilerplate and make the intent of code clearer, not push a full &quot;functional programming&quot; approach, as some other libraries have tried to.<p>The following functions are supported:All, Any, Associate, Chunked, Distinct, DistinctBy, Drop, DropLast, DropWhile, DropLastWhile, Filter, FilterIndexed, Fold, FoldIndexed, GroupBy, Map, MapIndexed, Partition, Reduce, ReduceIndexed, Reverse, Reversed, Take, TakeLast, TakeWhile, TakeLastWhile, Windowed",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "yyammka",
    "url": "https://news.ycombinator.com/user?id=yyammka"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30756056",
  "sameAs": "https://news.ycombinator.com/item?id=30756056",
  "dateCreated": "2022-03-21T16:46:39.163Z",
  "datePublished": "2022-03-21T16:29:04.000Z",
  "dateModified": "2022-03-21T16:46:39.163Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Go的通用函数式库，灵感来自于Kotlin集合API",
  "headline_zh-Hant": "Show HN: Go的通用函數式庫，靈感來自於Kotlin集合API",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "https://github.com/luraim/fun<p>随着go 1.18的发布，我们有了exp/slices和exp/maps模块，但它们没有Kotlin集合库那么丰富，而Kotlin集合库的使用是非常愉快的。<p>本模块试图提供简单的函数来减少模板，使代码的意图更加清晰，而不是像其他一些库所尝试的那样，推行完全的&quot;函数式编程&quot;方法。 <p>支持以下函数：All, Any, Associate, Chunked, Distinct, DistinctBy, Drop, DropLast, DropWhile, DropLastWhile, Filter, FilterIndexed, Fold, FoldIndexed, GroupBy, Map, MapIndexed, Partition, Reduce, ReduceIndexed, Reverse, Reversed, Take, TakeLast, TakeWhile, TakeLastWhile, Windowed",
  "description_zh-Hant": "https://github.com/luraim/fun<p>隨著go 1.18的發佈，我們有了exp/slices和exp/maps模塊，但它們沒有Kotlin集合庫那麼豐富，而Kotlin集合庫的使用是非常愉快的。<p>本模塊試圖提供簡單的函數來減少模板，使代碼的意圖更加清晰，而不是像其他一些庫所嘗試的那樣，推行完全的&quot;函數式編程&quot;方法。 <p>支持以下函數：All, Any, Associate, Chunked, Distinct, DistinctBy, Drop, DropLast, DropWhile, DropLastWhile, Filter, FilterIndexed, Fold, FoldIndexed, GroupBy, Map, MapIndexed, Partition, Reduce, ReduceIndexed, Reverse, Reversed, Take, TakeLast, TakeWhile, TakeLastWhile, Windowed"
}