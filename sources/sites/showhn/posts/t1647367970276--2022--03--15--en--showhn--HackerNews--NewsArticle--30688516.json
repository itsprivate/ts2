{
  "@type": "NewsArticle",
  "identifier": "2022--03--15--en--showhn--HackerNews--NewsArticle--30688516",
  "url": "https://news.ycombinator.com/item?id=30688516",
  "headline": "Show HN: Fast subdomain enumerator written in Rust",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hello!<p>I'm learning Rust and also information security, so what better way to learn than to put a tool together practicing both skills?<p>I've tried to use a couple of different tools for subdomain enumeration (part of the Discovery-party when it comes to penetration testing), but none of them were very fast, even if the DNS resolver I pointed them towards is, so I wrote my own tool that leverages concurrency to check a lot of subdomains, fast!<p>It's written in Rust, main parts being using Tokio and async_channels, and I think it works good enough for a first release. I wanted to get recursive subdomain enumeration to work too, but couldn't figure out how to send into the same channels I'm reading from and knowing when to close the actual channels. Will work on that next!<p>If you want to check out the project, it's located here: <a href=\"https://github.com/Esc4iCEscEsc/skanuvaty\" rel=\"nofollow\">https://github.com/Esc4iCEscEsc/skanuvaty</a><p>I'd love your feedback on the code, idea or anything in general! Usually people here have very good feedback, so I'm excited to hear what you think.<p>Thank you!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "chockchocschoir",
    "url": "https://news.ycombinator.com/user?id=chockchocschoir"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30688516",
  "sameAs": "https://github.com/Esc4iCEscEsc/skanuvaty",
  "dateCreated": "2022-03-15T18:12:50.276Z",
  "datePublished": "2022-03-15T17:51:25.000Z",
  "dateModified": "2022-03-15T18:12:50.276Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: 用Rust编写的快速子域枚举器",
  "headline_zh-Hant": "Show HN: 用Rust編寫的快速子域枚舉器",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "你好！<p>我正在学习Rust，同时也在学习信息安全，那么还有什么比把一个工具放在一起练习两种技能更好的学习方式呢？ <p>我曾尝试使用几个不同的工具来进行子域枚举（当涉及到渗透测试时，是发现方的一部分），但它们都不是非常快，即使我指向的DNS解析器也是如此，所以我自己写了一个工具，利用并发性来检查大量的子域，速度很快！<p>它是用Rust写的，主要部分是使用Tokio和async_channels，我认为它对于第一个版本来说工作得足够好。I wanted to get recursive subdomain enumeration to work too, but couldn't figure out how to send into the same channels I'm reading from and knowing when to close the actual channels. Will work on that next!<p>If you want to check out the project, it's located here: <a href=\"https://github.com/Esc4iCEscEsc/skanuvaty\" rel=\"nofollow\">https://github.com/Esc4iCEscEsc/skanuvaty</a><p>I'd love your feedback on the code, idea or anything in general! 通常这里的人都有很好的反馈，所以我很想听听你的想法。<p>谢谢你!",
  "description_zh-Hant": "你好！<p>我正在學習Rust，同時也在學習信息安全，那麼還有什麼比把一個工具放在一起練習兩種技能更好的學習方式呢？ <p>我曾嘗試使用幾個不同的工具來進行子域枚舉（當涉及到滲透測試時，是發現方的一部分），但它們都不是非常快，即使我指向的DNS解析器也是如此，所以我自己寫了一個工具，利用併發性來檢查大量的子域，速度很快！<p>它是用Rust寫的，主要部分是使用Tokio和async_channels，我認為它對於第一個版本來說工作得足夠好。I wanted to get recursive subdomain enumeration to work too, but couldn't figure out how to send into the same channels I'm reading from and knowing when to close the actual channels. Will work on that next!<p>If you want to check out the project, it's located here: <a href=\"https://github.com/Esc4iCEscEsc/skanuvaty\" rel=\"nofollow\">https://github.com/Esc4iCEscEsc/skanuvaty</a><p>I'd love your feedback on the code, idea or anything in general! 通常這裡的人都有很好的反饋，所以我很想聽聽你的想法。<p>謝謝你!"
}