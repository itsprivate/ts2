{
  "@type": "NewsArticle",
  "identifier": "2022--07--12--en--showhn--HackerNews--NewsArticle--32069418",
  "url": "https://news.ycombinator.com/item?id=32069418",
  "headline": "Show HN: We are trying to (finally) get tail-calls into the WebAssembly standard",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "WebAssembly is a modern bytecode supported by all browsers and designed to be a compiler target for a wide variety of programming languages.<p>To effectively support some forms of Functional Programming support for tail-calls has been proposed as an extension to the WebAssembly standard.<p>This proposal has reached Phase3 of the standardization process years ago, but has since stalled.<p>Phase3 is known as &quot;the implementation phase&quot; and the prerequisite for advancing the proposal to Phase4 is to have support in two different browser engines. V8/Chrome support has been available for a long time, so another engine is required.<p>To unblock this situation we have contributed full support for WebAssembly Tail Calls to JavaScript/WebKit/Safari. The PR is available here:<p>https://github.com/WebKit/WebKit/pull/2065<p>An in-depth article about the challenges of implementing this feature is also available. This is intended both as documentation for our contribution, but also as a general explainer about how tails calls actually work, with a particular focus on stack space management.<p>https://leaningtech.com/fantastic-tail-calls-and-how-to-implement-them/",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "apignotti",
    "url": "https://news.ycombinator.com/user?id=apignotti"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32069418",
  "sameAs": "https://news.ycombinator.com/item?id=32069418",
  "dateCreated": "2022-07-12T13:47:59.589Z",
  "datePublished": "2022-07-12T13:14:23.000Z",
  "dateModified": "2022-07-12T13:47:59.589Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: 我们正在努力（最终）将尾部调用纳入WebAssembly标准中\n",
  "headline_zh-Hant": "Show HN: 我們正在努力（最終）將尾部調用納入WebAssembly標準中\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "<p>为了有效地支持某些形式的函数式编程，对尾部调用的支持已被提议作为WebAssembly标准的扩展。<p>这一提议在几年前已达到标准化进程的第三阶段，但后来停滞不前。<p>第三阶段被称为&quot;实施阶段&quot;，将提议推进到第四阶段的前提条件是在两个不同的浏览器引擎中获得支持。<p>为了解除这种情况，我们已经贡献了对WebAssembly Tail Calls对JavaScript/WebKit/Safari的全面支持。该PR可在此获得：<p>https://github.com/WebKit/WebKit/pull/2065<p>一篇关于实现该功能的挑战的深入文章也可获得。这篇文章既是我们贡献的文档，也是关于尾部调用如何实际工作的一般解释，特别是关于堆栈空间管理。<p>https://leaningtech.com/fantastic-tail-calls-and-how-to-implement-them/\n",
  "description_zh-Hant": "<p>為了有效地支持某些形式的函數式編程，對尾部調用的支持已被提議作為WebAssembly標準的擴展。<p>這一提議在幾年前已達到標準化進程的第三階段，但後來停滯不前。<p>第三階段被稱為&quot;實施階段&quot;，將提議推進到第四階段的前提條件是在兩個不同的瀏覽器引擎中獲得支持。<p>為了解除這種情況，我們已經貢獻了對WebAssembly Tail Calls對JavaScript/WebKit/Safari的全面支持。該PR可在此獲得：<p>https://github.com/WebKit/WebKit/pull/2065<p>一篇關於實現該功能的挑戰的深入文章也可獲得。這篇文章既是我們貢獻的文檔，也是關於尾部調用如何實際工作的一般解釋，特別是關於堆棧空間管理。<p>https://leaningtech.com/fantastic-tail-calls-and-how-to-implement-them/\n"
}