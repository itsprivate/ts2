{
  "@type": "NewsArticle",
  "identifier": "2022--04--14--en--showhn--HackerNews--NewsArticle--31029841",
  "url": "https://news.ycombinator.com/item?id=31029841",
  "headline": "Show HN: HacheQL, a lightweight library to make GraphQL requests HTTP-cacheable",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hey all, I'd like to share something I've been working on for a while: HacheQL.<p>HacheQL is a developer library and NPM package that makes it possible to cache GraphQL queries and responses with the http caching mechanism built into browsers and the proxy infrastructure of the web.<p>It's open source, compatible with whatever graphql infrastructure you've already implemented, and is scalable and performant.<p>To set it up, just import and use our middleware along the GraphQL route in your server's code. Then wrap any http requests you wish to cache in the provided client function. If you have an extensive codebase, you don't need to transition all at once - using just the middleware won't give any caching benefits, but it won't alter your application's behavior.<p>You can see our source, and detailed documentation, here: https://github.com/oslabs-beta/hacheQL , and we are on npm here: https://www.npmjs.com/package/hacheql.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "jtorsella",
    "url": "https://news.ycombinator.com/user?id=jtorsella"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31029841",
  "sameAs": "https://news.ycombinator.com/item?id=31029841",
  "dateCreated": "2022-04-14T17:17:13.437Z",
  "datePublished": "2022-04-14T17:06:29.000Z",
  "dateModified": "2022-04-14T17:17:13.437Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: HacheQL，一个轻量级的库，使GraphQL请求可被HTTP缓存。",
  "headline_zh-Hant": "Show HN: HacheQL，一個輕量級的庫，使GraphQL請求可被HTTP緩存。",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嘿，大家好，我想和大家分享一下我已经工作了一段时间的东西。HacheQL.<p>HacheQL是一个开发者库和NPM包，它可以通过浏览器和网络代理基础设施中的http缓存机制来缓存GraphQL查询和响应。<p>它是开源的，与你已经实现的任何graphql基础设施兼容，并且是可扩展和高性能的。然后将你希望缓存的任何http请求包裹在提供的客户端函数中。如果你有一个广泛的代码库，你不需要一下子过渡--只使用中间件不会带来任何缓存的好处，但它不会改变你的应用程序的行为。<p>你可以在这里看到我们的源代码和详细的文档：https://github.com/oslabs-beta/hacheQL，我们在npm上：https://www.npmjs.com/package/hacheql。",
  "description_zh-Hant": "嘿，大家好，我想和大家分享一下我已經工作了一段時間的東西。HacheQL.<p>HacheQL是一個開發者庫和NPM包，它可以通過瀏覽器和網絡代理基礎設施中的http緩存機制來緩存GraphQL查詢和響應。<p>它是開源的，與你已經實現的任何graphql基礎設施兼容，並且是可擴展和高性能的。然後將你希望緩存的任何http請求包裹在提供的客戶端函數中。如果你有一個廣泛的代碼庫，你不需要一下子過渡--只使用中間件不會帶來任何緩存的好處，但它不會改變你的應用程序的行為。<p>你可以在這裡看到我們的源代碼和詳細的文檔：https://github.com/oslabs-beta/hacheQL，我們在npm上：https://www.npmjs.com/package/hacheql。"
}