{
  "@type": "NewsArticle",
  "identifier": "2022--03--01--en--showhn--HackerNews--NewsArticle--30514782",
  "url": "https://news.ycombinator.com/item?id=30514782",
  "headline": "Show HN: Atlas Connex – A tool for simplifying systems integration",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN,<p>Avid reader here, never a poster - til today. I've built Atlas Connex and wanted to show it off and hear what you've got to say!<p>What's it do/what's it for?<p>It's a SaaS/IaaS tool meant for taking the burden off engineering teams when integrating disparate networked systems.<p>For example, you need to build some continuous, event-driven ETL type data flow, but you can't modify the source and/or destination systems or it's a pain to do so, Atlas Connex is meant to plug in here.<p>It can accept data from any source type (HTTP requests, MQTT topics, polled APIs, etc.) route it through a series of filters and transformers (which either make decisions about dropping the payload altogether or massage/format the data) and then send it on to a destination, which can be a multitude of endpoint types and formats as well. Delivery is done via managed queues which can be paused, throttled, etc., so unreliable endpoints are not dropping data, they are just queued up for later delivery.<p>The idea is that a team only needs to write a small piece of Python code (which is the filter language) and define a route to get a reliable data flow up and running. Whether it's a fan-in (many sources to one destination) topology or fan-out (the other way 'round) the platform is meant to unburden teams with the &quot;getting the data there&quot; part so they can focus on using that data in automation, building real value, etc.<p>I'd love to hear any and all feedback, from first impressions, to anyone who will give the system a test run and give technical feedback, let me know!<p>Lastly, thanks HN for being an awesome place for makers, builders, and tech folks!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "jcal93",
    "url": "https://news.ycombinator.com/user?id=jcal93"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30514782",
  "sameAs": "https://atlasconnex.com/",
  "dateCreated": "2022-03-01T14:51:14.436Z",
  "datePublished": "2022-03-01T14:47:24.000Z",
  "dateModified": "2022-03-01T14:51:14.436Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Atlas Connex - 简化系统集成的工具",
  "headline_zh-Hant": "Show HN: Atlas Connex - 簡化系統集成的工具",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hi HN,<p>这里是热心的读者，从未发过帖子--直到今天。我已经建立了Atlas Connex，并想展示它，听听你的意见！<p>它是做什么的？<p>它是一个SaaS/IaaS工具，旨在整合不同的网络系统时减轻工程团队的负担。<p>例如，你需要建立一些连续的、事件驱动的ETL类型的数据流，但你不能修改源和/或目标系统，或者这样做很麻烦，Atlas Connex就是为了插在这里。 <p>它可以接受来自任何源类型的数据（HTTP请求、MQTT主题、轮询API等），通过一系列的过滤器和转换器（这些过滤器和转换器可以决定完全放弃有效载荷或对数据进行按摩/格式化），然后将其发送到一个目的地，这也可以是多种终端类型和格式。交付是通过管理队列完成的，可以暂停、节流等，所以不可靠的端点不会放弃数据，它们只是被排队等待以后交付。<p>这个想法是，一个团队只需要写一小段Python代码（这是过滤器语言），并定义一个路由，以获得可靠的数据流并运行。无论它是一个扇形输入（许多来源到一个目的地）拓扑结构还是扇形输出（反过来），该平台都是为了减轻团队的负担，让他们能够专注于在自动化中使用这些数据，建立真正的价值，等等。 <p>我很想听到任何和所有的反馈，从第一印象，到任何愿意给系统进行测试并提供技术反馈的人，让我知道！<p>最后，感谢HN成为创客、建设者和技术人士的一个很棒的地方",
  "description_zh-Hant": "Hi HN,<p>這裡是熱心的讀者，從未發過帖子--直到今天。我已經建立了Atlas Connex，並想展示它，聽聽你的意見！<p>它是做什麼的？<p>它是一個SaaS/IaaS工具，旨在整合不同的網絡系統時減輕工程團隊的負擔。<p>例如，你需要建立一些連續的、事件驅動的ETL類型的數據流，但你不能修改源和/或目標系統，或者這樣做很麻煩，Atlas Connex就是為了插在這裡。 <p>它可以接受來自任何源類型的數據（HTTP請求、MQTT主題、輪詢API等），通過一系列的過濾器和轉換器（這些過濾器和轉換器可以決定完全放棄有效載荷或對數據進行按摩/格式化），然後將其發送到一個目的地，這也可以是多種終端類型和格式。交付是通過管理隊列完成的，可以暫停、節流等，所以不可靠的端點不會放棄數據，它們只是被排隊等待以後交付。<p>這個想法是，一個團隊只需要寫一小段Python代碼（這是過濾器語言），並定義一個路由，以獲得可靠的數據流並運行。無論它是一個扇形輸入（許多來源到一個目的地）拓撲結構還是扇形輸出（反過來），該平臺都是為了減輕團隊的負擔，讓他們能夠專注於在自動化中使用這些數據，建立真正的價值，等等。 <p>我很想聽到任何和所有的反饋，從第一印象，到任何願意給系統進行測試並提供技術反饋的人，讓我知道！<p>最後，感謝HN成為創客、建設者和技術人士的一個很棒的地方"
}