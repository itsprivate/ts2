{
  "@type": "NewsArticle",
  "identifier": "2022--03--01--en--showhn--HackerNews--NewsArticle--30518335",
  "url": "https://news.ycombinator.com/item?id=30518335",
  "headline": "Show HN: Duckly – Cross-IDE real-time code sharing with video call",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hello HN! This is Thiago and Dragos from Duckly (YC S20) (https://duckly.com). Duckly is an IDE plugin for VSCode and IntelliJ that enables developers to talk and share their code in real-time with people using a different IDE.<p>We have been working together remotely since 2019 and we were surprised about how hard it was for doing simple collaborative tasks. Like helping a colleague debug something. We also found it interesting to watch skilled people working and naturally as product builders, we were particularly interested in watching developers working. We knew the rubber duck debugging methodology so we decided to build this product that would enable you to share yourself coding live. We called it GitDuck — like after doing a git commit, you would record a short video explaining your code using the command git duck. We launched this on HN https://news.ycombinator.com/item?id=20895084.<p>That was interesting, but we were still facing the same issues when trying to collaborate internally. It was still hard to get help from somebody else. We decided to focus on private collaboration and make it possible for people to collaborate in real-time. That was a big change, as previously we had built a streaming platform and an IDE plugin that was linking the code to the video timestamps. In this new iteration, we had to build a video calling app connected to the IDE plugin that would enable people to share and edit code while on a call. Btw, that happened while going through YC. You can see this version launch here https://news.ycombinator.com/item?id=24228826.<p>The video calling part was built using Daily.co and we built a new IDE plugin that would share the code P2P with other call participants using CRDTs. Building that was quite challenging and we had to be very careful when propagating changes between all participants to avoid the code getting out of sync.<p>A frequent feedback that we received from our users is that it was troublesome to talk using the web, while code sharing on the IDE. That everything would be better if you could actually talk inside of the IDE. The hard part of doing this is that we couldn’t rely on the IDEs for managing the audio and video. For example, while building the first live streaming iteration, we learned that the IDEs were often killing the extension running in the background. Another challenge is how we could offer this feature in the future for other IDEs like Eclipse, vim, or Sublime. Some of these didn’t even have the UI or the APIs for supporting such features. We decided to use an electron app and make the IDE communicate and control it. You talk using this native app, but that is launched and controlled by your IDE.<p>And yes, we are going to support other IDEs, but we don’t want to port until we are satisfied with the existing experience.<p>Server sharing was another interesting use case that we wanted to solve. It enables you to share any local open port with other people. We create a tunnel with a temporary URL and people can access it by going to that URL. We use socket.io under the hoods to be able to do it.<p>And that’s what we are launching now! This version of Duckly works entirely on the IDE so developers can talk and share their code without using anything else. The code is shared P2P, with IntelliSense support, and you can collaborate with people using a different IDE than you. We are naturally excited about this launch, but we still need to provide support for Terminal, chat and port to other IDEs. We will address this later.<p>Duckly has 3 plans, a free plan that allows you to talk up to 45min with one person. A Developer plan ($6/month) that you can talk unlimited with up to 3 people simultaneously or the Team plan ($10/member/month) that is basically unlimited on all fronts.<p>We would love to hear your feedback. How do you do when you need to collaborate remotely? Do you use any traditional video call like Zoom with screen sharing or do you use something else?",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "borisandcrispin",
    "url": "https://news.ycombinator.com/user?id=borisandcrispin"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30518335",
  "sameAs": "https://news.ycombinator.com/item?id=30518335",
  "dateCreated": "2022-03-01T19:10:28.023Z",
  "datePublished": "2022-03-01T18:53:40.000Z",
  "dateModified": "2022-03-01T19:10:28.023Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Duckly - 跨IDE实时代码共享与视频通话",
  "headline_zh-Hant": "Show HN: Duckly - 跨IDE實時代碼共享與視頻通話",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "你好，HN! 我是来自Duckly（YC S20）的Thiago和Dragos（https://duckly.com）。Duckly是VSCode和IntelliJ的IDE插件，它使开发人员能够与使用不同IDE的人实时交谈和分享他们的代码。<p>我们从2019年开始一起远程工作，我们对做简单的协作任务是多么困难感到惊讶。比如帮助同事调试一些东西。我们还发现观察熟练的人工作很有趣，作为产品建设者，我们自然对观察开发人员工作特别感兴趣。我们知道橡皮鸭的调试方法，所以我们决定建立这个产品，让你能够现场分享自己的编码。我们称之为GitDuck--比如在做完git提交后，你会录制一个简短的视频，用git duck命令解释你的代码。我们在HN https://news.ycombinator.com/item?id=20895084 上推出了这个产品。<p>这很有趣，但我们在试图进行内部协作时仍然面临同样的问题。要从别人那里得到帮助还是很困难的。我们决定把重点放在私人协作上，使人们有可能进行实时协作。这是一个很大的变化，因为之前我们已经建立了一个流媒体平台和一个IDE插件，将代码与视频的时间戳联系起来。在这个新的迭代中，我们必须建立一个连接到IDE插件的视频通话应用，使人们能够在通话中分享和编辑代码。Btw，这是在通过YC时发生的。你可以在这里看到这个版本的发布 https://news.ycombinator.com/item?id=24228826。<p>视频通话部分是用Daily.co建立的，我们建立了一个新的IDE插件，可以使用CRDTs与其他通话参与者分享代码的P2P。<p>我们从用户那里经常收到的一个反馈是，在IDE上进行代码共享时，使用网络通话很麻烦。如果你能在集成开发环境内进行交谈，一切都会变得更好。这样做的困难之处在于，我们不能依靠IDE来管理音频和视频。例如，在建立第一个实时流媒体迭代时，我们了解到IDE经常会杀死在后台运行的扩展。另一个挑战是我们如何在未来为其他IDE如Eclipse、vim或Sublime提供这一功能。其中一些甚至没有支持这种功能的用户界面或API。我们决定使用一个电子应用程序，并让IDE与之沟通和控制。你使用这个本地应用程序进行交谈，但它是由你的IDE启动和控制的。<p>是的，我们将支持其他IDE，但在我们对现有的经验感到满意之前，我们不想移植。<p>服务器共享是我们想要解决的另一个有趣的用例。它使你能够与其他人共享任何本地开放端口。我们用一个临时的URL创建一个隧道，人们可以通过去那个URL访问它。我们在引擎盖下使用socket.io，以便能够做到这一点。<p>这就是我们现在推出的东西! 这个版本的Duckly完全在IDE上工作，所以开发者可以在不使用任何其他东西的情况下谈论和分享他们的代码。代码是P2P共享的，支持IntelliSense，你可以与使用不同IDE的人进行合作。我们对这次推出自然很兴奋，但我们仍然需要提供对终端、聊天和移植到其他IDE的支持。我们将在以后解决这个问题。<p>Duckly有3个计划，一个免费计划，允许你与一个人最多交谈45分钟。开发者计划（6美元/月），你可以同时与3个人无限制地交谈，或者团队计划（10美元/会员/月），基本上在所有方面都是无限制的。<p>我们希望听到你的反馈。当你需要进行远程协作时，你是怎么做的？你是否使用任何传统的视频电话，如带有屏幕共享的Zoom，或者你使用其他东西？",
  "description_zh-Hant": "你好，HN! 我是來自Duckly（YC S20）的Thiago和Dragos（https://duckly.com）。Duckly是VSCode和IntelliJ的IDE插件，它使開發人員能夠與使用不同IDE的人實時交談和分享他們的代碼。<p>我們從2019年開始一起遠程工作，我們對做簡單的協作任務是多麼困難感到驚訝。比如幫助同事調試一些東西。我們還發現觀察熟練的人工作很有趣，作為產品建設者，我們自然對觀察開發人員工作特別感興趣。我們知道橡皮鴨的調試方法，所以我們決定建立這個產品，讓你能夠現場分享自己的編碼。我們稱之為GitDuck--比如在做完git提交後，你會錄製一個簡短的視頻，用git duck命令解釋你的代碼。我們在HN https://news.ycombinator.com/item?id=20895084 上推出了這個產品。<p>這很有趣，但我們在試圖進行內部協作時仍然面臨同樣的問題。要從別人那裡得到幫助還是很困難的。我們決定把重點放在私人協作上，使人們有可能進行實時協作。這是一個很大的變化，因為之前我們已經建立了一個流媒體平臺和一個IDE插件，將代碼與視頻的時間戳聯繫起來。在這個新的迭代中，我們必須建立一個連接到IDE插件的視頻通話應用，使人們能夠在通話中分享和編輯代碼。Btw，這是在通過YC時發生的。你可以在這裡看到這個版本的發佈 https://news.ycombinator.com/item?id=24228826。<p>視頻通話部分是用Daily.co建立的，我們建立了一個新的IDE插件，可以使用CRDTs與其他通話參與者分享代碼的P2P。<p>我們從用戶那裡經常收到的一個反饋是，在IDE上進行代碼共享時，使用網絡通話很麻煩。如果你能在集成開發環境內進行交談，一切都會變得更好。這樣做的困難之處在於，我們不能依靠IDE來管理音頻和視頻。例如，在建立第一個實時流媒體迭代時，我們瞭解到IDE經常會殺死在後臺運行的擴展。另一個挑戰是我們如何在未來為其他IDE如Eclipse、vim或Sublime提供這一功能。其中一些甚至沒有支持這種功能的用戶界面或API。我們決定使用一個電子應用程序，並讓IDE與之溝通和控制。你使用這個本地應用程序進行交談，但它是由你的IDE啟動和控制的。<p>是的，我們將支持其他IDE，但在我們對現有的經驗感到滿意之前，我們不想移植。<p>服務器共享是我們想要解決的另一個有趣的用例。它使你能夠與其他人共享任何本地開放端口。我們用一個臨時的URL創建一個隧道，人們可以通過去那個URL訪問它。我們在引擎蓋下使用socket.io，以便能夠做到這一點。<p>這就是我們現在推出的東西! 這個版本的Duckly完全在IDE上工作，所以開發者可以在不使用任何其他東西的情況下談論和分享他們的代碼。代碼是P2P共享的，支持IntelliSense，你可以與使用不同IDE的人進行合作。我們對這次推出自然很興奮，但我們仍然需要提供對終端、聊天和移植到其他IDE的支持。我們將在以後解決這個問題。<p>Duckly有3個計劃，一個免費計劃，允許你與一個人最多交談45分鐘。開發者計劃（6美元/月），你可以同時與3個人無限制地交談，或者團隊計劃（10美元/會員/月），基本上在所有方面都是無限制的。<p>我們希望聽到你的反饋。當你需要進行遠程協作時，你是怎麼做的？你是否使用任何傳統的視頻電話，如帶有屏幕共享的Zoom，或者你使用其他東西？"
}