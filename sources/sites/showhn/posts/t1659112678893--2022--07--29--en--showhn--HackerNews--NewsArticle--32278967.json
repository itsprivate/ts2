{
  "@type": "NewsArticle",
  "identifier": "2022--07--29--en--showhn--HackerNews--NewsArticle--32278967",
  "url": "https://news.ycombinator.com/item?id=32278967",
  "headline": "Show HN: Kurynt – The last tool you will ever need to manage third party code",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I built Kurynt after numerous and repeated headaches maintaining multiple codebases with innumerable dependencies. Many developers know that sinking feeling every time they inherit a codebase where many packages are long outdated and in need of updates or upgrades. Kurynt is the solution to this problem by rapidly giving you an overview of how far behind you are on all packages used by your codebase.<p>In my opinion, Kurynt is a step above 'dumb' tools like Snyk or Dependabot, which simply create a pull request on your repository on your code with the latest version changes in your package manager. How many of us have honestly immediately merged those changes? I never have, because I know it takes time to review the content of the upgraded packages, review breaking changes, actually install the new packages, and then finally, test the entire codebase to ensure the suggested upgrades are working as suggested.<p>Kurynt seeks to bring intelligence to third-party code management and upgrades. Kurynt can summarize and identify the most critical raised GitHub issues, run sentiment analysis to determine the most cryptic or confusing bugs, and much more. I hope you'll consider giving Kurynt a test drive!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "fullstackchris",
    "url": "https://news.ycombinator.com/user?id=fullstackchris"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32278967",
  "sameAs": "https://kurynt.com",
  "dateCreated": "2022-07-29T16:37:58.893Z",
  "datePublished": "2022-07-29T16:28:08.000Z",
  "dateModified": "2022-07-29T16:37:58.893Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Kurynt - 你最后需要的管理第三方代码的工具\n",
  "headline_zh-Hant": "Show HN: Kurynt - 你最後需要的管理第三方代碼的工具\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我是在无数次头痛地维护具有无数依赖关系的多个代码库之后建立Kurynt的。许多开发者都知道，每当他们继承了一个代码库，其中许多软件包早已过时，需要更新或升级时，就会有一种沉甸甸的感觉。在我看来，Kurynt比Snyk或Dependabot这样的 \"哑巴 \"工具更胜一筹，它们只是在你的代码库上创建一个拉动请求，并在你的软件包管理器中显示最新的版本变化。我们中有多少人诚实地立即合并了这些变化？我从来没有，因为我知道需要花时间审查升级包的内容，审查破坏性的变化，实际安装新的包，然后最后测试整个代码库，以确保建议的升级按建议进行。<p>Kurynt试图为第三方代码管理和升级带来智能。Kurynt可以总结和识别最关键的GitHub问题，运行情感分析以确定最隐蔽或最混乱的bug，以及更多。我希望你能考虑试一试Kurynt!\n",
  "description_zh-Hant": "我是在無數次頭痛地維護具有無數依賴關係的多個代碼庫之後建立Kurynt的。許多開發者都知道，每當他們繼承了一個代碼庫，其中許多軟件包早已過時，需要更新或升級時，就會有一種沉甸甸的感覺。在我看來，Kurynt比Snyk或Dependabot這樣的 \"啞巴 \"工具更勝一籌，它們只是在你的代碼庫上創建一個拉動請求，並在你的軟件包管理器中顯示最新的版本變化。我們中有多少人誠實地立即合併了這些變化？我從來沒有，因為我知道需要花時間審查升級包的內容，審查破壞性的變化，實際安裝新的包，然後最後測試整個代碼庫，以確保建議的升級按建議進行。<p>Kurynt試圖為第三方代碼管理和升級帶來智能。Kurynt可以總結和識別最關鍵的GitHub問題，運行情感分析以確定最隱蔽或最混亂的bug，以及更多。我希望你能考慮試一試Kurynt!\n"
}