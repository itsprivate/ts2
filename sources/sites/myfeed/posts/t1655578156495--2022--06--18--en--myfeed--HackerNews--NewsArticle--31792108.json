{
  "@type": "NewsArticle",
  "identifier": "2022--06--18--en--myfeed--HackerNews--NewsArticle--31792108",
  "url": "https://news.ycombinator.com/item?id=31792108",
  "headline": "Show HN: Remove Silence from Videos with Ffmpeg",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "There was recently a Show HN for a program that lets one remove silence from video files [0]. I was almost certain that ffmpeg could do this...<p>But after searching for it, it turned out I was wrong: ffmpeg can't do this out of the box, and also can't read input from an EDL file [1].<p>So I set out to write a solution, as simple as possible: produce a list of select filters that are applied to video and audio, and retain only the non-silent parts.<p>The 'silencedetect' audio filter detects silences, and produces timestamps for when silences start and end. So one can pipe the output of that to a Python script, that builds an ffmpeg command with the appropriate select filters.<p>The resulting ffmpeg command can be run to re-encode the video without the silent parts.<p>Hope this helps.<p>- - -<p>Notes:<p>1/ I did find something somewhat similar to what I ended up doing [2], but it's complicated, and does the video encoding inside of Python. Granted, moviepy uses ffmpeg under the hood, but it's still better if ffmpeg does all the encoding directly.<p>2/ This solution doesn't produce a myriad of intermediary files that it would recombine afterwards; there is just one encoding of the output video file. 'silencedetect' is very fast, so all in all running this should be pretty fast.<p>[0] <a href=\"https://news.ycombinator.com/item?id=31767830\" rel=\"nofollow\">https://news.ycombinator.com/item?id=31767830</a><p>[1] <a href=\"https://en.wikipedia.org/wiki/Edit_decision_list\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Edit_decision_list</a><p>[2] <a href=\"https://donaldfeury.xyz/remove-the-silent-parts-of-a-video-using-ffmpeg-and-python/\" rel=\"nofollow\">https://donaldfeury.xyz/remove-the-silent-parts-of-a-video-u...</a>",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "bambax",
    "url": "https://news.ycombinator.com/user?id=bambax"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31792108",
  "sameAs": "https://github.com/bambax/Remsi",
  "dateCreated": "2022-06-18T18:49:16.495Z",
  "datePublished": "2022-06-18T17:51:11.000Z",
  "dateModified": "2022-06-18T18:49:16.495Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Show HN: 用Ffmpeg去除视频中的静音\n",
  "headline_zh-Hant": "Show HN: 用Ffmpeg去除視頻中的靜音\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "There was recently a Show HN for a program that lets one remove silence from video files [0]. I was almost certain that ffmpeg could do this...<p>But after searching for it, it turned out I was wrong: ffmpeg can't do this out of the box, and also can't read input from an EDL file [1]. <p>So I set out to write a solution, as simple as possible: produce a list of select filters that are applied to video and audio, and retain only the non-silent parts.<p>The 'silencedetect' audio filter detects silences, and produces timestamps for when silences start and end. So one can pipe the output of that to a Python script, that builds an ffmpeg command with the appropriate select filters.<p>The resulting ffmpeg command can be run to re-encode the video without the silent parts.<p>Hope this helps.<p>- - -<p>Notes:<p>1/ I did find something somewhat similar to what I ended up doing [2], but it's complicated, and does the video encoding inside of Python. Granted, moviepy uses ffmpeg under the hood, but it's still better if ffmpeg does all the encoding directly.<p>2/ This solution doesn't produce a myriad of intermediary files that it would recombine afterwards; there is just one encoding of the output video file. 'silencedetect' is very fast, so all in all running this should be pretty fast.<p>[0] <a href=\"https://news.ycombinator.com/item?id=31767830\" rel=\"nofollow\">https://news.ycombinator.com/item?id=31767830</a><p>[1] <a href=\"https://en.wikipedia.org/wiki/Edit_decision_list\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Edit_decision_list</a><p>[2] <a href=\"https://donaldfeury.xyz/remove-the-silent-parts-of-a-video-using-ffmpeg-and-python/\" rel=\"nofollow\">https://donaldfeury.xyz/remove-the-silent-parts-of-a-video-u...</a>\n",
  "description_zh-Hant": "There was recently a Show HN for a program that lets one remove silence from video files [0]. I was almost certain that ffmpeg could do this...<p>But after searching for it, it turned out I was wrong: ffmpeg can't do this out of the box, and also can't read input from an EDL file [1]. <p>So I set out to write a solution, as simple as possible: produce a list of select filters that are applied to video and audio, and retain only the non-silent parts.<p>The 'silencedetect' audio filter detects silences, and produces timestamps for when silences start and end. So one can pipe the output of that to a Python script, that builds an ffmpeg command with the appropriate select filters.<p>The resulting ffmpeg command can be run to re-encode the video without the silent parts.<p>Hope this helps.<p>- - -<p>Notes:<p>1/ I did find something somewhat similar to what I ended up doing [2], but it's complicated, and does the video encoding inside of Python. Granted, moviepy uses ffmpeg under the hood, but it's still better if ffmpeg does all the encoding directly.<p>2/ This solution doesn't produce a myriad of intermediary files that it would recombine afterwards; there is just one encoding of the output video file. 'silencedetect' is very fast, so all in all running this should be pretty fast.<p>[0] <a href=\"https://news.ycombinator.com/item?id=31767830\" rel=\"nofollow\">https://news.ycombinator.com/item?id=31767830</a><p>[1] <a href=\"https://en.wikipedia.org/wiki/Edit_decision_list\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Edit_decision_list</a><p>[2] <a href=\"https://donaldfeury.xyz/remove-the-silent-parts-of-a-video-using-ffmpeg-and-python/\" rel=\"nofollow\">https://donaldfeury.xyz/remove-the-silent-parts-of-a-video-u...</a>\n"
}