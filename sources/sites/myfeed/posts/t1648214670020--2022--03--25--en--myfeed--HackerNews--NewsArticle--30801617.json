{
  "@type": "NewsArticle",
  "identifier": "2022--03--25--en--myfeed--HackerNews--NewsArticle--30801617",
  "url": "https://news.ycombinator.com/item?id=30801617",
  "headline": "Show HN: Managing HTTP Headers in Pipy",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "When applications are running behind using some sort of proxy, there is often a need to make the applications aware that they are running behind a proxy, and often there is a need to manage request and response headers in the proxy. Pipy is an open source network stream processor and it handles the lower-level details and provides an event driven interface to developers. Pipy decodes incoming network streams into streams of events and makes them available to developers. Pipy’s versatile nature allows it to be used in use cases like HTTP forward proxy, reverse proxy, socks proxy. In this article we will look at how to manage HTTP headers in Pipy and see how Pipy makes it easy to manage, modify, and add HTTP headers.\nMore details, please refer to https://blog.flomesh.io/managing-http-headers-in-pipy-a259ba501822",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "shaderx13",
    "url": "https://news.ycombinator.com/user?id=shaderx13"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30801617",
  "sameAs": "https://news.ycombinator.com/item?id=30801617",
  "dateCreated": "2022-03-25T13:24:30.020Z",
  "datePublished": "2022-03-25T13:01:49.000Z",
  "dateModified": "2022-03-25T13:24:30.020Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: 在Pipy中管理HTTP头信息",
  "headline_zh-Hant": "Show HN: 在Pipy中管理HTTP頭信息",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "当应用程序在使用某种代理后面运行时，往往需要使应用程序意识到它们在代理后面运行，而且往往需要在代理中管理请求和响应头。Pipy是一个开源的网络流处理器，它处理低级别的细节，并为开发者提供一个事件驱动接口。Pipy将传入的网络流解码为事件流，并将其提供给开发者。Pipy的通用性使它可以用于HTTP正向代理、反向代理、袜子代理等使用情况。在这篇文章中，我们将研究如何在Pipy中管理HTTP头，看看Pipy如何使管理、修改和添加HTTP头变得简单。\n更多细节，请参考https://blog.flomesh.io/managing-http-headers-in-pipy-a259ba501822",
  "description_zh-Hant": "當應用程序在使用某種代理後面運行時，往往需要使應用程序意識到它們在代理後面運行，而且往往需要在代理中管理請求和響應頭。Pipy是一個開源的網絡流處理器，它處理低級別的細節，併為開發者提供一個事件驅動接口。Pipy將傳入的網絡流解碼為事件流，並將其提供給開發者。Pipy的通用性使它可以用於HTTP正向代理、反向代理、襪子代理等使用情況。在這篇文章中，我們將研究如何在Pipy中管理HTTP頭，看看Pipy如何使管理、修改和添加HTTP頭變得簡單。\n更多細節，請參考https://blog.flomesh.io/managing-http-headers-in-pipy-a259ba501822"
}