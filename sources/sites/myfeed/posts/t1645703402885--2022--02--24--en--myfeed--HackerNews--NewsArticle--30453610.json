{
  "@type": "NewsArticle",
  "identifier": "2022--02--24--en--myfeed--HackerNews--NewsArticle--30453610",
  "url": "https://news.ycombinator.com/item?id=30453610",
  "headline": "How do mid/late stage developers learn new languages/frameworks?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Recently came across two publications by ACM:<p>https://cacm.acm.org/magazines/2022/3/258914-technical-perspective-how-do-experts-learn-new-programming-languages/fulltext<p>https://cacm.acm.org/magazines/2022/3/258915-here-we-go-again/fulltext<p>(the first link references the second so one could start with the second link)<p>I have around 7 years or XP now, and have switched roles between the Java/Spring ecosystem to .NET and am now struggling with Ruby and Rails.<p>Before reading this article, I, too, thought that programming languages and frameworks are just tools, and that if you know the basics of one, you can easily switch between them. In practice, however, I have found that to not be true. Also, while learning new languages/frameworks is hard, it's twice as hard to do it on the job, where there is added pressure of delivering work items while paralleling learning things.<p>What are some techniques seasoned developers use to quickly pick up new languages and frameworks? And how do you juggle expectations with your bosses on delivery while you're doing this learning?",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "shikharraje",
    "url": "https://news.ycombinator.com/user?id=shikharraje"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30453610",
  "sameAs": "https://news.ycombinator.com/item?id=30453610",
  "dateCreated": "2022-02-24T11:50:02.885Z",
  "datePublished": "2022-02-24T11:40:31.000Z",
  "dateModified": "2022-02-24T11:50:02.885Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 1
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "中/后期的开发人员如何学习新的语言/框架？",
  "headline_zh-Hant": "中/後期的開發人員如何學習新的語言/框架？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "最近看到ACM的两份出版物：<p>https://cacm.acm.org/magazines/2022/3/258914-technical-perspective-how-do-experts-learn-new-programming-languages/fulltext<p>https://cacm.acm.org/magazines/2022/3/258915-here-we-go-again/fulltext<p>（第一个链接引用了第二个链接，所以可以从第二个链接开始）<p>我现在有7年左右的时间或XP，在Java/Spring生态系统和.NET之间转换了角色，现在正在努力学习Ruby和Rails。<p>在阅读这篇文章之前，我也认为编程语言和框架只是工具，如果你知道其中的基础知识，你可以轻易地在它们之间切换。然而，在实践中，我发现事实并非如此。此外，虽然学习新的语言/框架很难，但在工作中学习会加倍困难，因为在学习的同时还要交付工作项目，压力更大。<p>经验丰富的开发人员使用哪些技巧来快速掌握新的语言和框架？你是如何在学习过程中兼顾与老板的期望值的呢？",
  "description_zh-Hant": "最近看到ACM的兩份出版物：<p>https://cacm.acm.org/magazines/2022/3/258914-technical-perspective-how-do-experts-learn-new-programming-languages/fulltext<p>https://cacm.acm.org/magazines/2022/3/258915-here-we-go-again/fulltext<p>（第一個鏈接引用了第二個鏈接，所以可以從第二個鏈接開始）<p>我現在有7年左右的時間或XP，在Java/Spring生態系統和.NET之間轉換了角色，現在正在努力學習Ruby和Rails。<p>在閱讀這篇文章之前，我也認為編程語言和框架只是工具，如果你知道其中的基礎知識，你可以輕易地在它們之間切換。然而，在實踐中，我發現事實並非如此。此外，雖然學習新的語言/框架很難，但在工作中學習會加倍困難，因為在學習的同時還要交付工作項目，壓力更大。<p>經驗豐富的開發人員使用哪些技巧來快速掌握新的語言和框架？你是如何在學習過程中兼顧與老闆的期望值的呢？"
}