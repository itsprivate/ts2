{
  "@type": "NewsArticle",
  "identifier": "2022--08--05--en--myfeed--HackerNews--NewsArticle--32358132",
  "url": "https://news.ycombinator.com/item?id=32358132",
  "headline": "Granularity of Serverless Functions",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi,<p>i primarily use FaaS (like az functions, lambdas) really just for small, lightweight functions with a somewhat self-contained functionality - usually for events on queues etc. In the past, however, i came across quite a few different libs that would theoretically allow me to host entire apis/webapps within just a single lambda - for instance for some lightweight python stuff like flask.<p>so i was wondering what is the typical granularity people use these days in their azure functions, lambdas etc. Is there anyone who really deploys entire APIs inside a single lambda, what's the benefit of this or is this widely considered an anti pattern?<p>best,\npon",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "ponninho",
    "url": "https://news.ycombinator.com/user?id=ponninho"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32358132",
  "sameAs": "https://news.ycombinator.com/item?id=32358132",
  "dateCreated": "2022-08-05T17:14:45.951Z",
  "datePublished": "2022-08-05T16:10:35.000Z",
  "dateModified": "2022-08-05T17:14:45.951Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "无服务器功能的颗粒度\n",
  "headline_zh-Hant": "無服務器功能的顆粒度\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嗨，<p>我主要使用FaaS（如az函数、lambdas），实际上只是用于具有某种独立功能的小型、轻量级的函数--通常用于队列上的事件等。然而，在过去，我遇到了一些不同的lib，理论上允许我在一个lambda中托管整个apis/webapp--例如一些轻量级的python东西，如flask。<p>所以我想知道现在人们在他们的azure函数、lambdas等中使用的典型颗粒度是什么。有没有人真的在单个lambda中部署整个API，这样做有什么好处，或者这被广泛认为是一种反模式？\npon\n",
  "description_zh-Hant": "嗨，<p>我主要使用FaaS（如az函數、lambdas），實際上只是用於具有某種獨立功能的小型、輕量級的函數--通常用於隊列上的事件等。然而，在過去，我遇到了一些不同的lib，理論上允許我在一個lambda中託管整個apis/webapp--例如一些輕量級的python東西，如flask。<p>所以我想知道現在人們在他們的azure函數、lambdas等中使用的典型顆粒度是什麼。有沒有人真的在單個lambda中部署整個API，這樣做有什麼好處，或者這被廣泛認為是一種反模式？\npon\n"
}