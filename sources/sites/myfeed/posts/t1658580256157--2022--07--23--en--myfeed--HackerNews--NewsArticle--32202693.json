{
  "@type": "NewsArticle",
  "identifier": "2022--07--23--en--myfeed--HackerNews--NewsArticle--32202693",
  "url": "https://news.ycombinator.com/item?id=32202693",
  "headline": "I made a small browser extension framework",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I made a small framework to build browser extensions with Typescript and React: &quot;VFE&quot; (I have no creativity).\nIt's more focused on hacking/modding things, this is the reason why it supports 'natively' page script(a script that runs directly on the web page allowing you to do hooks and whatever you want on the page).\nCurrently it supports cross browser build(chrome/firefox), automatic extension reload on file changes and allows you to customize webpack configuration(add plugins and so on).\nThe current goal is to make some API to facilitate request rewriting and communication between the scripts if you don't want to put all the logic on only one of them.\nTo create a project you can follow the repo readme, it's only 1 command :)<p>Repo link: https://github.com/vanflux/vf-ext<p>Recently I made a jstris bot extension using the framework, you can checkout it here: https://github.com/vanflux/jstetris-bot<p>Could this be useful to you? What can I improve on that framework? What features could be good to have?",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "vanflux",
    "url": "https://news.ycombinator.com/user?id=vanflux"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32202693",
  "sameAs": "https://news.ycombinator.com/item?id=32202693",
  "dateCreated": "2022-07-23T12:44:16.157Z",
  "datePublished": "2022-07-23T12:28:46.000Z",
  "dateModified": "2022-07-23T12:44:16.157Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "我做了一个小的浏览器扩展框架\n",
  "headline_zh-Hant": "我做了一個小的瀏覽器擴展框架\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我做了一个小框架，用Typescript和React构建浏览器扩展：&quot;VFE&quot;（我没有创造力）。\n它更专注于黑客/修改东西，这就是为什么它支持 \"原生 \"页面脚本（一种直接在网页上运行的脚本，允许你在页面上做钩子和任何你想要的东西）。\n目前，它支持跨浏览器构建（chrome/firefox），在文件变化时自动重新加载扩展，并允许你自定义webpack配置（添加插件等）。\n目前的目标是制作一些API来促进请求重写和脚本之间的通信，如果你不想把所有的逻辑只放在其中一个脚本上。\n要创建一个项目，你可以按照repo的readme来做，只有一个命令:)<p>Repo链接：https://github.com/vanflux/vf-ext<p>最近我用这个框架做了一个jstris机器人的扩展，你可以在这里查看：https://github.com/vanflux/jstetris-bot<p>这对你有用吗？我可以在该框架上改进什么？有什么功能是好的？\n",
  "description_zh-Hant": "我做了一個小框架，用Typescript和React構建瀏覽器擴展：&quot;VFE&quot;（我沒有創造力）。\n它更專注於黑客/修改東西，這就是為什麼它支持 \"原生 \"頁面腳本（一種直接在網頁上運行的腳本，允許你在頁面上做鉤子和任何你想要的東西）。\n目前，它支持跨瀏覽器構建（chrome/firefox），在文件變化時自動重新加載擴展，並允許你自定義webpack配置（添加插件等）。\n目前的目標是製作一些API來促進請求重寫和腳本之間的通信，如果你不想把所有的邏輯只放在其中一個腳本上。\n要創建一個項目，你可以按照repo的readme來做，只有一個命令:)<p>Repo鏈接：https://github.com/vanflux/vf-ext<p>最近我用這個框架做了一個jstris機器人的擴展，你可以在這裡查看：https://github.com/vanflux/jstetris-bot<p>這對你有用嗎？我可以在該框架上改進什麼？有什麼功能是好的？\n"
}