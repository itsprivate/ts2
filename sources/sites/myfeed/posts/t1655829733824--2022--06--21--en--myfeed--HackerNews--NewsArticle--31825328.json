{
  "@type": "NewsArticle",
  "identifier": "2022--06--21--en--myfeed--HackerNews--NewsArticle--31825328",
  "url": "https://news.ycombinator.com/item?id=31825328",
  "headline": "Show HN: UnionML – a Python framework for building ML microservices",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN!<p>Niels here. I'm the creator of <i>UnionML</i> (https://github.com/unionai-oss/unionml), a Python MLOps framework that removes the boilerplate and friction associated with building and deploying machine learning systems to production.<p>I've been training and deploying models for almost a decade now, and one pain-point I've consistently had is managing the complexity of building and maintaining an ML stack that works for the entire model development lifecycle - from prototyping to production.<p>UnionML is built on top of Flyte (https://www.flyte.org) and exposes a functional interface for defining the building blocks of your ML application via decorators -- think Flask or FastAPI method endpoints -- and UnionML takes care of bundling them into microservices for different use cases such as:<p>- model training<p>- batch prediction<p>- online prediction<p>- (more coming soon!)<p>This project aims to unify the rich ecosystem of data, ML, and MLOps tools that have emerged over the last decade or so (e.g. MLFlow, Sagemaker, Spark, etc.) to provide a nice UX for model developers, in both individual and team settings.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "cosmicbboy",
    "url": "https://news.ycombinator.com/user?id=cosmicbboy"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31825328",
  "sameAs": "https://news.ycombinator.com/item?id=31825328",
  "dateCreated": "2022-06-21T16:42:13.824Z",
  "datePublished": "2022-06-21T15:50:29.000Z",
  "dateModified": "2022-06-21T16:42:13.824Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 10
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 3
    }
  ],
  "headline_zh-Hans": "Show HN: UnionML - 构建ML微服务的Python框架\n",
  "headline_zh-Hant": "Show HN: UnionML - 構建ML微服務的Python框架\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hi HN!<p>Niels here. I'm the creator of <i>UnionML</i> (https://github.com/unionai-oss/unionml), a Python MLOps framework that removes the boilerplate and friction associated with building and deploying machine learning systems to production.<p>I've been training and deploying models for almost a decade now, and one pain-point I've consistently had is managing the complexity of building and maintaining an ML stack that works for the entire model development lifecycle - from prototyping to production.<p>UnionML is built on top of Flyte (https://www.flyte. org) and exposes a functional interface for defining the building blocks of your ML application via decorators -- think Flask or FastAPI method endpoints -- and UnionML takes care of bundling them into microservices for different use cases such as:<p>- model training<p>- batch prediction<p>- online prediction<p>- (more coming soon! )<p>This project aims to unify the rich ecosystem of data, ML, and MLOps tools that have emerged over the last decade or so (e.g. MLFlow, Sagemaker, Spark, etc.) to provide a nice UX for model developers, in both individual and team settings.\n",
  "description_zh-Hant": "Hi HN!<p>Niels here. I'm the creator of <i>UnionML</i> (https://github.com/unionai-oss/unionml), a Python MLOps framework that removes the boilerplate and friction associated with building and deploying machine learning systems to production.<p>I've been training and deploying models for almost a decade now, and one pain-point I've consistently had is managing the complexity of building and maintaining an ML stack that works for the entire model development lifecycle - from prototyping to production.<p>UnionML is built on top of Flyte (https://www.flyte. org) and exposes a functional interface for defining the building blocks of your ML application via decorators -- think Flask or FastAPI method endpoints -- and UnionML takes care of bundling them into microservices for different use cases such as:<p>- model training<p>- batch prediction<p>- online prediction<p>- (more coming soon! )<p>This project aims to unify the rich ecosystem of data, ML, and MLOps tools that have emerged over the last decade or so (e.g. MLFlow, Sagemaker, Spark, etc.) to provide a nice UX for model developers, in both individual and team settings.\n"
}