{
  "@type": "NewsArticle",
  "identifier": "2022--03--02--en--myfeed--HackerNews--NewsArticle--30527757",
  "url": "https://news.ycombinator.com/item?id=30527757",
  "headline": "Launch HN: Courier (YC S19) – Developer infrastructure for product notifications",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN! I’m Troy, the founder of Courier (<a href=\"https://www.courier.com\" rel=\"nofollow\">https://www.courier.com</a>). Courier replaces all the extra work developers have had to do to add different notification channels—email, browser, mobile, SMS, chat, etc.—to their product.<p>I'm an engineer and have been in engineering leadership for a long time. I kept seeing my teams spending hundreds or thousands of hours building notification infrastructure on top of messaging APIs to solve for common use cases, and it really just felt like a missing abstraction layer to me.<p>At one point we were building a chat feature for our product and just wanted the ability to let Bob @mention Alice and have it get intelligently pushed either in-app, via mobile push, or email—something Slack does well. As we dug into it we discovered how expensive it is to roll-your-own. Companies like Airbnb have dozens of engineers that work only on this part of their infrastructure! We realized it was going to take way more work than we could justify, so I went to Twilio, AWS, et al asking if I could buy a solution and learned that that just didn't exist. Somebody needed to create it.<p>Most product companies rebuild the same notification infrastructure on top of services like Twilio, Postmark, APNS/Firebase, etc. Those pipes are great, but there is significant complexity in scheduling notifications, templating, retrying, and so on. Courier gives developers higher-level abstractions that make it fast to develop robust notifications, and much cheaper to maintain moving forward.<p>Courier has been heavily inspired by a now-famous article by Slack’s engineering team about how they decide when (and how) to send a notification to a user using a complicated state-chart [0], as well as a post by LinkedIn’s engineering team on their own notification infrastructure [1].  We make all of that possible for teams and products of any size. Our YC pitch was &quot;Segment for notifications.&quot;<p>Our customers plug in their existing messaging providers for the channels they want to notify customers on (e.g. Postmark or SendGrid for email, Twilio or MessageBird for SMS, etc.) They then call the Courier API which is able to correctly respect users' preferences, route a message to the “best” channel for a user, schedule messages to send seconds or months later, synchronize state across email and app inboxes, have a consistent template design experience for engineers and non-engineers on their team, ensure robust delivery at scale, and more.<p>A core focus for us from day one has been templating, something I think most developers have been frustrated by. We of course let you use your existing template code, but we also give you the ability to use our cross-channel JSON specification [2] or have both developers and non-technical teammates build templates for any channel using our drag and drop editor. In the latter cases, we use an abstract syntax tree under the hood to then render your message to the right format for each channel/provider combination – e.g. HTML for email and BlockKit for Slack.<p>Courier is free to sign up for and send up to 10,000 notifications each month – no credit card required. We offer usage-based pricing if you need to remove our “Powered by Courier” branding or send a higher volume of messages.<p>Our team’s mission is to make software-to-human communication delightful, for both developers and for the users they are notifying – so we’d love to hear your experience from either side. Have you had to build internal notification micro-services? Is there anything really cool you wish would’ve been easier, or wish you saw more products offering? Are there apps or services that you wish were more delightful today?<p>[0]: <a href=\"https://slack.engineering/reducing-slacks-memory-footprint/\" rel=\"nofollow\">https://slack.engineering/reducing-slacks-memory-footprint/</a><p>[1]: <a href=\"https://engineering.linkedin.com/blog/2018/03/air-traffic-controller--member-first-notifications-at-linkedin\" rel=\"nofollow\">https://engineering.linkedin.com/blog/2018/03/air-traffic-co...</a><p>[2]: <a href=\"https://www.courier.com/docs/elemental/\" rel=\"nofollow\">https://www.courier.com/docs/elemental/</a>",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "troygoode",
    "url": "https://news.ycombinator.com/user?id=troygoode"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30527757",
  "sameAs": "https://www.courier.com/",
  "dateCreated": "2022-03-02T14:50:02.520Z",
  "datePublished": "2022-03-02T14:36:37.000Z",
  "dateModified": "2022-03-02T14:50:02.520Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 5
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 3
    }
  ],
  "headline_zh-Hans": "启动HN：信使（YC S19）--产品通知的开发者基础设施",
  "headline_zh-Hant": "啟動HN：信使（YC S19）--產品通知的開發者基礎設施",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "嗨，HN! 我是 Troy，Courier（<a href=\"https://www.courier.com\" rel=\"nofollow\">https://www.courier.com</a>）的创始人。Courier 可取代开发人员为在其产品中添加不同的通知渠道（电子邮件、浏览器、手机、短信、聊天等）而不得不做的所有额外工作。我一直看到我的团队花费了成百上千的时间在消息 API 的基础上构建通知基础设施，以解决常见的用例，而这对我来说真的是一个缺失的抽象层。<p>有一次，我们正在为我们的产品构建一个聊天功能，只是希望能够让 Bob @提及 Alice，并通过应用内、移动推送或电子邮件等方式智能地推送，这一点 Slack 做得很好。当我们深入研究时，我们发现自建的成本是多么高。像Airbnb这样的公司有几十个工程师只负责他们基础设施的这一部分！我们意识到，这需要花费大量的时间和精力。我们意识到，这将需要更多的工作，而不是我们所能证明的，所以我去找Twilio、AWS等公司，询问我是否可以购买一个解决方案，结果发现根本不存在。<p>大多数产品公司都在Twilio、Postmark、APNS/Firebase等服务之上重建相同的通知基础设施。这些管道很好，但在调度通知、模板化、重试等方面存在很大的复杂性。<p>Courier在很大程度上受到了Slack工程团队的启发，他们在文章中介绍了如何使用复杂的状态图来决定何时（以及如何）向用户发送通知[0]，以及LinkedIn工程团队关于其通知基础设施的文章[1]。 我们让任何规模的团队和产品都能做到这一切。我们在YC的宣传是&quot;Segment for notifications.&quot;<p>我们的客户为他们想要通知客户的渠道插入他们现有的消息提供者（例如，Postmark或SendGrid用于电子邮件，Twilio或MessageBird用于短信，等等。 然后他们调用Courier API，该API能够正确地尊重用户的偏好，将消息发送到用户的 \"最佳 \"渠道，安排消息在数秒或数月后发送，在电子邮件和应用程序收件箱中同步状态，为他们团队中的工程师和非工程师提供一致的模板设计体验，确保大规模的稳健交付，等等。我们当然允许你使用你现有的模板代码，但我们也让你能够使用我们的跨渠道JSON规范[2]，或者让开发人员和非技术团队成员使用我们的拖放编辑器为任何渠道建立模板。在后一种情况下，我们在引擎盖下使用抽象的语法树，然后为每个渠道/供应商的组合呈现你的信息的正确格式--例如，HTML用于电子邮件，BlockKit用于Slack。<p>Courier是免费注册的，每月最多发送10,000条通知--不需要信用卡。<p>我们团队的使命是让软件与人之间的沟通变得愉快，无论是对开发者还是对他们所通知的用户来说都是如此，所以我们很想听听你在这两方面的经验。你是否不得不建立内部通知的微服务？有没有什么非常酷的事情你希望能更容易，或者希望看到更多的产品提供？是否有一些应用程序或服务，你希望今天能更令人愉快？<p>[0]: <a href=\"https://slack.engineering/reducing-slacks-memory-footprint/\" rel=\"nofollow\">https://slack.engineering/reducing-slacks-memory-footprint/<p>[1]: <a href=\"https://engineering.linkedin.com/blog/2018/03/air-traffic-controller--member-first-notifications-at-linkedin\" rel=\"nofollow\">https://engineering.linkedin.com/blog/2018/03/air-traffic-co...</a><p>[2]: <a href=\"https://www.courier.com/docs/elemental/\" rel=\"nofollow\">https://www.courier.com/docs/elemental/</a>",
  "description_zh-Hant": "嗨，HN! 我是 Troy，Courier（<a href=\"https://www.courier.com\" rel=\"nofollow\">https://www.courier.com</a>）的創始人。Courier 可取代開發人員為在其產品中添加不同的通知渠道（電子郵件、瀏覽器、手機、短信、聊天等）而不得不做的所有額外工作。我一直看到我的團隊花費了成百上千的時間在消息 API 的基礎上構建通知基礎設施，以解決常見的用例，而這對我來說真的是一個缺失的抽象層。<p>有一次，我們正在為我們的產品構建一個聊天功能，只是希望能夠讓 Bob @提及 Alice，並通過應用內、移動推送或電子郵件等方式智能地推送，這一點 Slack 做得很好。當我們深入研究時，我們發現自建的成本是多麼高。像Airbnb這樣的公司有幾十個工程師只負責他們基礎設施的這一部分！我們意識到，這需要花費大量的時間和精力。我們意識到，這將需要更多的工作，而不是我們所能證明的，所以我去找Twilio、AWS等公司，詢問我是否可以購買一個解決方案，結果發現根本不存在。<p>大多數產品公司都在Twilio、Postmark、APNS/Firebase等服務之上重建相同的通知基礎設施。這些管道很好，但在調度通知、模板化、重試等方面存在很大的複雜性。<p>Courier在很大程度上受到了Slack工程團隊的啟發，他們在文章中介紹瞭如何使用複雜的狀態圖來決定何時（以及如何）向用戶發送通知[0]，以及LinkedIn工程團隊關於其通知基礎設施的文章[1]。 我們讓任何規模的團隊和產品都能做到這一切。我們在YC的宣傳是&quot;Segment for notifications.&quot;<p>我們的客戶為他們想要通知客戶的渠道插入他們現有的消息提供者（例如，Postmark或SendGrid用於電子郵件，Twilio或MessageBird用於短信，等等。 然後他們調用Courier API，該API能夠正確地尊重用戶的偏好，將消息發送到用戶的 \"最佳 \"渠道，安排消息在數秒或數月後發送，在電子郵件和應用程序收件箱中同步狀態，為他們團隊中的工程師和非工程師提供一致的模板設計體驗，確保大規模的穩健交付，等等。我們當然允許你使用你現有的模板代碼，但我們也讓你能夠使用我們的跨渠道JSON規範[2]，或者讓開發人員和非技術團隊成員使用我們的拖放編輯器為任何渠道建立模板。在後一種情況下，我們在引擎蓋下使用抽象的語法樹，然後為每個渠道/供應商的組合呈現你的信息的正確格式--例如，HTML用於電子郵件，BlockKit用於Slack。<p>Courier是免費註冊的，每月最多發送10,000條通知--不需要信用卡。<p>我們團隊的使命是讓軟件與人之間的溝通變得愉快，無論是對開發者還是對他們所通知的用戶來說都是如此，所以我們很想聽聽你在這兩方面的經驗。你是否不得不建立內部通知的微服務？有沒有什麼非常酷的事情你希望能更容易，或者希望看到更多的產品提供？是否有一些應用程序或服務，你希望今天能更令人愉快？<p>[0]: <a href=\"https://slack.engineering/reducing-slacks-memory-footprint/\" rel=\"nofollow\">https://slack.engineering/reducing-slacks-memory-footprint/<p>[1]: <a href=\"https://engineering.linkedin.com/blog/2018/03/air-traffic-controller--member-first-notifications-at-linkedin\" rel=\"nofollow\">https://engineering.linkedin.com/blog/2018/03/air-traffic-co...</a><p>[2]: <a href=\"https://www.courier.com/docs/elemental/\" rel=\"nofollow\">https://www.courier.com/docs/elemental/</a>"
}