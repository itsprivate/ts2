{
  "@type": "NewsArticle",
  "identifier": "2022--03--29--en--myfeed--HackerNews--NewsArticle--30837900",
  "url": "https://news.ycombinator.com/item?id=30837900",
  "headline": "SQLite autoincrement: good, bad, or in-between?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "The SQLite site gives advice to avoid autoincrement because it is slow.  The first sentence of this page says:<p>&quot;The AUTOINCREMENT keyword imposes extra CPU, memory, disk space, and disk I/O overhead and should be avoided if not strictly needed. It is usually not needed.&quot;<p>https://www.sqlite.org/autoinc.html<p>Since HashBackup (I'm the author) uses autoincrement on a few tables, I thought it would be a good idea to find out about its performance.<p>I ran 3 tests, all inserting 1M rows into a table with Python.<p>Test 1: insert using autoincrement.  Time: 2.36s,  25% slower than test 2<p>Test 2: insert using an increasing integer supplied on the insert.  Time: 1.89s, fastest<p>Test 3: insert using a null value - the recommended way.  Time: 2.73s, 44% slower than test 2<p>The SQlite autoincrement page says:<p>&quot;But if your application does not need these properties [of autoincrement], you should probably stay with the default behavior since the use of AUTOINCREMENT requires additional work to be done as each row is inserted and thus causes INSERTs to run a little slower.&quot;<p>What is surprising is that it doesn't spell out that inserts with no primary key specified run even slower than autoincrement inserts.<p>So I feel better knowing autoincrement is not so bad, no primary key specified is worse, but I could get a little speed-up specifying the key myself.",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "prirun",
    "url": "https://news.ycombinator.com/user?id=prirun"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30837900",
  "sameAs": "https://news.ycombinator.com/item?id=30837900",
  "dateCreated": "2022-03-29T04:56:26.147Z",
  "datePublished": "2022-03-29T02:03:05.000Z",
  "dateModified": "2022-03-29T04:56:26.147Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "SQLite自动增量：好，坏，还是介于两者之间？",
  "headline_zh-Hant": "SQLite自動增量：好，壞，還是介於兩者之間？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "SQLite网站给出的建议是避免自动递增，因为它很慢。 这个页面的第一句话说：<p>&quot;AUTOINCREMENT关键字会带来额外的CPU、内存、磁盘空间和磁盘I/O的开销，如果不是严格需要，应该避免使用。它通常是不需要的。<p>https://www.sqlite.org/autoinc.html<p>由于HashBackup（我是作者）在一些表上使用了自动递增，我认为找出它的性能是一个好主意。<p>我进行了3个测试，都是用Python向一个表插入100万行。<p>测试1：使用自动递增插入。 时间：2.36秒，比测试2慢25%<p>测试2：使用插入时提供的递增整数插入。 时间：1.89秒，最快<p>测试3：使用空值插入--推荐的方式。 时间：2.73s，比测试2慢44%<p>SQlite自动增量页面说：<p>&quot;但如果你的应用程序不需要这些属性[自动增量]，你可能应该保持默认行为，因为使用AUTOINCREMENT需要在每行插入时做额外的工作，从而导致INSERTs运行得慢一些。 &quot;<p>令人惊讶的是，它没有说明没有指定主键的插入比自动递增的插入运行得更慢。<p>所以我知道自动递增不是那么糟糕，没有指定主键更糟糕，但我可以通过自己指定键来获得一点速度。",
  "description_zh-Hant": "SQLite網站給出的建議是避免自動遞增，因為它很慢。 這個頁面的第一句話說：<p>&quot;AUTOINCREMENT關鍵字會帶來額外的CPU、內存、磁盤空間和磁盤I/O的開銷，如果不是嚴格需要，應該避免使用。它通常是不需要的。<p>https://www.sqlite.org/autoinc.html<p>由於HashBackup（我是作者）在一些表上使用了自動遞增，我認為找出它的性能是一個好主意。<p>我進行了3個測試，都是用Python向一個表插入100萬行。<p>測試1：使用自動遞增插入。 時間：2.36秒，比測試2慢25%<p>測試2：使用插入時提供的遞增整數插入。 時間：1.89秒，最快<p>測試3：使用空值插入--推薦的方式。 時間：2.73s，比測試2慢44%<p>SQlite自動增量頁面說：<p>&quot;但如果你的應用程序不需要這些屬性[自動增量]，你可能應該保持默認行為，因為使用AUTOINCREMENT需要在每行插入時做額外的工作，從而導致INSERTs運行得慢一些。 &quot;<p>令人驚訝的是，它沒有說明沒有指定主鍵的插入比自動遞增的插入運行得更慢。<p>所以我知道自動遞增不是那麼糟糕，沒有指定主鍵更糟糕，但我可以通過自己指定鍵來獲得一點速度。"
}