{
  "@type": "NewsArticle",
  "identifier": "2022--03--30--en--myfeed--HackerNews--NewsArticle--30858304",
  "url": "https://news.ycombinator.com/item?id=30858304",
  "headline": "Show HN: Code reviews intimidated me, so I built a course on how to master them",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I’m excited to share Master the Code Review: forge a better process, give better reviews, write better code.<p>It’s a video course with 4+ hours of content [1]. I’ve linked a 21-minute sample below [2].<p>6 years ago, I began my software engineering career at Amazon Web Services. I struggled with Pull Requests.  My authored PRs received many comments, sometimes 50+. They went through many revisions, sometimes 7+. I often shipped late. My reviews of other PRs were surface level and counterproductive.<p>Long story short: I improved. Through trial, error and experience I learned how to be effective in all 3 dimensions of code reviews: process, reviewer, and author.<p>I came to realize that there isn’t much information out there, giving developers actionable guidance to succeed in a code review environment. Doing so takes specific soft skills, social skills, and technical skills. Very few people talk about them.<p>Late 2020, I started writing about code reviews on my Medium, Twitter [3] and LinkedIn. I grew from 0 to almost 17K followers across platforms. The internet held me accountable for ambiguities and inaccuracies of my public writing. I learned a lot, and leveraged both positive and negative feedback to refine my ideas.<p>My writing experience gave me the confidence to build the course. I created it for my younger self, and I hope developers everywhere find it useful.<p>I launched it a month ago. So far there have been more than 650 students. I’ve received positive feedback from senior managers and principal engineers across big tech.<p>Happy to answer questions!<p>[1] Course: https://curtiseinsmann.gumroad.com/l/code-review-course<p>[2] Sample video — Writing effective code review comments: https://app.gumroad.com/s/90c67f7093db4dd0d544187b0a29bccf/vcisZ5CTogObOj95pBKvHQ==<p>[3] Example Twitter thread: https://twitter.com/curtiseinsmann/status/1317149417330364421?s=20&amp;t=q4gYZPN4BhXDrHtcTTiHmA",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "curtiseinsmann",
    "url": "https://news.ycombinator.com/user?id=curtiseinsmann"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30858304",
  "sameAs": "https://news.ycombinator.com/item?id=30858304",
  "dateCreated": "2022-03-30T17:49:54.489Z",
  "datePublished": "2022-03-30T17:34:30.000Z",
  "dateModified": "2022-03-30T17:49:54.489Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Show HN: 代码审查让我感到害怕，所以我建立了一个关于如何掌握它们的课程",
  "headline_zh-Hant": "Show HN: 代碼審查讓我感到害怕，所以我建立了一個關於如何掌握它們的課程",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我很高兴与大家分享《掌握代码审查：打造更好的流程，给出更好的审查，写出更好的代码》。<p>这是一个有4个多小时内容的视频课程[1]。我在下面链接了一个21分钟的样本[2]。<p>6年前，我在Amazon Web Services开始我的软件工程生涯。我在拉动请求中挣扎。 我撰写的PR收到很多评论，有时超过50条。他们经历了许多次修改，有时是7次以上。我经常延迟发货。我对其他PR的评论都是表面上的，而且起反作用。<p>长话短说：我有所改进。通过试验、错误和经验，我学会了如何在代码审查的所有3个方面都做到有效：过程、审查者和作者。<p>我开始意识到，外面没有多少信息可以为开发人员提供可操作的指导，以便在代码审查环境中取得成功。这样做需要特定的软技能、社交技能和技术技能。<p>2020年底，我开始在我的Medium、Twitter[3]和LinkedIn上写关于代码审查的文章。我在各平台上的粉丝从0增长到近17K。互联网让我对自己公开写作中的歧义和不准确之处负责任。我学到了很多，并利用积极和消极的反馈来完善我的想法。<p>我的写作经验给了我建立课程的信心。我为年轻的自己创造了它，我希望世界各地的开发者都能发现它的作用。<p>我在一个月前推出了它。到目前为止，已经有超过650名学生。我收到了来自大型科技公司的高级经理和主要工程师的积极反馈。<p>很高兴回答问题！<p>[1] 课程：https://curtiseinsmann.gumroad.com/l/code-review-course<p>[2] 示例视频--撰写有效的代码审查评论：https://app.gumroad.com/s/90c67f7093db4dd0d544187b0a29bccf/vcisZ5CTogObOj95pBKvHQ==<p>[3] 示例Twitter线程：https://twitter.com/curtiseinsmann/status/1317149417330364421?s=20&amp；t=q4gYZPN4BhXDrHtcTTiHmA",
  "description_zh-Hant": "我很高興與大家分享《掌握代碼審查：打造更好的流程，給出更好的審查，寫出更好的代碼》。<p>這是一個有4個多小時內容的視頻課程[1]。我在下面鏈接了一個21分鐘的樣本[2]。<p>6年前，我在Amazon Web Services開始我的軟件工程生涯。我在拉動請求中掙扎。 我撰寫的PR收到很多評論，有時超過50條。他們經歷了許多次修改，有時是7次以上。我經常延遲發貨。我對其他PR的評論都是表面上的，而且起反作用。<p>長話短說：我有所改進。通過試驗、錯誤和經驗，我學會了如何在代碼審查的所有3個方面都做到有效：過程、審查者和作者。<p>我開始意識到，外面沒有多少信息可以為開發人員提供可操作的指導，以便在代碼審查環境中取得成功。這樣做需要特定的軟技能、社交技能和技術技能。<p>2020年底，我開始在我的Medium、Twitter[3]和LinkedIn上寫關於代碼審查的文章。我在各平臺上的粉絲從0增長到近17K。互聯網讓我對自己公開寫作中的歧義和不準確之處負責任。我學到了很多，並利用積極和消極的反饋來完善我的想法。<p>我的寫作經驗給了我建立課程的信心。我為年輕的自己創造了它，我希望世界各地的開發者都能發現它的作用。<p>我在一個月前推出了它。到目前為止，已經有超過650名學生。我收到了來自大型科技公司的高級經理和主要工程師的積極反饋。<p>很高興回答問題！<p>[1] 課程：https://curtiseinsmann.gumroad.com/l/code-review-course<p>[2] 示例視頻--撰寫有效的代碼審查評論：https://app.gumroad.com/s/90c67f7093db4dd0d544187b0a29bccf/vcisZ5CTogObOj95pBKvHQ==<p>[3] 示例Twitter線程：https://twitter.com/curtiseinsmann/status/1317149417330364421?s=20&amp；t=q4gYZPN4BhXDrHtcTTiHmA"
}