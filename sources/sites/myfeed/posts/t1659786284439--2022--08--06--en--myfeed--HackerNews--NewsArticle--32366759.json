{
  "@type": "NewsArticle",
  "identifier": "2022--08--06--en--myfeed--HackerNews--NewsArticle--32366759",
  "url": "https://news.ycombinator.com/item?id=32366759",
  "headline": "Unpopular opinoin GraphQL kinda sucks",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Graphql is great, but is totally over hyped. This is probably more of a rant or a frustrated dev outburst.<p>but beginner to mid level developers are lead down the path of USE GRAPHQL especially on youtube... and this is just unfair and wrong.<p>The good:<p>- It makes working with describing the data you want easy<p>- It can save you bandwidth. Get what you ask for and no more<p>- It makes documentation for data consumers easy<p>- It can make subscription easier for you to use<p>- Can let you federate API calls<p>The bad<p>- It is actually a pain to use, depending on the backend you are using you'll have to manage<p>two or more type systems if there are no code first generates in your language<p>- It doesn't support map/tables/dictionaries. This is actually huge. I get that there might be<p>some pattern where you don't want to allow this but for the majority of situations working with json api's you'll end up with a {[key: string] : T} somewhere<p>- No clear path for Api versioning you'll end up with MyQueryV1.01 MyQueryV1.02 MyQueryV1.03<p>Don't use Graphql unless you're managing a solution/problem set that facebook intended graphql for<p>Invest your time in a simpler solution then running to GraphQL first<p>thanks for reading my ted talk<p>please any senior dev's drop your wise words so that any new dev's can avoid tarpits",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "randytandy",
    "url": "https://news.ycombinator.com/user?id=randytandy"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32366759",
  "sameAs": "https://news.ycombinator.com/item?id=32366759",
  "dateCreated": "2022-08-06T11:44:44.439Z",
  "datePublished": "2022-08-06T10:25:37.000Z",
  "dateModified": "2022-08-06T11:44:44.439Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "不受欢迎的意见：GraphQL有点糟糕\n",
  "headline_zh-Hant": "不受歡迎的意見：GraphQL有點糟糕\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Graphql是伟大的，但完全被夸大了。这可能更像是一种咆哮或沮丧的开发人员的爆发。<p>但初级到中级开发人员被引向使用GRAPHQL的道路，特别是在Youtube上......这是不公平的，也是错误的。<p>好：<p>- 它使描述你想要的数据的工作变得容易<p>- 它可以节省你的带宽。得到你所要求的，而不是更多<p>- 它使数据消费者的文档变得容易<p>- 它可以使你的订阅更容易使用<p>- 可以让你联合API调用<p>坏处<p>- 它实际上是一个痛苦的使用，根据你所使用的后端，你将不得不管理<p>两个或多个类型系统，如果在你的语言中没有代码首先生成<p>- 它不支持地图/表/字典。这其实是个大问题。我知道可能会有<p>一些模式，你不想允许这样做，但对于大多数使用json api的情况，你最终会在某个地方出现{[key: string] : T}<p>- 没有明确的Api版本路径，你最终会使用MyQueryV1.01 MyQueryV1.02 MyQueryV1. 03<p>不要使用Graphql，除非你在管理一个facebook打算用Graphql的解决方案/问题集<p>把你的时间投资在一个更简单的解决方案上，然后先运行GraphQL<p>感谢你阅读我的ted talk<p>请任何高级开发人员留下你明智的意见，以便任何新的开发人员可以避免tarpits\n",
  "description_zh-Hant": "Graphql是偉大的，但完全被誇大了。這可能更像是一種咆哮或沮喪的開發人員的爆發。<p>但初級到中級開發人員被引向使用GRAPHQL的道路，特別是在Youtube上......這是不公平的，也是錯誤的。<p>好：<p>- 它使描述你想要的數據的工作變得容易<p>- 它可以節省你的帶寬。得到你所要求的，而不是更多<p>- 它使數據消費者的文檔變得容易<p>- 它可以使你的訂閱更容易使用<p>- 可以讓你聯合API調用<p>壞處<p>- 它實際上是一個痛苦的使用，根據你所使用的後端，你將不得不管理<p>兩個或多個類型系統，如果在你的語言中沒有代碼首先生成<p>- 它不支持地圖/表/字典。這其實是個大問題。我知道可能會有<p>一些模式，你不想允許這樣做，但對於大多數使用json api的情況，你最終會在某個地方出現{[key: string] : T}<p>- 沒有明確的Api版本路徑，你最終會使用MyQueryV1.01 MyQueryV1.02 MyQueryV1. 03<p>不要使用Graphql，除非你在管理一個facebook打算用Graphql的解決方案/問題集<p>把你的時間投資在一個更簡單的解決方案上，然後先運行GraphQL<p>感謝你閱讀我的ted talk<p>請任何高級開發人員留下你明智的意見，以便任何新的開發人員可以避免tarpits\n"
}