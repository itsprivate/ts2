{
  "@type": "NewsArticle",
  "identifier": "2022--07--26--en--myfeed--ben-werdmuller--NewsArticle--12b5cad7168e3280ece9e93b48a85a7d",
  "url": "https://werd.io/2022/building-a-mobile-subscription-button",
  "headline": "Building a mobile subscription button",
  "publisher": {
    "@type": "Organization",
    "name": "werd.io",
    "url": "https://werd.io/feed/"
  },
  "description": "<div class=\"e-content entry-content\">\n<p>Last week, I built a small floating subscription button for <a href=\"https://19thnews.org\">The 19th</a>. It’s pretty simple, and the design had been floating around since long before I got there:</p><p><a href=\"https://19thnews.org/2022/07/cori-bush-proposed-hhs-office-reproductive-health-care/\"><img style=\"margin-left:auto;margin-right:auto;\" src=\"https://werd.io/file/62e00066fc10b115bd7ca592\" alt=\"\" width=\"319\" height=\"379\"></a></p><p>The button only displays on mobile browsers. There were a few nuances to getting it working in mobile Safari in particular.</p><p>My first attempt, where the button’s position was based on browser height percentage, had the button jumping around the page when the URL bar appeared and disappeared. Distracting and gross!</p><p>It turns out that Safari alters the height of the page when you refer to it in percentage terms, but <em>doesn’t</em> alter the height of the viewport. So as soon as I specified the height using <code>vh</code> increments, the problem went away.</p><p>Then I was left with a new problem. Although the button was happily static, it was partially obscured by the URL bar (by design) until the bar went away. That’s fine - but it was taking a long time to repaint, so you’d see half a button for a couple of seconds before the browser caught up.</p><p>The solution to this is to apply a CSS transformation that does nothing visible at all:</p><pre><code>transform: translateZ(0);\n</code></pre><p>The effect of this hack is to tell the browser to use hardware acceleration for this layer. With this in place, it takes no time at all to repaint, and my weird visual glitch was gone.</p><p>The code for the button took less than a day, but as always in web development, there are nuances to look out for. (I won’t get into tracking Google Analytics event clicks on a fully SVG button, which is also harder than it should be.)</p><p>The result should be more mobile clickthroughs <a href=\"https://staging.19thnews.org/newsletters/daily/\">to subscribe to the daily newsletter</a>, giving more people the opportunity to connect to our community. It’s the kind of small feature that can have an outsize impact - and, hopefully, make the audience team happy. Which, in turn, makes me happy too.</p><p> </p><p><em>By the way, we’re hiring! <a href=\"https://19thnews.org/19th-news-web-applications-engineer-job-posting/\">Our web applications engineer position is open for applications.</a></em></p></div>",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "Ben Werdmüller",
    "url": "https://werd.io/feed/"
  },
  "discussionUrl": "https://werd.io/2022/building-a-mobile-subscription-button",
  "sameAs": "https://werd.io/2022/building-a-mobile-subscription-button",
  "dateCreated": "2022-07-26T15:00:49.667Z",
  "datePublished": "2022-07-26T14:55:46.000Z",
  "dateModified": "2022-07-26T15:00:49.667Z",
  "interactionStatistic": [],
  "headline_zh-Hans": "建立一个移动订阅按钮\n",
  "headline_zh-Hant": "建立一個移動訂閱按鈕\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "<div class=\"e-content entry-content\">\n<p>Last week, I built a small floating subscription button for <a href=\"https://19thnews.org\">The 19th</a>. It’s pretty simple, and the design had been floating around since long before I got there:</p><p><a href=\"https://19thnews.org/2022/07/cori-bush-proposed-hhs-office-reproductive-health-care/\"><img style=\"margin-left:auto;margin-right:auto;\" src=\"https://werd.io/file/62e00066fc10b115bd7ca592\" alt=\"\" width=\"319\" height=\"379\"></a></p><p>The button only displays on mobile browsers. There were a few nuances to getting it working in mobile Safari in particular.</p><p>My first attempt, where the button’s position was based on browser height percentage, had the button jumping around the page when the URL bar appeared and disappeared. Distracting and gross!</p><p>It turns out that Safari alters the height of the page when you refer to it in percentage terms, but <em>doesn’t</em> alter the height of the viewport. So as soon as I specified the height using <code>vh</code> increments, the problem went away.</p><p>Then I was left with a new problem. Although the button was happily static, it was partially obscured by the URL bar (by design) until the bar went away. That’s fine - but it was taking a long time to repaint, so you’d see half a button for a couple of seconds before the browser caught up.</p><p>The solution to this is to apply a CSS transformation that does nothing visible at all:</p><pre><code>transform: translateZ(0);\n</code></pre><p>The effect of this hack is to tell the browser to use hardware acceleration for this layer. With this in place, it takes no time at all to repaint, and my weird visual glitch was gone.</p><p>The code for the button took less than a day, but as always in web development, there are nuances to look out for. (I won’t get into tracking Google Analytics event clicks on a fully SVG button, which is also harder than it should be.)</p><p>The result should be more mobile clickthroughs <a href=\"https://staging.19thnews.org/newsletters/daily/\">to subscribe to the daily newsletter</a>, giving more people the opportunity to connect to our community. It’s the kind of small feature that can have an outsize impact - and, hopefully, make the audience team happy. Which, in turn, makes me happy too.</p><p> </p><p><em>By the way, we’re hiring! <a href=\"https://19thnews.org/19th-news-web-applications-engineer-job-posting/\">Our web applications engineer position is open for applications.</a></em></p></div>\n",
  "description_zh-Hant": "<div class=\"e-content entry-content\">\n<p>Last week, I built a small floating subscription button for <a href=\"https://19thnews.org\">The 19th</a>. It’s pretty simple, and the design had been floating around since long before I got there:</p><p><a href=\"https://19thnews.org/2022/07/cori-bush-proposed-hhs-office-reproductive-health-care/\"><img style=\"margin-left:auto;margin-right:auto;\" src=\"https://werd.io/file/62e00066fc10b115bd7ca592\" alt=\"\" width=\"319\" height=\"379\"></a></p><p>The button only displays on mobile browsers. There were a few nuances to getting it working in mobile Safari in particular.</p><p>My first attempt, where the button’s position was based on browser height percentage, had the button jumping around the page when the URL bar appeared and disappeared. Distracting and gross!</p><p>It turns out that Safari alters the height of the page when you refer to it in percentage terms, but <em>doesn’t</em> alter the height of the viewport. So as soon as I specified the height using <code>vh</code> increments, the problem went away.</p><p>Then I was left with a new problem. Although the button was happily static, it was partially obscured by the URL bar (by design) until the bar went away. That’s fine - but it was taking a long time to repaint, so you’d see half a button for a couple of seconds before the browser caught up.</p><p>The solution to this is to apply a CSS transformation that does nothing visible at all:</p><pre><code>transform: translateZ(0);\n</code></pre><p>The effect of this hack is to tell the browser to use hardware acceleration for this layer. With this in place, it takes no time at all to repaint, and my weird visual glitch was gone.</p><p>The code for the button took less than a day, but as always in web development, there are nuances to look out for. (I won’t get into tracking Google Analytics event clicks on a fully SVG button, which is also harder than it should be.)</p><p>The result should be more mobile clickthroughs <a href=\"https://staging.19thnews.org/newsletters/daily/\">to subscribe to the daily newsletter</a>, giving more people the opportunity to connect to our community. It’s the kind of small feature that can have an outsize impact - and, hopefully, make the audience team happy. Which, in turn, makes me happy too.</p><p> </p><p><em>By the way, we’re hiring! <a href=\"https://19thnews.org/19th-news-web-applications-engineer-job-posting/\">Our web applications engineer position is open for applications.</a></em></p></div>\n"
}