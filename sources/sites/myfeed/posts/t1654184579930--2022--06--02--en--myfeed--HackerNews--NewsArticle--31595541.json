{
  "@type": "NewsArticle",
  "identifier": "2022--06--02--en--myfeed--HackerNews--NewsArticle--31595541",
  "url": "https://news.ycombinator.com/item?id=31595541",
  "headline": "Show HN: Linkians, a sims-like game that happens in your url bar with emojis",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hey HN,\nI made <a href=\"https://linkians.com\" rel=\"nofollow\">https://linkians.com</a> which is a game where all the action and state is contained in the url. There's no server, just emojis in the url and client-side logic. Any linkians url using the supported emojis is a valid game state so you can save your game, or type out your own url and send it to a friend.<p>The game involves taking care of little pets (emojis) that live in your url bar. Kind of like tamagotchi or sims. Feed them, play with them, and watch out for enemies!<p>In terms of the technical details: It's a static web page. It looks at the url for the initial game state, or starts you off with the default. On an interval the game loop kicks in by reading the url, producing a new game state by having one character act, and updating the url again using history.replaceState. Handling unicode has been fun (like a right-to-left bug).<p>I'd appreciate any feedback.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "escot",
    "url": "https://news.ycombinator.com/user?id=escot"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31595541",
  "sameAs": "https://linkians.com/",
  "dateCreated": "2022-06-02T15:42:59.930Z",
  "datePublished": "2022-06-02T14:47:07.000Z",
  "dateModified": "2022-06-02T15:42:59.930Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 2
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: Linkians，一个类似于模拟的游戏，发生在你的网址栏里的表情符号。\n",
  "headline_zh-Hant": "Show HN: Linkians，一個類似於模擬的遊戲，發生在你的網址欄裡的表情符號。\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hey HN,\nI made <a href=\"https://linkians.com\" rel=\"nofollow\">https://linkians.com</a> which is a game where all the action and state is contained in the url. There's no server, just emojis in the url and client-side logic. Any linkians url using the supported emojis is a valid game state so you can save your game, or type out your own url and send it to a friend.<p>The game involves taking care of little pets (emojis) that live in your url bar. Kind of like tamagotchi or sims. Feed them, play with them, and watch out for enemies!<p>In terms of the technical details: It's a static web page. It looks at the url for the initial game state, or starts you off with the default. On an interval the game loop kicks in by reading the url, producing a new game state by having one character act, and updating the url again using history.replaceState. Handling unicode has been fun (like a right-to-left bug).<p>I'd appreciate any feedback.\n",
  "description_zh-Hant": "Hey HN,\nI made <a href=\"https://linkians.com\" rel=\"nofollow\">https://linkians.com</a> which is a game where all the action and state is contained in the url. There's no server, just emojis in the url and client-side logic. Any linkians url using the supported emojis is a valid game state so you can save your game, or type out your own url and send it to a friend.<p>The game involves taking care of little pets (emojis) that live in your url bar. Kind of like tamagotchi or sims. Feed them, play with them, and watch out for enemies!<p>In terms of the technical details: It's a static web page. It looks at the url for the initial game state, or starts you off with the default. On an interval the game loop kicks in by reading the url, producing a new game state by having one character act, and updating the url again using history.replaceState. Handling unicode has been fun (like a right-to-left bug).<p>I'd appreciate any feedback.\n"
}