{
  "@type": "NewsArticle",
  "identifier": "2022--03--27--en--hackernews--HackerNews--NewsArticle--30819579",
  "url": "https://news.ycombinator.com/item?id=30819579",
  "headline": "Ask HN: How do you search large code-base before adding a feature or fixing bug?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Why do we need to search source-code?<p><pre><code>  1. Quickly learn the domain and context of the application\n  2. After adding a feature, we should aware if we broke anything (assume you work with code that doesn't have test-case), it helps even to search testcases\n  3. Find similar code and ensure you are improving quality of the overall similar code (not just fixing current bug)\n  4. Understand how application behaves when there are production issues.\n</code></pre>\nMost often I deal with large inherited code-base in my career, often we need to search similar code or usage of certain variable or a function/class/module. When it is statically typed language to certain extent IDE/compiler helps. But we have to deal with different languages and sometime developers copy/paste for various reason. Searching/grepping code and its usage seems to be very useful for various reasons.<p>You as a developer, what are all the ways you search source-code before working/fixing feature or bug? Do you use any CLI tools other than grep. I have used OpenGrok, But few times it is not maintained by me or other developers.<p>Below is my steps.\n1. Read the relevant code, and know certain domain keyword, variable names (inclusive class/method/function)\n2. Use the bitbucket/GitHub/git search\n3. Use the grep\n4. Use the git-grep<p>Still few times, I end up missing.<p>Seems like this is (Especially CLI based search) very valuable skill to have. Do you have any tips/tools for other developers?",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "mohanmca",
    "url": "https://news.ycombinator.com/user?id=mohanmca"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30819579",
  "sameAs": "https://news.ycombinator.com/item?id=30819579",
  "dateCreated": "2022-03-27T12:14:28.797Z",
  "datePublished": "2022-03-27T11:59:44.000Z",
  "dateModified": "2022-03-27T12:14:28.797Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 4
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 3
    }
  ],
  "headline_zh-Hans": "Ask HN: 在添加功能或修复错误之前，你如何搜索大型代码库？",
  "headline_zh-Hant": "Ask HN: 在添加功能或修復錯誤之前，你如何搜索大型代碼庫？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "为什么我们需要搜索源代码？<p><pre><code> 1. 快速了解应用程序的领域和背景\n  2. 在添加一个功能后，我们应该意识到我们是否破坏了什么（假设你使用的代码没有测试案例），它甚至有助于搜索测试案例。\n  3. Find similar code and ensure you are improving quality of the overall similar code (not just fixing current bug)\n  4. Understand how application behaves when there are production issues.\n</code></pre>\n在我的职业生涯中，我经常与大型的继承代码库打交道，我们经常需要搜索类似的代码或某个变量或某个函数/类/模块的用法。当它是静态类型的语言时，在一定程度上IDE/编译器会有所帮助。但我们必须处理不同的语言，有时开发人员会因为各种原因复制/粘贴。<p>你作为一个开发者，在工作/修复功能或错误之前，你都用什么方法来搜索源代码？除了grep之外，你还使用任何CLI工具吗。我曾使用过OpenGrok，但有几次它没有被我或其他开发者维护。<p>下面是我的步骤。\n1. 阅读相关代码，了解某些领域的关键词、变量名称（包括类/方法/函数）。\n2. 使用bitbucket/GitHub/git搜索\n3. 使用grep\n4. 使用git-grep<p>仍然有几次，我最终没有找到。<p>看来这是（尤其是基于CLI的搜索）非常有价值的技能。你有什么提示/工具给其他开发者吗？",
  "description_zh-Hant": "為什麼我們需要搜索源代碼？<p><pre><code> 1. 快速瞭解應用程序的領域和背景\n  2. 在添加一個功能後，我們應該意識到我們是否破壞了什麼（假設你使用的代碼沒有測試案例），它甚至有助於搜索測試案例。\n  3. Find similar code and ensure you are improving quality of the overall similar code (not just fixing current bug)\n  4. Understand how application behaves when there are production issues.\n</code></pre>\n在我的職業生涯中，我經常與大型的繼承代碼庫打交道，我們經常需要搜索類似的代碼或某個變量或某個函數/類/模塊的用法。當它是靜態類型的語言時，在一定程度上IDE/編譯器會有所幫助。但我們必須處理不同的語言，有時開發人員會因為各種原因複製/粘貼。<p>你作為一個開發者，在工作/修復功能或錯誤之前，你都用什麼方法來搜索源代碼？除了grep之外，你還使用任何CLI工具嗎。我曾使用過OpenGrok，但有幾次它沒有被我或其他開發者維護。<p>下面是我的步驟。\n1. 閱讀相關代碼，瞭解某些領域的關鍵詞、變量名稱（包括類/方法/函數）。\n2. 使用bitbucket/GitHub/git搜索\n3. 使用grep\n4. 使用git-grep<p>仍然有幾次，我最終沒有找到。<p>看來這是（尤其是基於CLI的搜索）非常有價值的技能。你有什麼提示/工具給其他開發者嗎？"
}