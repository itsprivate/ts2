{
  "@type": "NewsArticle",
  "identifier": "2022--06--18--en--hackernews--HackerNews--NewsArticle--31764026",
  "url": "https://news.ycombinator.com/item?id=31764026",
  "headline": "Show HN: Lockable – sync locks for distributed systems",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi guys, creator of lockable here - the easiest way to think of lockable is as `flock` for when you don’t have a shared file system. You can use it to control concurrent access to resources or to ensure only a single instance of a process runs at any given time.<p>Your processes can acquire, refresh and release locks via simple HTTP requests, so it’s language/framework agnostic. E.g. with `curl`:<p><pre><code>    $ curl https://lockable.dev/api/acquire/my-lock-name\n    {\n      &quot;response&quot;: true //or false, if the lock wasn’t available\n    }\n\n\n    $ curl https://lockable.dev/api/release/my-lock-name\n</code></pre>\nThere’s also a Python client[0], which makes using the service a more pleasant experience.<p>Feel free to play around, the free tier is fully functional. Happy to hear any feedback you might have.<p>[0]: <a href=\"https://docs.lockable.dev/en/latest/python-client/\" rel=\"nofollow\">https://docs.lockable.dev/en/latest/python-client/</a>",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "keyless_",
    "url": "https://news.ycombinator.com/user?id=keyless_"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31764026",
  "sameAs": "https://lockable.dev",
  "dateCreated": "2022-06-18T06:29:39.829Z",
  "datePublished": "2022-06-16T09:27:26.000Z",
  "dateModified": "2022-06-18T06:29:39.829Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 30
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 7
    }
  ],
  "headline_zh-Hans": "Show HN: 可锁定--分布式系统的同步锁\n",
  "headline_zh-Hant": "Show HN: 可鎖定--分佈式系統的同步鎖\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hi guys, creator of lockable here - the easiest way to think of lockable is as `flock` for when you don’t have a shared file system. You can use it to control concurrent access to resources or to ensure only a single instance of a process runs at any given time.<p>Your processes can acquire, refresh and release locks via simple HTTP requests, so it’s language/framework agnostic. E.g. with `curl`:<p><pre><code> $ curl https://lockable.dev/api/acquire/my-lock-name\n    {\n      &quot;response&quot;: true //or false, if the lock wasn’t available\n    }\n\n\n    $ curl https://lockable.dev/api/release/my-lock-name\n</code></pre>\nThere’s also a Python client[0], which makes using the service a more pleasant experience.<p>Feel free to play around, the free tier is fully functional. Happy to hear any feedback you might have.<p>[0]: <a href=\"https://docs.lockable.dev/en/latest/python-client/\" rel=\"nofollow\">https://docs.lockable.dev/en/latest/python-client/</a>\n",
  "description_zh-Hant": "Hi guys, creator of lockable here - the easiest way to think of lockable is as `flock` for when you don’t have a shared file system. You can use it to control concurrent access to resources or to ensure only a single instance of a process runs at any given time.<p>Your processes can acquire, refresh and release locks via simple HTTP requests, so it’s language/framework agnostic. E.g. with `curl`:<p><pre><code> $ curl https://lockable.dev/api/acquire/my-lock-name\n    {\n      &quot;response&quot;: true //or false, if the lock wasn’t available\n    }\n\n\n    $ curl https://lockable.dev/api/release/my-lock-name\n</code></pre>\nThere’s also a Python client[0], which makes using the service a more pleasant experience.<p>Feel free to play around, the free tier is fully functional. Happy to hear any feedback you might have.<p>[0]: <a href=\"https://docs.lockable.dev/en/latest/python-client/\" rel=\"nofollow\">https://docs.lockable.dev/en/latest/python-client/</a>\n"
}