{
  "@type": "NewsArticle",
  "identifier": "2022--03--10--en--hackernews--HackerNews--NewsArticle--30627202",
  "url": "https://news.ycombinator.com/item?id=30627202",
  "headline": "Show HN: Dockerized – Run CLI tools without installation",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Dockerized is like npx for unix tools: Run popular cli tools without installation.<p>Example:<p><pre><code>    dockerized npm init\n    dockerized python2 somescript.py\n</code></pre>\nRun an older version of a tool:<p><pre><code>    NODE_VERSION=15.0 dockerized node\n</code></pre>\nUse cases:<p>- Maintaining multiple versions of an app<p>- Installing without polluting host machine<p>- Quickly run some commands you may not have installed<p>Features:<p>- intuitive use. Just the original command, but with 'dockerized' in front.<p>- dockerized apps can access the current directory and read/modify files, just like native apps.<p>- no need to know which docker image this package comes from.<p>- support for tools which don't have an official docker image.<p>- container cleaned up after use.<p>- ability to specify the version.<p>- version specification per directory (share exact versions with your team mates).<p>The inner workings are pretty simple, it's just a docker-compose file.<p>As expected with dockerization, there are limitations related to networking, and file persistence (outside current dir), but it can make life easy for simple scenarios.<p>Pull requests welcome!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "datastack",
    "url": "https://news.ycombinator.com/user?id=datastack"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30627202",
  "sameAs": "https://github.com/datastack-net/dockerized",
  "dateCreated": "2022-03-10T17:13:43.506Z",
  "datePublished": "2022-03-10T14:24:34.000Z",
  "dateModified": "2022-03-10T17:13:43.506Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 19
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 7
    }
  ],
  "headline_zh-Hans": "Show HN: Dockerized - 无需安装即可运行CLI工具",
  "headline_zh-Hant": "Show HN: Dockerized - 無需安裝即可運行CLI工具",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Dockerized就像unix工具的npx。<p>示例：<p><pre><code> dockerized npm init\n    dockerized python2 somescript.py\n</code></pre>\nRun an older version of a tool:<p><pre><code> NODE_VERSION=15.0 dockerized node\n</code></pre>\n用例：<p>- 维护一个应用程序的多个版本<p>- 安装时不污染主机<p>- 快速运行一些你可能没有安装的命令<p>特点：<p>- 直观的使用。只是原来的命令，但前面有'dockerized'。<p>- dockerized应用程序可以访问当前目录并读取/修改文件，就像本地应用程序一样。<p>- 不需要知道这个包来自哪个docker镜像。<p>- 支持没有官方docker镜像的工具。<p>- 容器使用后被清理。<p>- 能够指定版本。 <p>- 每个目录的版本说明（与你的队友分享准确的版本）。<p>内部工作非常简单，它只是一个docker-compose文件。<p>正如预期的docker化，有与网络和文件持久性（在当前dir之外）相关的限制，但它可以使简单场景下的生活变得简单。",
  "description_zh-Hant": "Dockerized就像unix工具的npx。<p>示例：<p><pre><code> dockerized npm init\n    dockerized python2 somescript.py\n</code></pre>\nRun an older version of a tool:<p><pre><code> NODE_VERSION=15.0 dockerized node\n</code></pre>\n用例：<p>- 維護一個應用程序的多個版本<p>- 安裝時不汙染主機<p>- 快速運行一些你可能沒有安裝的命令<p>特點：<p>- 直觀的使用。只是原來的命令，但前面有'dockerized'。<p>- dockerized應用程序可以訪問當前目錄並讀取/修改文件，就像本地應用程序一樣。<p>- 不需要知道這個包來自哪個docker鏡像。<p>- 支持沒有官方docker鏡像的工具。<p>- 容器使用後被清理。<p>- 能夠指定版本。 <p>- 每個目錄的版本說明（與你的隊友分享準確的版本）。<p>內部工作非常簡單，它只是一個docker-compose文件。<p>正如預期的docker化，有與網絡和文件持久性（在當前dir之外）相關的限制，但它可以使簡單場景下的生活變得簡單。"
}