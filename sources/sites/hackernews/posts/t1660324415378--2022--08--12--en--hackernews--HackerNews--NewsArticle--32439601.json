{
  "@type": "NewsArticle",
  "identifier": "2022--08--12--en--hackernews--HackerNews--NewsArticle--32439601",
  "url": "https://news.ycombinator.com/item?id=32439601",
  "headline": "Ask HN: Why are distributed systems so polarizing?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "There is an odd gatekeeping duality on tech forums:<p>1. You're not a proper engineer if you can't write scalable, highly available software that scales to infinity. Real engineers write production-grade, robust, fault tolerant, scalable, highly available, observable mission-critical systems.<p>2. <i>No one</i> actually needs large distributed systems, you're not google, stop trying to build large scalable systems. One Server + backup is enough. Everything else is overkill, complexity, resume-driven engineering. I can handle 50k RPS with one beefy bare metal machine, written in Rust. Unless you have 10 million customers, which 99.9% of companies don't have.<p>I'm not sure how to feel about this.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "c0mptonFP",
    "url": "https://news.ycombinator.com/user?id=c0mptonFP"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32439601",
  "sameAs": "https://news.ycombinator.com/item?id=32439601",
  "dateCreated": "2022-08-12T17:13:35.378Z",
  "datePublished": "2022-08-12T14:58:15.000Z",
  "dateModified": "2022-08-12T17:13:35.378Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 21
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 17
    }
  ],
  "headline_zh-Hans": "Ask HN: 为什么分布式系统会如此两极分化？\n",
  "headline_zh-Hant": "Ask HN: 為什麼分佈式系統會如此兩極分化？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "There is an odd gatekeeping duality on tech forums:<p>1. You're not a proper engineer if you can't write scalable, highly available software that scales to infinity. Real engineers write production-grade, robust, fault tolerant, scalable, highly available, observable mission-critical systems.<p>2. <i>No one</i> actually needs large distributed systems, you're not google, stop trying to build large scalable systems. One Server + backup is enough. Everything else is overkill, complexity, resume-driven engineering. I can handle 50k RPS with one beefy bare metal machine, written in Rust. Unless you have 10 million customers, which 99.9% of companies don't have.<p>I'm not sure how to feel about this.\n",
  "description_zh-Hant": "There is an odd gatekeeping duality on tech forums:<p>1. You're not a proper engineer if you can't write scalable, highly available software that scales to infinity. Real engineers write production-grade, robust, fault tolerant, scalable, highly available, observable mission-critical systems.<p>2. <i>No one</i> actually needs large distributed systems, you're not google, stop trying to build large scalable systems. One Server + backup is enough. Everything else is overkill, complexity, resume-driven engineering. I can handle 50k RPS with one beefy bare metal machine, written in Rust. Unless you have 10 million customers, which 99.9% of companies don't have.<p>I'm not sure how to feel about this.\n"
}