{
  "@type": "NewsArticle",
  "identifier": "2022--07--23--en--hackernews--HackerNews--NewsArticle--32200007",
  "url": "https://news.ycombinator.com/item?id=32200007",
  "headline": "Ask HN: Why Don't Filesystems and OS's Provide Filesystem Transactions?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "This is inspired by [1].<p>Quite frankly, I don't know why filesystems <i>don't</i> provide these things.<p>I have read that Windows has a transactional API, but they've actually deprecated it! [2] They say it's because few programs use it.<p>I mean, sure, that might be true, but I bet it's <i>really</i> important for those programs that <i>do</i> use it.<p>Bonus question: why does Windows hide its equivalent of `openat()` in the NT API? [3] Rust code seems to claim its fundamental to the NT kernel [4], so why is it not exposed?<p>[1]: https://news.ycombinator.com/item?id=32190032<p>[2]: https://docs.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf<p>[3]: https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile<p>[4]: https://github.com/rust-lang/rust/blob/1c63ec48b8cbf553d291a04957d86cfd191fcd78/library/std/src/sys/windows/fs.rs#L711-L715",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "ghoward",
    "url": "https://news.ycombinator.com/user?id=ghoward"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32200007",
  "sameAs": "https://news.ycombinator.com/item?id=32200007",
  "dateCreated": "2022-07-23T03:47:21.137Z",
  "datePublished": "2022-07-23T03:19:58.000Z",
  "dateModified": "2022-07-23T03:47:21.137Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 10
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 4
    }
  ],
  "headline_zh-Hans": "Ask HN: 为什么文件系统和操作系统不提供文件系统交易？\n",
  "headline_zh-Hant": "Ask HN: 為什麼文件系統和操作系統不提供文件系統交易？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "This is inspired by [1].<p>Quite frankly, I don't know why filesystems <i>don't</i> provide these things.<p>I have read that Windows has a transactional API, but they've actually deprecated it! [2] They say it's because few programs use it.<p>I mean, sure, that might be true, but I bet it's <i>really</i> important for those programs that <i>do</i> use it.<p>Bonus question: why does Windows hide its equivalent of `openat()` in the NT API? [3] Rust code seems to claim its fundamental to the NT kernel [4], so why is it not exposed?<p>[1]: https://news.ycombinator.com/item?id=32190032<p>[2]: https://docs.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf<p>[3]: https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile<p>[4]: https://github.com/rust-lang/rust/blob/1c63ec48b8cbf553d291a04957d86cfd191fcd78/library/std/src/sys/windows/fs.rs#L711-L715\n",
  "description_zh-Hant": "This is inspired by [1].<p>Quite frankly, I don't know why filesystems <i>don't</i> provide these things.<p>I have read that Windows has a transactional API, but they've actually deprecated it! [2] They say it's because few programs use it.<p>I mean, sure, that might be true, but I bet it's <i>really</i> important for those programs that <i>do</i> use it.<p>Bonus question: why does Windows hide its equivalent of `openat()` in the NT API? [3] Rust code seems to claim its fundamental to the NT kernel [4], so why is it not exposed?<p>[1]: https://news.ycombinator.com/item?id=32190032<p>[2]: https://docs.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf<p>[3]: https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile<p>[4]: https://github.com/rust-lang/rust/blob/1c63ec48b8cbf553d291a04957d86cfd191fcd78/library/std/src/sys/windows/fs.rs#L711-L715\n"
}