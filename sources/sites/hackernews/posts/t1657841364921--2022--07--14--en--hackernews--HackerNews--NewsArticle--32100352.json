{
  "@type": "NewsArticle",
  "identifier": "2022--07--14--en--hackernews--HackerNews--NewsArticle--32100352",
  "url": "https://news.ycombinator.com/item?id=32100352",
  "headline": "Show HN: Payload – Cross-platform desktop app for LAN file transfers",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hi HN.<p>I built Payload to make file transfers easy for less-technical users who need large/fast transfers, so I have focused on auto-discovery, drag-and-drop, visually distinct device icons.<p>It's using Tauri (an &quot;Electron alternative&quot; built on Rust) which keeps my binaries small and bundles to .msi, .dmg, .deb and .appimage. No CLI, iOS or Android support (yet).<p>The network stack is a separate binary written in Go. It uses mDNS for local network discovery and TLS over TCP or Quic, with a public Ed25519 keypair for each device. The protocol is ad-hoc and symmetrical control stream using JSON and binary data streams. Planning to open source these parts eventually..<p>Transfers should saturate the local network link. It reaches ~116 MB/s wired at my home, but if you have a &gt;1000 Mbit link, I'd be curious to see how much speed you can squeeze out.<p>See also:<p><a href=\"https://news.ycombinator.com/item?id=21575869\" rel=\"nofollow\">https://news.ycombinator.com/item?id=21575869</a><p><a href=\"https://news.ycombinator.com/item?id=24351111\" rel=\"nofollow\">https://news.ycombinator.com/item?id=24351111</a>",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "klabb3",
    "url": "https://news.ycombinator.com/user?id=klabb3"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32100352",
  "sameAs": "https://payload.app/",
  "dateCreated": "2022-07-14T23:29:24.921Z",
  "datePublished": "2022-07-14T19:16:15.000Z",
  "dateModified": "2022-07-14T23:29:24.921Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 22
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 5
    }
  ],
  "headline_zh-Hans": "Show HN: Payload - 用于局域网文件传输的跨平台桌面应用程序\n",
  "headline_zh-Hant": "Show HN: Payload - 用於局域網文件傳輸的跨平臺桌面應用程序\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "Hi HN.<p>I built Payload to make file transfers easy for less-technical users who need large/fast transfers, so I have focused on auto-discovery, drag-and-drop, visually distinct device icons.<p>It's using Tauri (an &quot;Electron alternative&quot; built on Rust) which keeps my binaries small and bundles to .msi, .dmg, .deb and .appimage. No CLI, iOS or Android support (yet).<p>The network stack is a separate binary written in Go. It uses mDNS for local network discovery and TLS over TCP or Quic, with a public Ed25519 keypair for each device. The protocol is ad-hoc and symmetrical control stream using JSON and binary data streams. Planning to open source these parts eventually..<p>Transfers should saturate the local network link. It reaches ~116 MB/s wired at my home, but if you have a &gt;1000 Mbit link, I'd be curious to see how much speed you can squeeze out.<p>See also:<p><a href=\"https://news.ycombinator.com/item?id=21575869\" rel=\"nofollow\">https://news.ycombinator.com/item?id=21575869</a><p><a href=\"https://news.ycombinator.com/item?id=24351111\" rel=\"nofollow\">https://news.ycombinator.com/item?id=24351111</a>\n",
  "description_zh-Hant": "Hi HN.<p>I built Payload to make file transfers easy for less-technical users who need large/fast transfers, so I have focused on auto-discovery, drag-and-drop, visually distinct device icons.<p>It's using Tauri (an &quot;Electron alternative&quot; built on Rust) which keeps my binaries small and bundles to .msi, .dmg, .deb and .appimage. No CLI, iOS or Android support (yet).<p>The network stack is a separate binary written in Go. It uses mDNS for local network discovery and TLS over TCP or Quic, with a public Ed25519 keypair for each device. The protocol is ad-hoc and symmetrical control stream using JSON and binary data streams. Planning to open source these parts eventually..<p>Transfers should saturate the local network link. It reaches ~116 MB/s wired at my home, but if you have a &gt;1000 Mbit link, I'd be curious to see how much speed you can squeeze out.<p>See also:<p><a href=\"https://news.ycombinator.com/item?id=21575869\" rel=\"nofollow\">https://news.ycombinator.com/item?id=21575869</a><p><a href=\"https://news.ycombinator.com/item?id=24351111\" rel=\"nofollow\">https://news.ycombinator.com/item?id=24351111</a>\n"
}