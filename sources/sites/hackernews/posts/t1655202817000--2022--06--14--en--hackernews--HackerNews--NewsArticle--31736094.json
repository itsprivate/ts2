{
  "@type": "NewsArticle",
  "identifier": "2022--06--14--en--hackernews--HackerNews--NewsArticle--31736094",
  "url": "https://news.ycombinator.com/item?id=31736094",
  "headline": "Ask HN: CS grad who barely knows any CS",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I (m, 23) will be graduating from a university in Kenya with a CS degree at the end of the year. However, I feel like I barely know anything. I hardly attended classes in my first and second year. I upped my grades in my third year and was even among the top in the class (anecdotally). To be honest, I’ve always felt like our CS course was inferior. For example, I did a Computer Graphics course, but we didn’t even implement line drawing algorithms. My favorite courses were compiler construction (we actually built a compiler) and distributed systems.<p>I started checking the sources of web pages in high school, and even learnt rudimentary JavaScript and PHP. After high school, I was hoping to join a good uni in the US. I got a relatively decent 1490 in my SATs then bungled up the rest of the application process. I hesitantly joined my current uni. I’ve been coding on and off since then. For school, I wrote introductory assembly, C, and C++: most of which I can’t recall now. Outside of school I learnt Node.JS, Python and Go. I haven’t built any large project: my biggest code base is probably my FYP React Native app or the Vue/Flask web app for my internship.<p>On paper, it appears I know quite a few technologies. But contrary to that, most of it has been surface level knowledge. To use a friend’s words, I’ve been turning buttons from red to green (doing CRUD). I don't know how databases work, I don't know what exactly ray tracing is, et al. I started applying for jobs last week. To my surprise (or not), I do not fit cleanly into the requirements of any of the junior listings. I can't solve the &quot;easy&quot; problems on LeetCode and my score for the AngelList Fullstack assessment [1] was 18/30. I rather objectively believe I have some gaps in my CS knowledge. I am even considering a boot camp—if one exists for people who already know what a variable is. My tentative plan is to get a part time job, and then spend 6 months reading books, learning tech I’ve always wanted to learn, and hacking on at least one build-your-own [2] type project.<p>So, how can one effectively fill gaps in their CS knowledge? It’s worth noting that I am overwhelmed, and even procrastinate when I don't have an overarching framework (like school). So it’s not as simple as just sitting alone and studying/coding. I am the &quot;smart&quot; kid who didn’t have to study throughout most of school, but who's &quot;discovered&quot; you have to sit long hours now to be competitive. Is my situation more common than I suppose? Should I suck it up, get a technical support role and build up from there?<p>[1] https://angel.co/assessments/full-stack-web\n[2] https://github.com/codecrafters-io/build-your-own-x",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "nevillain",
    "url": "https://news.ycombinator.com/user?id=nevillain"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31736094",
  "sameAs": "https://news.ycombinator.com/item?id=31736094",
  "dateCreated": "2022-06-14T10:33:37.000Z",
  "datePublished": "2022-06-14T08:11:39.000Z",
  "dateModified": "2022-06-14T10:33:37.000Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 13
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 5
    }
  ],
  "headline_zh-Hans": "Ask HN: 几乎不懂CS的CS毕业生\n",
  "headline_zh-Hant": "Ask HN: 幾乎不懂CS的CS畢業生\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我（男，23岁）将在今年年底从肯尼亚的一所大学毕业，获得CS学位。然而，我觉得我几乎什么都不知道。我在第一年和第二年几乎没有听课。我在第三年提高了成绩，甚至在班上名列前茅（轶事）。说实话，我一直觉得我们的CS课程是低级的。例如，我修了一门计算机图形学课程，但我们甚至没有实现画线算法。我最喜欢的课程是编译器的构建（我们实际上建立了一个编译器）和分布式系统。<p>我在高中时就开始检查网页的来源，甚至学会了初级的JavaScript和PHP。高中毕业后，我希望能进入美国的一所好大学。我在SAT考试中取得了相对不错的1490分，然后在其他的申请过程中搞砸了。我犹豫不决地进入了现在的大学。从那时起，我一直在断断续续地编写代码。在学校里，我写了入门的汇编、C和C++：其中大部分我现在都不记得了。在校外，我学习了Node.JS、Python和Go。我没有建立任何大型项目：我最大的代码库可能是我的FYP React Native应用或我实习时的Vue/Flask网络应用。<p>在纸面上，似乎我知道相当多的技术。但与此相反的是，大部分都是表面的知识。用一个朋友的话来说，我一直在把按钮从红色变成绿色（做CRUD）。我不知道数据库是如何工作的，我不知道光线追踪到底是什么，等等。 我上周开始申请工作。令我惊讶的是（或不惊讶），我并不完全符合任何一个初级职位的要求。我不能解决LeetCode上的&quot;easy&quot;问题，我在AngelList Fullstack评估[1]中的得分是18/30。我比较客观地认为我的CS知识有一些缺陷。我甚至在考虑参加一个训练营--如果有的话，是为那些已经知道什么是变量的人准备的。我暂定的计划是找一份兼职工作，然后花6个月时间看书，学习我一直想学的技术，并至少在一个自建[2]类型的项目上进行黑客攻击。<p>那么，如何才能有效地填补自己在CS知识方面的空白呢？值得注意的是，当我没有一个总体框架（如学校）时，我就会不知所措，甚至出现拖延。因此，这不是简单的独自坐着学习/编码那么简单。我是一个&quot;聪明&quot;的孩子，在学校的大部分时间都不用学习，但他&quot;发现&quot;你现在必须坐很长时间才能有竞争力。我的情况是否比我想象的更普遍？我是否应该忍气吞声，找一个技术支持的角色，然后从那里开始发展？<p>[1] https://angel.co/assessments/full-stack-web\n[2] https://github.com/codecrafters-io/build-your-own-x\n",
  "description_zh-Hant": "我（男，23歲）將在今年年底從肯尼亞的一所大學畢業，獲得CS學位。然而，我覺得我幾乎什麼都不知道。我在第一年和第二年幾乎沒有聽課。我在第三年提高了成績，甚至在班上名列前茅（軼事）。說實話，我一直覺得我們的CS課程是低級的。例如，我修了一門計算機圖形學課程，但我們甚至沒有實現畫線算法。我最喜歡的課程是編譯器的構建（我們實際上建立了一個編譯器）和分佈式系統。<p>我在高中時就開始檢查網頁的來源，甚至學會了初級的JavaScript和PHP。高中畢業後，我希望能進入美國的一所好大學。我在SAT考試中取得了相對不錯的1490分，然後在其他的申請過程中搞砸了。我猶豫不決地進入了現在的大學。從那時起，我一直在斷斷續續地編寫代碼。在學校裡，我寫了入門的彙編、C和C++：其中大部分我現在都不記得了。在校外，我學習了Node.JS、Python和Go。我沒有建立任何大型項目：我最大的代碼庫可能是我的FYP React Native應用或我實習時的Vue/Flask網絡應用。<p>在紙面上，似乎我知道相當多的技術。但與此相反的是，大部分都是表面的知識。用一個朋友的話來說，我一直在把按鈕從紅色變成綠色（做CRUD）。我不知道數據庫是如何工作的，我不知道光線追蹤到底是什麼，等等。 我上週開始申請工作。令我驚訝的是（或不驚訝），我並不完全符合任何一個初級職位的要求。我不能解決LeetCode上的&quot;easy&quot;問題，我在AngelList Fullstack評估[1]中的得分是18/30。我比較客觀地認為我的CS知識有一些缺陷。我甚至在考慮參加一個訓練營--如果有的話，是為那些已經知道什麼是變量的人準備的。我暫定的計劃是找一份兼職工作，然後花6個月時間看書，學習我一直想學的技術，並至少在一個自建[2]類型的項目上進行黑客攻擊。<p>那麼，如何才能有效地填補自己在CS知識方面的空白呢？值得注意的是，當我沒有一個總體框架（如學校）時，我就會不知所措，甚至出現拖延。因此，這不是簡單的獨自坐著學習/編碼那麼簡單。我是一個&quot;聰明&quot;的孩子，在學校的大部分時間都不用學習，但他&quot;發現&quot;你現在必須坐很長時間才能有競爭力。我的情況是否比我想象的更普遍？我是否應該忍氣吞聲，找一個技術支持的角色，然後從那裡開始發展？<p>[1] https://angel.co/assessments/full-stack-web\n[2] https://github.com/codecrafters-io/build-your-own-x\n"
}