{
  "@type": "NewsArticle",
  "identifier": "2022--06--05--en--hackernews--HackerNews--NewsArticle--31626508",
  "url": "https://news.ycombinator.com/item?id=31626508",
  "headline": "Why Rust easily optimizes out smart pointers where C++ cannot?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I think that this example can be both entertaining and educating. Smart pointers are often used in high-performance code (like browser engines) so it is interesting to learn how their usage impacts the generated code.<p>Here is a simple function that adds two numbers using smart pointers. Rust compiles it into two instructions [1], while C++ creates about 100 instructions [2] including unnecessary memory locks.<p>I wonder, is there a way to improve C++ code so that the smart pointers get optimized out? Did I make some mistake that prevents optimization?<p>[1] https://godbolt.org/z/YqYK3sPdd<p>[2] https://godbolt.org/z/bMrhTsjxz",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "codedokode",
    "url": "https://news.ycombinator.com/user?id=codedokode"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31626508",
  "sameAs": "https://news.ycombinator.com/item?id=31626508",
  "dateCreated": "2022-06-05T02:13:11.626Z",
  "datePublished": "2022-06-05T00:05:42.000Z",
  "dateModified": "2022-06-05T02:13:11.626Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 16
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 27
    }
  ],
  "headline_zh-Hans": "为什么Rust能轻易地优化出智能指针，而C++却不能？\n",
  "headline_zh-Hant": "為什麼Rust能輕易地優化出智能指針，而C++卻不能？\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我认为这个例子既有娱乐性又有教育性。智能指针经常用于高性能代码（如浏览器引擎），所以了解它们的使用对生成的代码的影响是很有趣的。<p>这里有一个简单的函数，使用智能指针将两个数字相加。Rust将其编译为两条指令[1]，而C++创造了大约100条指令[2]，包括不必要的内存锁。<p>我想知道，是否有办法改进C++代码，使智能指针被优化掉？我是不是犯了什么错误，导致无法优化？<p>[1] https://godbolt.org/z/YqYK3sPdd<p>[2] https://godbolt.org/z/bMrhTsjxz\n",
  "description_zh-Hant": "我認為這個例子既有娛樂性又有教育性。智能指針經常用於高性能代碼（如瀏覽器引擎），所以瞭解它們的使用對生成的代碼的影響是很有趣的。<p>這裡有一個簡單的函數，使用智能指針將兩個數字相加。Rust將其編譯為兩條指令[1]，而C++創造了大約100條指令[2]，包括不必要的內存鎖。<p>我想知道，是否有辦法改進C++代碼，使智能指針被優化掉？我是不是犯了什麼錯誤，導致無法優化？<p>[1] https://godbolt.org/z/YqYK3sPdd<p>[2] https://godbolt.org/z/bMrhTsjxz\n"
}