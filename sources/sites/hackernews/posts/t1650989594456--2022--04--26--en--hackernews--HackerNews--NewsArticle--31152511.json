{
  "@type": "NewsArticle",
  "identifier": "2022--04--26--en--hackernews--HackerNews--NewsArticle--31152511",
  "url": "https://news.ycombinator.com/item?id=31152511",
  "headline": "Show HN: M3O – Universal Public API Interface",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hey all, I'm Asim, the founder of M3O, a curated catalog of APIs that provides simple abstractions for the most common API use cases. The idea is to create a single place to explore, discover and consume public APIs as higher level building blocks.<p>Most of the time I don’t use all the features of an API and I assume most devs don't either, so picking and choosing the common patterns, abstracting it away and surfacing a new building block is useful. For example, Twilio has a lot of APIs but I only care about SMS. Even then I just want a quick way to send it. So stripping it all away results in something that's one endpoint and 3 fields (from, to and message).<p>Another example is something like email. There are services like sendgrid that provide a really feature rich experience for email but I’m just looking for something simple that will let me send plain text or html.<p>There are a number of API marketplaces out there, but we’re doing something different—our goal is to improve productivity. For example, RapidAPI has thousands of APIs, but there’s a lot of duplication. It’s overwhelming for developers. Choice is the enemy of productivity. AWS, on the other hand, offers a curated catalog of services where each focuses on a specific problem. We feel the same: from an API perspective you only need one of each building block. You only need one SMS, Email or Geocoding service.<p>I've been obsessed with this problem since working as an SRE at Google in 2011, seeing how the internal platform and APIs were being used by teams. I then worked at a ride hailing startup called Hailo where we got to build something similar, and experience the velocity of development in shipping products on top of simple, easily discovered APIs. I spent the next few years bootstrapping an open source project called Micro, trying to get people to standardize their API development to reach this goal.<p>Ultimately it took raising funding to take a real shot at it. After seeing the productivity Google unlocked and what Hailo could have done with their platform, it was clear to me it could and should be a product: a single way to consume APIs with one platform, one account and one framework.<p>Our goal is to build an API catalog that can act as the building blocks for most use cases, and then double down on services that have a lot of demand so we can improve the features and reliability.<p>In the wild, every API looks different, the docs are different, you have to figure out if there's client libraries or not. We unify all that, so everything looks and feels the same. All our docs are generated based on OpenAPI specs, and we code generate examples/client libraries for JS, Go, Dart and the CLI. It means you only ever need one client to access all these APIs.<p>Unifying API development and consumption requires a lot of resources to do at scale, hence its only happening inside fast growing startups and large tech cos. There are a lot of barriers to entry. Getting started isn't easy. Our approach has been to first nail API development for ourselves and then focus on API consumption by end users— ultimately we want to let anyone offer APIs on our platform. That requires enough large scale distribution and inbound traffic to make an attractive proposition to developers.<p>We've spent a year building the product with a lot of feedback on what worked and what didn't. We’ve signed up 8000 people, served 5M API requests and have 60+ APIs on the platform.<p>On billing: we're still figuring it out and would like feedback. It started as a free product, then moved into per request pricing. Unfortunately that's hard to scale without a lot of volume and it felt like people were more used to subscriptions for SaaS products so that's the route we've gone.<p>Anyway that's us, hope you try it out (<a href=\"https://m3o.com\" rel=\"nofollow\">https://m3o.com</a>), and would love to hear your thoughts in the comments!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "asim",
    "url": "https://news.ycombinator.com/user?id=asim"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31152511",
  "sameAs": "https://m3o.com",
  "dateCreated": "2022-04-26T16:13:14.456Z",
  "datePublished": "2022-04-25T10:09:25.000Z",
  "dateModified": "2022-04-26T16:13:14.456Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 9
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: M3O - 通用公共API接口",
  "headline_zh-Hant": "Show HN: M3O - 通用公共API接口",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "大家好，我是阿西姆，M3O的创始人，这是一个精心策划的API目录，为最常见的API用例提供简单的抽象。我们的想法是创建一个单一的地方来探索、发现和消费公共API，作为更高层次的构件。<p>大多数时候，我不会使用API的所有功能，我想大多数开发者也不会，所以挑选常见的模式，将其抽象化并浮出一个新的构件是很有用的。例如，Twilio有很多的API，但我只关心SMS。即使如此，我也只是想要一个快速发送的方法。因此，将其全部剥离的结果是一个端点和3个字段（从、到和消息）。<p>另一个例子是像电子邮件这样的东西。有一些服务，如sendgrid，为电子邮件提供了非常丰富的体验，但我只是在寻找一些简单的东西，让我发送纯文本或html。<p>现在有许多API市场，但我们正在做一些不同的事情，我们的目标是提高生产力。例如，RapidAPI有数以千计的API，但有很多重复的地方。这对开发者来说是不堪重负的。选择是生产力的敌人。另一方面，AWS提供了一个精心策划的服务目录，每个服务都专注于一个特定的问题。我们也有同样的感觉：从API的角度来看，你只需要每个构件中的一个。你只需要一个短信、电子邮件或地理编码服务。<p>自从2011年在谷歌担任SRE，看到内部平台和API如何被团队使用后，我就一直痴迷于这个问题。随后，我在一家名为Hailo的叫车服务创业公司工作，在那里我们建立了类似的东西，并体验了在简单、容易发现的API之上运送产品的开发速度。在接下来的几年里，我一直在引导一个名为Micro的开源项目，试图让人们规范他们的API开发，以实现这一目标。<p>最终，我筹集到了资金，才真正开始行动。<p>我们的目标是建立一个API目录，它可以作为大多数用例的构建模块，然后在有大量需求的服务上加倍努力，以便我们能够改进功能和可靠性。<p>在野外，每个API看起来都不一样，文档也不一样，你必须弄清楚是否有客户端库。我们统一了所有这些，所以一切看起来和感觉都是一样的。我们所有的文档都是基于OpenAPI规范生成的，并且我们为JS、Go、Dart和CLI编码生成示例/客户端库。这意味着你只需要一个客户端来访问所有这些API。<p>统一API开发和消费需要大量的资源来完成，因此它只发生在快速成长的初创公司和大型科技公司内部。有很多进入的障碍。开始并不容易。我们的方法是首先为自己开发API，然后专注于终端用户的API消费--最终我们希望让任何人在我们的平台上提供API。这需要有足够大规模的分销和入站流量，以便对开发者产生吸引力。<p>我们已经花了一年时间来构建产品，并得到了很多关于什么有效、什么无效的反馈。我们已经注册了8000人，提供了500万个API请求，平台上有60多个API。<p>关于计费：我们还在摸索，希望得到反馈。它开始是一个免费产品，然后转为按请求定价。不幸的是，如果没有大量的数量，这很难扩大规模，而且感觉人们更习惯于订阅SaaS产品，所以这就是我们的路线。<p>无论如何，这就是我们，希望你能尝试一下（<a href=\"https://m3o.com\" rel=\"nofollow\">https://m3o.com</a>），并希望在评论中听到你的想法!",
  "description_zh-Hant": "大家好，我是阿西姆，M3O的創始人，這是一個精心策劃的API目錄，為最常見的API用例提供簡單的抽象。我們的想法是創建一個單一的地方來探索、發現和消費公共API，作為更高層次的構件。<p>大多數時候，我不會使用API的所有功能，我想大多數開發者也不會，所以挑選常見的模式，將其抽象化並浮出一個新的構件是很有用的。例如，Twilio有很多的API，但我只關心SMS。即使如此，我也只是想要一個快速發送的方法。因此，將其全部剝離的結果是一個端點和3個字段（從、到和消息）。<p>另一個例子是像電子郵件這樣的東西。有一些服務，如sendgrid，為電子郵件提供了非常豐富的體驗，但我只是在尋找一些簡單的東西，讓我發送純文本或html。<p>現在有許多API市場，但我們正在做一些不同的事情，我們的目標是提高生產力。例如，RapidAPI有數以千計的API，但有很多重複的地方。這對開發者來說是不堪重負的。選擇是生產力的敵人。另一方面，AWS提供了一個精心策劃的服務目錄，每個服務都專注於一個特定的問題。我們也有同樣的感覺：從API的角度來看，你只需要每個構件中的一個。你只需要一個短信、電子郵件或地理編碼服務。<p>自從2011年在谷歌擔任SRE，看到內部平臺和API如何被團隊使用後，我就一直痴迷於這個問題。隨後，我在一家名為Hailo的叫車服務創業公司工作，在那裡我們建立了類似的東西，並體驗了在簡單、容易發現的API之上運送產品的開發速度。在接下來的幾年裡，我一直在引導一個名為Micro的開源項目，試圖讓人們規範他們的API開發，以實現這一目標。<p>最終，我籌集到了資金，才真正開始行動。<p>我們的目標是建立一個API目錄，它可以作為大多數用例的構建模塊，然後在有大量需求的服務上加倍努力，以便我們能夠改進功能和可靠性。<p>在野外，每個API看起來都不一樣，文檔也不一樣，你必須弄清楚是否有客戶端庫。我們統一了所有這些，所以一切看起來和感覺都是一樣的。我們所有的文檔都是基於OpenAPI規範生成的，並且我們為JS、Go、Dart和CLI編碼生成示例/客戶端庫。這意味著你只需要一個客戶端來訪問所有這些API。<p>統一API開發和消費需要大量的資源來完成，因此它只發生在快速成長的初創公司和大型科技公司內部。有很多進入的障礙。開始並不容易。我們的方法是首先為自己開發API，然後專注於終端用戶的API消費--最終我們希望讓任何人在我們的平臺上提供API。這需要有足夠大規模的分銷和入站流量，以便對開發者產生吸引力。<p>我們已經花了一年時間來構建產品，並得到了很多關於什麼有效、什麼無效的反饋。我們已經註冊了8000人，提供了500萬個API請求，平臺上有60多個API。<p>關於計費：我們還在摸索，希望得到反饋。它開始是一個免費產品，然後轉為按請求定價。不幸的是，如果沒有大量的數量，這很難擴大規模，而且感覺人們更習慣於訂閱SaaS產品，所以這就是我們的路線。<p>無論如何，這就是我們，希望你能嘗試一下（<a href=\"https://m3o.com\" rel=\"nofollow\">https://m3o.com</a>），並希望在評論中聽到你的想法!"
}