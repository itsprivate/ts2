{
  "@type": "NewsArticle",
  "identifier": "2022--04--10--en--hackernews--HackerNews--NewsArticle--30974544",
  "url": "https://news.ycombinator.com/item?id=30974544",
  "headline": "Ask HN: How to improve as a struggling junior swe?",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Hello all,<p>I got my first swe job this past August and it honestly has not gone well. I've enjoyed it, but it is clear that I am not seen as reliable and definitely not known for completing things fast.<p>I know this sounds like a normal junior dev, but I mean more than a normal beginner. Example: I have now been on this team for 8 months, and I made 2 costly mistake back-to-back that is pushing back the release of a production feature by a while month at this point.<p>Long story short, screwed up a step I had done before in the fall without realizing. Then when it was fixed I submitted a ticket for a prod systems account rather than a QA one not realizing there would be a difference. (Just so many mistakes all in a row).<p>The struggles came way before this though. When I first joined I struggled to even know how to start things. I was sometimes assigned stories no one else on the team had done anything like before, so at times I couldn't even ask the senior devs for help.<p>This gets down to the issue. I don't think my team is necessarily the most ideal to learn on (my manager has been gone since December). The senior engineers also seem to assume I know more than I do (like the credentials above, it seems obvious there would be an account for QA and one for Prod, but I didn't know to assume that). But, the thing is though, this team isn't a bad one. I can make excuses all I want, but an experienced engineer joined the same time I did and is doing great.<p>I have identified some issues. I certainly didn't ask enough questions when I started and I definitely will wait around for people to get back to me sometimes rather then be proactive. I also tend to spend too long tackling an issue or trying to fix something I think I messed up rather than raise it to the team that I am having an issue. The problem is at this point I have been on the team too long to ask any basic questions, one of the senior engineers even pointed out they shouldn't be helping me with certain processes at this point.<p>Honestly, I am a little deflated. I know imposter syndrome is a thing, but that doesn't count when I am actively slowing the team down or causing problems. I take a really long time when finishing stories unless one of the seniors is giving input. It just sucks because I did well in my CS classes and worked hard, and I feel kinda like a disappointment. Its hard to imagine anyone who is good at engineering delaying a teams release and causing problems. I don't know anything about performance (again cause manager is gone) but if I get put on PIP because of this, I feel like I can't help but see it as a statement on my potential and ability.<p>I know I should just focus on improvement, but I am not sure how. Should I be writing reminders to myself to always double check everything? Should I write down the steps to every process? Its hard for me to know whats a junior engineer error and whats an error I shouldn't be making at all.",
  "keywords": [
    "Ask HN"
  ],
  "genre": "Ask HN",
  "author": {
    "@type": "Person",
    "name": "3a2d29",
    "url": "https://news.ycombinator.com/user?id=3a2d29"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30974544",
  "sameAs": "https://news.ycombinator.com/item?id=30974544",
  "dateCreated": "2022-04-10T05:49:52.692Z",
  "datePublished": "2022-04-10T04:46:12.000Z",
  "dateModified": "2022-04-10T05:49:52.692Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 9
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Ask HN: 作为一个挣扎的初级汗青，如何提高？",
  "headline_zh-Hant": "Ask HN: 作為一個掙扎的初級汗青，如何提高？",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "大家好！<p>今年8月，我得到了我的第一份汗水工作，说实话，这并不顺利。我很喜欢这份工作，但很明显，我不被认为是可靠的，而且绝对不是以快速完成事情而闻名。<p>我知道这听起来像一个普通的初级开发，但我的意思是比普通的初学者更多。例如。我加入这个团队已经8个月了，我接连犯了两个代价高昂的错误，使一个生产功能的发布时间推迟了好几个月。<p>长话短说，我在秋天的时候把一个步骤搞砸了，而没有意识到。然后当它被修复时，我提交了一个生产系统账户的票据，而不是QA账户，没有意识到会有区别。(只是连续犯了这么多错误)。<p>不过，在这之前就已经有了挣扎。当我刚加入时，我甚至不知道如何开始工作。有时我被分配到团队中没有人做过的故事，所以有时我甚至不能向高级开发人员寻求帮助。<p>这就涉及到了问题。我认为我的团队不一定是最理想的学习环境（我的经理从12月起就离开了）。高级工程师们似乎也认为我知道的比我多（就像上面的证书一样，似乎很明显有一个QA的账户和一个Prod的账户，但我不知道要假设这个）。但是，问题是，这个团队并不坏。我可以随便找借口，但一个有经验的工程师与我同时加入，而且做得很好。<p>我已经发现了一些问题。当我开始工作时，我当然没有问足够的问题，而且有时我肯定会等着别人给我答复，而不是主动出击。我也倾向于花太长时间来解决一个问题，或试图修复我认为自己搞砸的东西，而不是向团队提出我有一个问题。问题是在这一点上，我已经在团队中呆了太长时间，无法提出任何基本问题，其中一位高级工程师甚至指出，在这一点上他们不应该帮助我处理某些流程。<p>说实话，我有点泄气。我知道 \"冒名顶替综合症 \"是一种现象，但当我主动拖累团队或造成问题时，这并不算数。我在完成故事时花了很长时间，除非有一位前辈提供意见。这很糟糕，因为我在CS课上做得很好，也很努力，但我觉得自己有点像一个失望者。很难想象有谁在工程方面很出色，会拖延团队的发布并造成问题。我对业绩一无所知（又因为经理不在），但如果我因为这个被列入PIP，我觉得我不能不把它看作是对我的潜力和能力的一种声明。<p>我知道我应该专注于改进，但我不确定如何改进。我是否应该给自己写提醒，让自己总是反复检查每件事？我应该写下每个过程的步骤吗？我很难知道什么是初级工程师的错误，什么是我根本就不应该犯的错误。",
  "description_zh-Hant": "大家好！<p>今年8月，我得到了我的第一份汗水工作，說實話，這並不順利。我很喜歡這份工作，但很明顯，我不被認為是可靠的，而且絕對不是以快速完成事情而聞名。<p>我知道這聽起來像一個普通的初級開發，但我的意思是比普通的初學者更多。例如。我加入這個團隊已經8個月了，我接連犯了兩個代價高昂的錯誤，使一個生產功能的發佈時間推遲了好幾個月。<p>長話短說，我在秋天的時候把一個步驟搞砸了，而沒有意識到。然後當它被修復時，我提交了一個生產系統賬戶的票據，而不是QA賬戶，沒有意識到會有區別。(只是連續犯了這麼多錯誤)。<p>不過，在這之前就已經有了掙扎。當我剛加入時，我甚至不知道如何開始工作。有時我被分配到團隊中沒有人做過的故事，所以有時我甚至不能向高級開發人員尋求幫助。<p>這就涉及到了問題。我認為我的團隊不一定是最理想的學習環境（我的經理從12月起就離開了）。高級工程師們似乎也認為我知道的比我多（就像上面的證書一樣，似乎很明顯有一個QA的賬戶和一個Prod的賬戶，但我不知道要假設這個）。但是，問題是，這個團隊並不壞。我可以隨便找藉口，但一個有經驗的工程師與我同時加入，而且做得很好。<p>我已經發現了一些問題。當我開始工作時，我當然沒有問足夠的問題，而且有時我肯定會等著別人給我答覆，而不是主動出擊。我也傾向於花太長時間來解決一個問題，或試圖修復我認為自己搞砸的東西，而不是向團隊提出我有一個問題。問題是在這一點上，我已經在團隊中呆了太長時間，無法提出任何基本問題，其中一位高級工程師甚至指出，在這一點上他們不應該幫助我處理某些流程。<p>說實話，我有點洩氣。我知道 \"冒名頂替綜合症 \"是一種現象，但當我主動拖累團隊或造成問題時，這並不算數。我在完成故事時花了很長時間，除非有一位前輩提供意見。這很糟糕，因為我在CS課上做得很好，也很努力，但我覺得自己有點像一個失望者。很難想象有誰在工程方面很出色，會拖延團隊的發佈並造成問題。我對業績一無所知（又因為經理不在），但如果我因為這個被列入PIP，我覺得我不能不把它看作是對我的潛力和能力的一種聲明。<p>我知道我應該專注於改進，但我不確定如何改進。我是否應該給自己寫提醒，讓自己總是反覆檢查每件事？我應該寫下每個過程的步驟嗎？我很難知道什麼是初級工程師的錯誤，什麼是我根本就不應該犯的錯誤。"
}