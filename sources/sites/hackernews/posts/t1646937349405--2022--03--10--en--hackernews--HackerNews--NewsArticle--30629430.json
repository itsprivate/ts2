{
  "@type": "NewsArticle",
  "identifier": "2022--03--10--en--hackernews--HackerNews--NewsArticle--30629430",
  "url": "https://news.ycombinator.com/item?id=30629430",
  "headline": "A word used only by Postgres developers",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I came across a word in the Postgres source code that I'd never seen before: &quot;frammish&quot;.<p><a href=\"https://github.com/postgres/postgres/blob/master/src/backend/storage/lmgr/lwlock.c\" rel=\"nofollow\">https://github.com/postgres/postgres/blob/master/src/backend...</a> :<p>&gt; Therefore, they offer both exclusive and shared lock modes (to support read/write and read-only access to a shared object).  There are few other frammishes.  User-level locking should be done with the full lock manager --- which depends on LWLocks to protect its shared state.<p>It sort of makes sense in context, as a &quot;feature&quot; or a &quot;flourish&quot;. It also appears on the pg_hackers mailing list:<p>&gt; There has been some talk of separating the power to create new users from the power of being superuser (although presumably only a superuser should be allowed to create new superusers).  If the planned pg_role rewrite gets submitted before the 8.1 feature freeze, I might look at adding that frammish into it.<p>and here, from 19 years ago:<p>&gt; And we get ragged on regularly for the non-SQL-standard features we've inherited from Berkeley Postgres (eg, the implicit-FROM frammish that was under discussion yesterday).<p>No amount of googling turns up a formal definition or usage outside of the Postgres community. &quot;frammish.org&quot; doesn't seem to be related.<p>Are Postgres developers starting to evolve their own dialect? Should we call an anthropologist?",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "ccleve",
    "url": "https://news.ycombinator.com/user?id=ccleve"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=30629430",
  "sameAs": "https://news.ycombinator.com/item?id=30629430",
  "dateCreated": "2022-03-10T18:35:49.405Z",
  "datePublished": "2022-03-10T17:17:01.000Z",
  "dateModified": "2022-03-10T18:35:49.405Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 46
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 8
    }
  ],
  "headline_zh-Hans": "只有Postgres开发者才会使用的一个词",
  "headline_zh-Hant": "只有Postgres開發者才會使用的一個詞",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "我在Postgres的源代码中发现了一个我从未见过的词：&quot;frammish&quot;。<p><a href=\"https://github.com/postgres/postgres/blob/master/src/backend/storage/lmgr/lwlock.c\" rel=\"nofollow\">https://github.com/postgres/postgres/blob/master/src/backend...</a> :<p>&gt; 因此，它们同时提供独占和共享锁模式（以支持对一个共享对象的读/写和只读访问）。 还有一些其他的框架。 用户级的锁应该由完整的锁管理器来完成----它依赖于LWLocks来保护其共享状态。<p>这在上下文中是有意义的，作为一个&quot;功能&quot;或者一个&quot;繁荣&quot;。它也出现在pg_hackers邮件列表中：<p>&gt; 有一些关于将创建新用户的权力与作为超级用户的权力分开的讨论（尽管据推测只有超级用户应该被允许创建新的超级用户）。 如果计划中的pg_role重写在8.1功能冻结前被提交，我可能会考虑将这个框架加入其中。<p>还有这里，来自19年前：<p>&gt; 我们经常因为从Berkeley Postgres继承的非SQL标准功能而被指责（例如，昨天正在讨论的隐式FROM框架）。 <p>在Google上搜索，没有发现Postgres社区以外的正式定义或用法。&quot;frammish.org&quot;似乎与此无关。<p>Postgres开发者是否开始发展自己的方言？我们是否应该找一位人类学家？",
  "description_zh-Hant": "我在Postgres的源代碼中發現了一個我從未見過的詞：&quot;frammish&quot;。<p><a href=\"https://github.com/postgres/postgres/blob/master/src/backend/storage/lmgr/lwlock.c\" rel=\"nofollow\">https://github.com/postgres/postgres/blob/master/src/backend...</a> :<p>&gt; 因此，它們同時提供獨佔和共享鎖模式（以支持對一個共享對象的讀/寫和只讀訪問）。 還有一些其他的框架。 用戶級的鎖應該由完整的鎖管理器來完成----它依賴於LWLocks來保護其共享狀態。<p>這在上下文中是有意義的，作為一個&quot;功能&quot;或者一個&quot;繁榮&quot;。它也出現在pg_hackers郵件列表中：<p>&gt; 有一些關於將創建新用戶的權力與作為超級用戶的權力分開的討論（儘管據推測只有超級用戶應該被允許創建新的超級用戶）。 如果計劃中的pg_role重寫在8.1功能凍結前被提交，我可能會考慮將這個框架加入其中。<p>還有這裡，來自19年前：<p>&gt; 我們經常因為從Berkeley Postgres繼承的非SQL標準功能而被指責（例如，昨天正在討論的隱式FROM框架）。 <p>在Google上搜索，沒有發現Postgres社區以外的正式定義或用法。&quot;frammish.org&quot;似乎與此無關。<p>Postgres開發者是否開始發展自己的方言？我們是否應該找一位人類學家？"
}