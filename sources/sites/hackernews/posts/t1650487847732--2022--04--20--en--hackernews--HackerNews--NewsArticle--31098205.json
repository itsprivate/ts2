{
  "@type": "NewsArticle",
  "identifier": "2022--04--20--en--hackernews--HackerNews--NewsArticle--31098205",
  "url": "https://news.ycombinator.com/item?id=31098205",
  "headline": "Show HN: DTL: a language and JavaScript lib to transform and manipulate data",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "DTL is a project that began it's life as part of a another piece of software for a startup I founded a few years ago. \nFor that project I needed a way to describe how to rewrite data in a portable way. I needed to be able to create the rules on the fly and store them in a database, I needed them to be able to describe transformations I hadn't thought about, but also needed them to be safe and predictable. Though the startup didn't survive, the language I made was so useful to me I felt I had to extract it and make it usable to everyone. DTL is the result. Though the npm module is relatively new, the language itself has been in use in production systems for years. Over the past couple of years I have been working to make it more accessible and useful to newcomers. Though it's really powerful, I tried to make it easy to use and simple to understand so that you can get up to speed quickly and use only as much as you need.<p>To summarize: DTL is a javascript module and related CLI tools that are really handy for transforming data from one format to another.  It's made to allow you to specify your transformations as data (JSON by default) which means they are easily shared from frontend to backend and vice versa, as well as making them easily stored in databases, etc. It can be used as part of your project to transform data between APIs, between the frontend and your database, etc. and can do simple mappings as well as complex calculations. It can also be used for validation and is really handy for extracting useful information from large / complex datasets (there are some great examples of this you can try on the website). The CLI tool (dtl) is like jq on sterooids, allowing you to slice, dice and remap csv, yaml, json or even plaintext data doing anything you can describe in a DTL transform. If you ever wished you could `grep` in complex data structures, today is your lucky day. :)<p>I'd love any feedback you have and if you think of anything it doesn't have that it should, I'd love to hear that too.",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "jk0ne",
    "url": "https://news.ycombinator.com/user?id=jk0ne"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31098205",
  "sameAs": "https://getdtl.org/",
  "dateCreated": "2022-04-20T20:50:47.732Z",
  "datePublished": "2022-04-20T15:20:43.000Z",
  "dateModified": "2022-04-20T20:50:47.732Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 14
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 1
    }
  ],
  "headline_zh-Hans": "Show HN: DTL：一种用于转换和处理数据的语言和JavaScript库",
  "headline_zh-Hant": "Show HN: DTL：一種用於轉換和處理數據的語言和JavaScript庫",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "DTL是一个项目，它是作为我几年前创立的一家创业公司的另一个软件的一部分而开始的。\n在那个项目中，我需要一种方法来描述如何以一种可移植的方式重写数据。我需要能够即时创建规则并将其存储在数据库中，我需要它们能够描述我未曾想过的转换，但也需要它们是安全和可预测的。虽然这个初创公司没有存活下来，但我做的语言对我来说非常有用，我觉得我必须把它提取出来，让大家都能用。DTL就是这样的结果。虽然npm模块相对较新，但该语言本身已经在生产系统中使用了多年。在过去的几年里，我一直在努力使它更容易被接受，对新来者更有用。虽然它真的很强大，但我试图让它易于使用，简单易懂，这样你就可以快速上手，只使用你需要的部分。<p>总结一下。DTL是一个javascript模块和相关的CLI工具，对于将数据从一种格式转换为另一种格式来说，确实很方便。 它允许你将你的转换指定为数据（默认为JSON），这意味着它们很容易从前端共享到后端，反之亦然，同时也使它们很容易存储在数据库中，等等。它可以作为你项目的一部分，在API之间、在前端和你的数据库之间进行数据转换，并且可以进行简单的映射和复杂的计算。它还可以用于验证，对于从大型/复杂的数据集中提取有用的信息非常方便（在网站上有一些很好的例子你可以尝试）。CLI工具（dtl）就像sterooids上的jq，允许你对csv、yaml、json或甚至纯文本数据进行切片、切块和重新映射，做任何你能在DTL转换中描述的事情。如果你曾经希望你能在复杂的数据结构中`grep'，今天是你的幸运日。 :)<p>我喜欢你的任何反馈，如果你认为它没有任何应该有的东西，我也很想听到。",
  "description_zh-Hant": "DTL是一個項目，它是作為我幾年前創立的一家創業公司的另一個軟件的一部分而開始的。\n在那個項目中，我需要一種方法來描述如何以一種可移植的方式重寫數據。我需要能夠即時創建規則並將其存儲在數據庫中，我需要它們能夠描述我未曾想過的轉換，但也需要它們是安全和可預測的。雖然這個初創公司沒有存活下來，但我做的語言對我來說非常有用，我覺得我必須把它提取出來，讓大家都能用。DTL就是這樣的結果。雖然npm模塊相對較新，但該語言本身已經在生產系統中使用了多年。在過去的幾年裡，我一直在努力使它更容易被接受，對新來者更有用。雖然它真的很強大，但我試圖讓它易於使用，簡單易懂，這樣你就可以快速上手，只使用你需要的部分。<p>總結一下。DTL是一個javascript模塊和相關的CLI工具，對於將數據從一種格式轉換為另一種格式來說，確實很方便。 它允許你將你的轉換指定為數據（默認為JSON），這意味著它們很容易從前端共享到後端，反之亦然，同時也使它們很容易存儲在數據庫中，等等。它可以作為你項目的一部分，在API之間、在前端和你的數據庫之間進行數據轉換，並且可以進行簡單的映射和複雜的計算。它還可以用於驗證，對於從大型/複雜的數據集中提取有用的信息非常方便（在網站上有一些很好的例子你可以嘗試）。CLI工具（dtl）就像sterooids上的jq，允許你對csv、yaml、json或甚至純文本數據進行切片、切塊和重新映射，做任何你能在DTL轉換中描述的事情。如果你曾經希望你能在複雜的數據結構中`grep'，今天是你的幸運日。 :)<p>我喜歡你的任何反饋，如果你認為它沒有任何應該有的東西，我也很想聽到。"
}