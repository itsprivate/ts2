{
  "@type": "NewsArticle",
  "identifier": "2022--08--24--en--hackernews--HackerNews--NewsArticle--32577624",
  "url": "https://news.ycombinator.com/item?id=32577624",
  "headline": "Building a back end from scratch using only OpenAI Codex",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "I've published the sources for the code generation and the code that was generated on GitHub: <a href=\"https://github.com/sturdy-dev/codeball-todo-mvc\" rel=\"nofollow\">https://github.com/sturdy-dev/codeball-todo-mvc</a><p>I've been experimenting with merging prompts together, with a goal to write the full backend in a single prompt.<p>On the form:<p>&gt; 1. Setup a flask web server<p>&gt; 2. Add a /add endpoint<p>It works reasonably well, but it seems like it's loosing some precision in the prompts... The person that coined the term &quot;prompt engineering&quot; was right, it's really important to learn what words to use to get the AI to do exactly what you want it to do.",
  "keywords": [],
  "author": {
    "@type": "Person",
    "name": "zegl",
    "url": "https://news.ycombinator.com/user?id=zegl"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=32577624",
  "sameAs": "https://codeball.ai/blog/codex-todo-mvc",
  "dateCreated": "2022-08-24T19:30:27.287Z",
  "datePublished": "2022-08-24T10:52:14.000Z",
  "dateModified": "2022-08-24T19:30:27.287Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 7
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "仅使用OpenAI Codex从头开始构建后端\n",
  "headline_zh-Hant": "僅使用OpenAI Codex從頭開始構建後端\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "I've published the sources for the code generation and the code that was generated on GitHub: <a href=\"https://github.com/sturdy-dev/codeball-todo-mvc\" rel=\"nofollow\">https://github.com/sturdy-dev/codeball-todo-mvc</a><p>I've been experimenting with merging prompts together, with a goal to write the full backend in a single prompt.<p>On the form:<p>&gt; 1. Setup a flask web server<p>&gt; 2. Add a /add endpoint<p>It works reasonably well, but it seems like it's loosing some precision in the prompts... The person that coined the term &quot;prompt engineering&quot; was right, it's really important to learn what words to use to get the AI to do exactly what you want it to do.\n",
  "description_zh-Hant": "I've published the sources for the code generation and the code that was generated on GitHub: <a href=\"https://github.com/sturdy-dev/codeball-todo-mvc\" rel=\"nofollow\">https://github.com/sturdy-dev/codeball-todo-mvc</a><p>I've been experimenting with merging prompts together, with a goal to write the full backend in a single prompt.<p>On the form:<p>&gt; 1. Setup a flask web server<p>&gt; 2. Add a /add endpoint<p>It works reasonably well, but it seems like it's loosing some precision in the prompts... The person that coined the term &quot;prompt engineering&quot; was right, it's really important to learn what words to use to get the AI to do exactly what you want it to do.\n"
}