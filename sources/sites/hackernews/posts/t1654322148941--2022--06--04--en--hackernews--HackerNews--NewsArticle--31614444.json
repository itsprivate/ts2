{
  "@type": "NewsArticle",
  "identifier": "2022--06--04--en--hackernews--HackerNews--NewsArticle--31614444",
  "url": "https://news.ycombinator.com/item?id=31614444",
  "headline": "Show HN: ModelRunner – open source, speech-enabled data management platform",
  "publisher": {
    "@type": "Organization",
    "name": "HackerNews",
    "url": "https://news.ycombinator.com",
    "logo": "https://hn.buzzing.cc/avatar.png"
  },
  "description": "Warning: this whole post is a blatant plug for my Open Source project <a href=\"https://github.com/etiennesillon/ModelRunner\" rel=\"nofollow\">https://github.com/etiennesillon/ModelRunner</a><p>There is lot of discussion around no code platforms and why developers don’t like them. My view is that they can be very useful to quickly get through the boring parts of a project, like creating master data management screens for example. So I’ve built my own version which interprets models at run time and, it turns out, understands natural language queries too!<p>Hi, my name is Etienne, I love coding and I’ve been doing it for a few decades now so I’d rather focus on code that keeps me interested. Unfortunately, I find that there is always a lot to code before I get to the interesting stuff. So, like every other half-decent programmer, I’ve always tried to automate as much as possible and build reusable libraries by adding levels of indirection and parameters.<p>I’ve been doing this for so long now that my code has become ‘hyper’ parameterised, so much so that I had to store all the parameters in configuration files. These evolved into complete models which are basically a mix between ER models and UML diagrams: they include Entities and Attributes but also support all UML relationships (plus Back References) as well as formulas in object notation like “Product.Name” and “Sum(OrderLines.Amount)”. I’ve even extended the idea to include workflow models to specify what happens when an object is created, updated or deleted or when a pre-requisite condition becomes true.<p>To simplify managing the models, I’ve written a graphical editor, starting with Eclipse GEF but since I like to reinvent the wheel, I moved to plain HTML5/JS. To make it even easier, I’ve added Google Speech Recognition so I can now design models by just talking to Chrome and when I’m done, I can deploy them with one click or by saying something like ‘please deploy the application’. This will create a schema for the data and the ‘meta’ application will be ready to offer standard, web based, data management screens.<p>At this stage you’re probably thinking “Great, you can design and deploy data driven apps with your voice, so what?”<p>Ok, let’s move on to something more interesting then, which is what the ‘meta’ app can do because it has access to all the information in the model at run time, like for example, the ability to manipulate the data using natural language queries.<p>This works because having access to the semantics in the model removes the current gap between Machine Learning based Natural Language Understanding systems, which are very flexible but mostly ignorant of the domain model and, on the other hand, old fashioned back end systems with very rigid APIs. You can find a more detailed discussion here: <a href=\"https://modeling-languages.com/modelrunner-open-source-no-code-nlu-voice-modeling-data-platform/\" rel=\"nofollow\">https://modeling-languages.com/modelrunner-open-source-no-co...</a>.<p>So I’ve also added Google Speech Recognition to the ‘meta’ application and I can now just speak to it and tell it to “create a city called Melbourne and set postcode to 3000 and set notes to the most liveable city in the world” or “get me a list of customers living in Sydney aged 40” which I think is pretty cool and almost justifies all the hours and late nights I’ve spent coding it!<p>I think this has pretty obvious applications like for example, being able to manage your data on the go by just talking to your phone instead of trying to use a GUI on a small screen.<p>So, I highly recommend the parameterised indirection approach but if you don’t have a lot of time to write your own code, you might want to have a look at mine, it’s all Open Source with an MIT license: <a href=\"https://github.com/etiennesillon/ModelRunner\" rel=\"nofollow\">https://github.com/etiennesillon/ModelRunner</a>.<p>Or, if you just want to try it or watch a demo, just head to <a href=\"https://modelrunner.org\" rel=\"nofollow\">https://modelrunner.org</a>.<p>Now, it’s still very much a work in progress and I’ve spent more time on the core engine than on the UI so if you try to break it, you probably will! But, if you give it a try, please let me know how you went!<p>Thank you!",
  "keywords": [
    "Show HN"
  ],
  "genre": "Show HN",
  "author": {
    "@type": "Person",
    "name": "Etienne68",
    "url": "https://news.ycombinator.com/user?id=Etienne68"
  },
  "discussionUrl": "https://news.ycombinator.com/item?id=31614444",
  "sameAs": "https://modelrunner.org/",
  "dateCreated": "2022-06-04T05:55:48.941Z",
  "datePublished": "2022-06-03T22:26:12.000Z",
  "dateModified": "2022-06-04T05:55:48.941Z",
  "interactionStatistic": [
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "LikeAction"
      },
      "userInteractionCount": 3
    },
    {
      "@type": "InteractionCounter",
      "interactionType": {
        "@type": "CommentAction"
      },
      "userInteractionCount": 0
    }
  ],
  "headline_zh-Hans": "Show HN: ModelRunner - 开源的、支持语音的数据管理平台\n",
  "headline_zh-Hant": "Show HN: ModelRunner - 開源的、支持語音的數據管理平臺\n",
  "@context": [
    "https://schema.org",
    {
      "@vocab": "http://schema.org/",
      "@language": "en",
      "headline_zh-Hans": {
        "@id": "headline",
        "@language": "zh-Hans"
      },
      "headline_zh-Hant": {
        "@id": "headline",
        "@language": "zh-Hant"
      },
      "@version": 1.1,
      "description_zh-Hans": {
        "@id": "description",
        "@language": "zh-Hans"
      },
      "description_zh-Hant": {
        "@id": "description",
        "@language": "zh-Hant"
      }
    }
  ],
  "description_zh-Hans": "警告：这篇文章是对我的开源项目<a href=\"https://github.com/etiennesillon/ModelRunner\" rel=\"nofollow\">https://github.com/etiennesillon/ModelRunner</a><p>围绕无代码平台有很多讨论，为什么开发者不喜欢它们。我的观点是，它们对于快速完成项目中的无聊部分非常有用，例如创建主数据管理屏幕。所以我建立了自己的版本，它在运行时解释模型，而且事实证明，它也能理解自然语言查询！<p>你好，我叫Etienne，我喜欢编码，我已经做了几十年了，所以我宁愿专注于让我感兴趣的代码。不幸的是，我发现在我接触到有趣的东西之前，总是有很多东西需要编码。所以，就像其他半成品程序员一样，我总是试图尽可能多地实现自动化，并通过增加指令和参数的层次来建立可重用的库。<p>我已经这样做了很久，我的代码已经变得 \"超 \"参数化，以至于我不得不将所有的参数存储在配置文件中。这些演变成完整的模型，基本上是ER模型和UML图的混合体：它们包括实体和属性，但也支持所有UML关系（加上反向引用）以及对象符号的公式，如 \"Product.Name \"和 \"Sum(OrderLines.Amount)\"。我甚至扩展了这个想法，包括工作流模型，以指定当一个对象被创建、更新或删除时，或者当一个前提条件为真时，会发生什么。<p>为了简化模型的管理，我写了一个图形编辑器，从Eclipse GEF开始，但由于我喜欢重新发明轮子，我转而使用普通的HTML5/JS。To make it even easier, I’ve added Google Speech Recognition so I can now design models by just talking to Chrome and when I’m done, I can deploy them with one click or by saying something like ‘please deploy the application’. This will create a schema for the data and the ‘meta’ application will be ready to offer standard, web based, data management screens.<p>At this stage you’re probably thinking “Great, you can design and deploy data driven apps with your voice, so what?”<p>Ok, let’s move on to something more interesting then, which is what the ‘meta’ app can do because it has access to all the information in the model at run time, like for example, the ability to manipulate the data using natural language queries. <p>This works because having access to the semantics in the model removes the current gap between Machine Learning based Natural Language Understanding systems, which are very flexible but mostly ignorant of the domain model and, on the other hand, old fashioned back end systems with very rigid APIs. You can find a more detailed discussion here: <a href=\"https://modeling-languages.com/modelrunner-open-source-no-code-nlu-voice-modeling-data-platform/\" rel=\"nofollow\">https://modeling-languages.com/modelrunner-open-source-no-co...</a>.<p>So I’ve also added Google Speech Recognition to the ‘meta’ application and I can now just speak to it and tell it to “create a city called Melbourne and set postcode to 3000 and set notes to the most liveable city in the world” or “get me a list of customers living in Sydney aged 40” which I think is pretty cool and almost justifies all the hours and late nights I’ve spent coding it! <p>I think this has pretty obvious applications like for example, being able to manage your data on the go by just talking to your phone instead of trying to use a GUI on a small screen.<p>So, I highly recommend the parameterised indirection approach but if you don’t have a lot of time to write your own code, you might want to have a look at mine, it’s all Open Source with an MIT license: <a href=\"https://github.com/etiennesillon/ModelRunner\" rel=\"nofollow\">https://github.com/etiennesillon/ModelRunner</a>.<p>Or, if you just want to try it or watch a demo, just head to <a href=\"https://modelrunner.org\" rel=\"nofollow\">https://modelrunner.org</a>.<p>Now, it’s still very much a work in progress and I’ve spent more time on the core engine than on the UI so if you try to break it, you probably will! But, if you give it a try, please let me know how you went!<p>Thank you!\n",
  "description_zh-Hant": "警告：這篇文章是對我的開源項目<a href=\"https://github.com/etiennesillon/ModelRunner\" rel=\"nofollow\">https://github.com/etiennesillon/ModelRunner</a><p>圍繞無代碼平臺有很多討論，為什麼開發者不喜歡它們。我的觀點是，它們對於快速完成項目中的無聊部分非常有用，例如創建主數據管理屏幕。所以我建立了自己的版本，它在運行時解釋模型，而且事實證明，它也能理解自然語言查詢！<p>你好，我叫Etienne，我喜歡編碼，我已經做了幾十年了，所以我寧願專注於讓我感興趣的代碼。不幸的是，我發現在我接觸到有趣的東西之前，總是有很多東西需要編碼。所以，就像其他半成品程序員一樣，我總是試圖儘可能多地實現自動化，並通過增加指令和參數的層次來建立可重用的庫。<p>我已經這樣做了很久，我的代碼已經變得 \"超 \"參數化，以至於我不得不將所有的參數存儲在配置文件中。這些演變成完整的模型，基本上是ER模型和UML圖的混合體：它們包括實體和屬性，但也支持所有UML關係（加上反向引用）以及對象符號的公式，如 \"Product.Name \"和 \"Sum(OrderLines.Amount)\"。我甚至擴展了這個想法，包括工作流模型，以指定當一個對象被創建、更新或刪除時，或者當一個前提條件為真時，會發生什麼。<p>為了簡化模型的管理，我寫了一個圖形編輯器，從Eclipse GEF開始，但由於我喜歡重新發明輪子，我轉而使用普通的HTML5/JS。To make it even easier, I’ve added Google Speech Recognition so I can now design models by just talking to Chrome and when I’m done, I can deploy them with one click or by saying something like ‘please deploy the application’. This will create a schema for the data and the ‘meta’ application will be ready to offer standard, web based, data management screens.<p>At this stage you’re probably thinking “Great, you can design and deploy data driven apps with your voice, so what?”<p>Ok, let’s move on to something more interesting then, which is what the ‘meta’ app can do because it has access to all the information in the model at run time, like for example, the ability to manipulate the data using natural language queries. <p>This works because having access to the semantics in the model removes the current gap between Machine Learning based Natural Language Understanding systems, which are very flexible but mostly ignorant of the domain model and, on the other hand, old fashioned back end systems with very rigid APIs. You can find a more detailed discussion here: <a href=\"https://modeling-languages.com/modelrunner-open-source-no-code-nlu-voice-modeling-data-platform/\" rel=\"nofollow\">https://modeling-languages.com/modelrunner-open-source-no-co...</a>.<p>So I’ve also added Google Speech Recognition to the ‘meta’ application and I can now just speak to it and tell it to “create a city called Melbourne and set postcode to 3000 and set notes to the most liveable city in the world” or “get me a list of customers living in Sydney aged 40” which I think is pretty cool and almost justifies all the hours and late nights I’ve spent coding it! <p>I think this has pretty obvious applications like for example, being able to manage your data on the go by just talking to your phone instead of trying to use a GUI on a small screen.<p>So, I highly recommend the parameterised indirection approach but if you don’t have a lot of time to write your own code, you might want to have a look at mine, it’s all Open Source with an MIT license: <a href=\"https://github.com/etiennesillon/ModelRunner\" rel=\"nofollow\">https://github.com/etiennesillon/ModelRunner</a>.<p>Or, if you just want to try it or watch a demo, just head to <a href=\"https://modelrunner.org\" rel=\"nofollow\">https://modelrunner.org</a>.<p>Now, it’s still very much a work in progress and I’ve spent more time on the core engine than on the UI so if you try to break it, you probably will! But, if you give it a try, please let me know how you went!<p>Thank you!\n"
}