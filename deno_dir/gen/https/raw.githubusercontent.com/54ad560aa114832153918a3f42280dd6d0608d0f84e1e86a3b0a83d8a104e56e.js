import { filterFiles, getFiles, relative } from "../../../deps.ts";
const validSuffix = ["yml", "yaml"];
export function getFilesByFilter(cwd, files) {
    let relativePath = relative(Deno.cwd(), cwd);
    if (!relativePath.startsWith(".")) {
        relativePath = `./${relativePath}`;
    }
    const allFiles = getFiles({
        root: "./",
        hasInfo: false,
        exclude: [".git", ".github", ".vscode", ".vscode-test", "node_modules"],
    });
    const allYamlFiles = allFiles.filter((file) => validSuffix.includes(file.ext))
        .map((item) => item.path);
    return filterGlobFiles(allYamlFiles, files);
}
export function filterGlobFiles(allYamlFiles, globs) {
    const matchCondition = globs ?? ["workflows"];
    const matchConditionGlob = [];
    const anyMatch = [];
    matchCondition.forEach((item) => {
        if (!item.includes("*") && !validSuffix.includes(item)) {
            anyMatch.push(item);
        }
        matchConditionGlob.push(item);
    });
    let anyMatchedFiles = [];
    if (anyMatch.length > 0) {
        anyMatchedFiles = allYamlFiles.filter((file) => {
            let isMatch = false;
            anyMatch.forEach((item) => {
                if (file.includes(item)) {
                    isMatch = true;
                }
            });
            return isMatch;
        });
    }
    const globFiles = filterFiles(allYamlFiles, {
        match: matchConditionGlob,
        ignore: "",
    });
    const uniqueFiles = new Set([...anyMatchedFiles, ...globFiles]);
    return Array.from(uniqueFiles);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ25FLE1BQU0sV0FBVyxHQUFHLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBRXBDLE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxHQUFXLEVBQUUsS0FBZTtJQUUzRCxJQUFJLFlBQVksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzdDLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ2pDLFlBQVksR0FBRyxLQUFLLFlBQVksRUFBRSxDQUFDO0tBQ3BDO0lBRUQsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3hCLElBQUksRUFBRSxJQUFJO1FBQ1YsT0FBTyxFQUFFLEtBQUs7UUFDZCxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxjQUFjLEVBQUUsY0FBYyxDQUFDO0tBQ3hFLENBQUMsQ0FBQztJQUVILE1BQU0sWUFBWSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzNFLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLE9BQU8sZUFBZSxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWUsQ0FBQyxZQUFzQixFQUFFLEtBQWdCO0lBQ3RFLE1BQU0sY0FBYyxHQUFHLEtBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sa0JBQWtCLEdBQWEsRUFBRSxDQUFDO0lBQ3hDLE1BQU0sUUFBUSxHQUFhLEVBQUUsQ0FBQztJQUM5QixjQUFjLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3RELFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDckI7UUFDRCxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDLENBQUM7SUFDSCxJQUFJLGVBQWUsR0FBYSxFQUFFLENBQUM7SUFDbkMsSUFBSSxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUN2QixlQUFlLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQzdDLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNwQixRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQ3hCLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDdkIsT0FBTyxHQUFHLElBQUksQ0FBQztpQkFDaEI7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUNILE9BQU8sT0FBTyxDQUFDO1FBQ2pCLENBQUMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxNQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsWUFBWSxFQUFFO1FBQzFDLEtBQUssRUFBRSxrQkFBa0I7UUFDekIsTUFBTSxFQUFFLEVBQUU7S0FDWCxDQUFDLENBQUM7SUFFSCxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsZUFBZSxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNoRSxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDakMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZpbHRlckZpbGVzLCBnZXRGaWxlcywgcmVsYXRpdmUgfSBmcm9tIFwiLi4vLi4vLi4vZGVwcy50c1wiO1xuY29uc3QgdmFsaWRTdWZmaXggPSBbXCJ5bWxcIiwgXCJ5YW1sXCJdO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmlsZXNCeUZpbHRlcihjd2Q6IHN0cmluZywgZmlsZXM6IHN0cmluZ1tdKSB7XG4gIC8vIGdsb2IgYWxsIGZpbGVzXG4gIGxldCByZWxhdGl2ZVBhdGggPSByZWxhdGl2ZShEZW5vLmN3ZCgpLCBjd2QpO1xuICBpZiAoIXJlbGF0aXZlUGF0aC5zdGFydHNXaXRoKFwiLlwiKSkge1xuICAgIHJlbGF0aXZlUGF0aCA9IGAuLyR7cmVsYXRpdmVQYXRofWA7XG4gIH1cblxuICBjb25zdCBhbGxGaWxlcyA9IGdldEZpbGVzKHtcbiAgICByb290OiBcIi4vXCIsXG4gICAgaGFzSW5mbzogZmFsc2UsXG4gICAgZXhjbHVkZTogW1wiLmdpdFwiLCBcIi5naXRodWJcIiwgXCIudnNjb2RlXCIsIFwiLnZzY29kZS10ZXN0XCIsIFwibm9kZV9tb2R1bGVzXCJdLFxuICB9KTtcbiAgLy8gZmlsdGVyIG9ubHkgLnltbCAueWFtbCBmaWxlc1xuICBjb25zdCBhbGxZYW1sRmlsZXMgPSBhbGxGaWxlcy5maWx0ZXIoKGZpbGUpID0+IHZhbGlkU3VmZml4LmluY2x1ZGVzKGZpbGUuZXh0KSlcbiAgICAubWFwKChpdGVtKSA9PiBpdGVtLnBhdGgpO1xuICByZXR1cm4gZmlsdGVyR2xvYkZpbGVzKGFsbFlhbWxGaWxlcywgZmlsZXMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVyR2xvYkZpbGVzKGFsbFlhbWxGaWxlczogc3RyaW5nW10sIGdsb2JzPzogc3RyaW5nW10pIHtcbiAgY29uc3QgbWF0Y2hDb25kaXRpb24gPSBnbG9icyA/PyBbXCJ3b3JrZmxvd3NcIl07XG4gIGNvbnN0IG1hdGNoQ29uZGl0aW9uR2xvYjogc3RyaW5nW10gPSBbXTtcbiAgY29uc3QgYW55TWF0Y2g6IHN0cmluZ1tdID0gW107XG4gIG1hdGNoQ29uZGl0aW9uLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBpZiAoIWl0ZW0uaW5jbHVkZXMoXCIqXCIpICYmICF2YWxpZFN1ZmZpeC5pbmNsdWRlcyhpdGVtKSkge1xuICAgICAgYW55TWF0Y2gucHVzaChpdGVtKTtcbiAgICB9XG4gICAgbWF0Y2hDb25kaXRpb25HbG9iLnB1c2goaXRlbSk7XG4gIH0pO1xuICBsZXQgYW55TWF0Y2hlZEZpbGVzOiBzdHJpbmdbXSA9IFtdO1xuICBpZiAoYW55TWF0Y2gubGVuZ3RoID4gMCkge1xuICAgIGFueU1hdGNoZWRGaWxlcyA9IGFsbFlhbWxGaWxlcy5maWx0ZXIoKGZpbGUpID0+IHtcbiAgICAgIGxldCBpc01hdGNoID0gZmFsc2U7XG4gICAgICBhbnlNYXRjaC5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgIGlmIChmaWxlLmluY2x1ZGVzKGl0ZW0pKSB7XG4gICAgICAgICAgaXNNYXRjaCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGlzTWF0Y2g7XG4gICAgfSk7XG4gIH1cbiAgY29uc3QgZ2xvYkZpbGVzID0gZmlsdGVyRmlsZXMoYWxsWWFtbEZpbGVzLCB7XG4gICAgbWF0Y2g6IG1hdGNoQ29uZGl0aW9uR2xvYixcbiAgICBpZ25vcmU6IFwiXCIsXG4gIH0pO1xuICAvLyB1bmlxdWUgZmlsZXNcbiAgY29uc3QgdW5pcXVlRmlsZXMgPSBuZXcgU2V0KFsuLi5hbnlNYXRjaGVkRmlsZXMsIC4uLmdsb2JGaWxlc10pO1xuICByZXR1cm4gQXJyYXkuZnJvbSh1bmlxdWVGaWxlcyk7XG59XG4iXX0=