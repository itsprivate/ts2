import { runScript } from "./utils/run-script.ts";
import { assert } from "../../deps.ts";
export async function runAssert(ctx, step) {
    const { reporter } = step;
    if (step.assert) {
        try {
            const scriptResult = await runScript(`
        return DENOFLOW_ASSERT(${step.assert});
      `, {
                DENOFLOW_ASSERT: assert,
                ctx: ctx.public,
            });
            ctx.public.state = scriptResult.ctx.state;
        }
        catch (e) {
            reporter.warning(`Failed to run assert script code: ${step.assert}`);
            throw new Error(e);
        }
    }
    return ctx;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuLWFzc2VydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInJ1bi1hc3NlcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2xELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNdkMsTUFBTSxDQUFDLEtBQUssVUFBVSxTQUFTLENBQzdCLEdBQVksRUFDWixJQUFtQjtJQUVuQixNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBRTFCLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUVmLElBQUk7WUFDRixNQUFNLFlBQVksR0FBRyxNQUFNLFNBQVMsQ0FBQztpQ0FDVixJQUFJLENBQUMsTUFBTTtPQUNyQyxFQUFFO2dCQUNELGVBQWUsRUFBRSxNQUFNO2dCQUN2QixHQUFHLEVBQUMsR0FBRyxDQUFDLE1BQU07YUFDZixDQUFDLENBQUM7WUFDSCxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztTQUMzQztRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsUUFBUSxDQUFDLE9BQU8sQ0FDZCxxQ0FBcUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUNuRCxDQUFDO1lBQ0YsTUFBTSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwQjtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RlcE9wdGlvbnMgfSBmcm9tIFwiLi9pbnRlcmZhY2UudHNcIjtcbmltcG9ydCB7IENvbnRleHQgfSBmcm9tIFwiLi9pbnRlcm5hbC1pbnRlcmZhY2UudHNcIjtcbmltcG9ydCB7IGxvZyB9IGZyb20gXCIuLi8uLi9kZXBzLnRzXCI7XG5pbXBvcnQgeyBydW5TY3JpcHQgfSBmcm9tIFwiLi91dGlscy9ydW4tc2NyaXB0LnRzXCI7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiLi4vLi4vZGVwcy50c1wiO1xuXG5pbnRlcmZhY2UgUnVuU3RlcE9wdGlvbiBleHRlbmRzIFN0ZXBPcHRpb25zIHtcbiAgcmVwb3J0ZXI6IGxvZy5Mb2dnZXI7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBydW5Bc3NlcnQoXG4gIGN0eDogQ29udGV4dCxcbiAgc3RlcDogUnVuU3RlcE9wdGlvbixcbik6IFByb21pc2U8Q29udGV4dD4ge1xuICBjb25zdCB7IHJlcG9ydGVyIH0gPSBzdGVwO1xuICAvLyBjaGVjayBpZiBwb3N0XG4gIGlmIChzdGVwLmFzc2VydCkge1xuICAgIC8vIHJ1biBhc3NlcnRcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc2NyaXB0UmVzdWx0ID0gYXdhaXQgcnVuU2NyaXB0KGBcbiAgICAgICAgcmV0dXJuIERFTk9GTE9XX0FTU0VSVCgke3N0ZXAuYXNzZXJ0fSk7XG4gICAgICBgLCB7XG4gICAgICAgIERFTk9GTE9XX0FTU0VSVDogYXNzZXJ0LFxuICAgICAgICBjdHg6Y3R4LnB1YmxpYyxcbiAgICAgIH0pO1xuICAgICAgY3R4LnB1YmxpYy5zdGF0ZSA9IHNjcmlwdFJlc3VsdC5jdHguc3RhdGU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmVwb3J0ZXIud2FybmluZyhcbiAgICAgICAgYEZhaWxlZCB0byBydW4gYXNzZXJ0IHNjcmlwdCBjb2RlOiAke3N0ZXAuYXNzZXJ0fWAsXG4gICAgICApO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY3R4O1xufVxuIl19